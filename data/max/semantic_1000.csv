Cites,Authors,Title,Year,Source,Publisher,ArticleURL,CitesURL,GSRank,QueryDate,Type,DOI,ISSN,CitationURL,Volume,Issue,StartPage,EndPage,ECC,CitesPerYear,CitesPerAuthor,AuthorCount,Age,Abstract,FullTextURL,RelatedURL
51,"","Distributed Manufacturing of Open Source Medical Hardware for Pandemics",2020,"","","","",94,"2024-08-22 15:04:59","","10.20944/preprints202004.0054.v1","","",,,,,51,12.75,0,0,4,"Distributed digital manufacturing offers a solution to medical supply and technology shortages during pandemics. To prepare for the next pandemic, this study reviews the state-of-the-art of open hardware designs needed in a COVID-19-like pandemic. It evaluates the readiness of the top twenty technologies requested by the Government of India. The results show that the majority of the actual medical products have some open source development, however, only 15% of the supporting technologies required to produce them are freely available. The results show there is still considerable research needed to provide open source paths for the development of all the medical hardware needed during pandemics. Five core areas of future research are discussed, which include (i) technical development of a wide-range of open source solutions for all medical supplies and devices, (ii) policies that protect the productivity of laboratories, makerspaces, and fabrication facilities during a pandemic, as well as (iii) streamlining the regulatory process, (iv) developing Good-Samaritan laws to protect makers and designers of open medical hardware, as well as to compel those with knowledge that will save lives to share it, and (v) requiring all citizen-funded research to be released with free and open source licenses.","",""
118,"","HAWQ-V3: Dyadic Neural Network Quantization",2021,"","","","",520,"2024-08-22 15:04:59","","","","",,,,,118,39.33,0,0,3,"A number of frameworks (Abadi et al., 2016; Chen et al., 2015; 2018; Gulli & Pal, 2017; Jia et al., 2014; Paszke et al., 2017; Seide & Agarwal, 2016; Vasilache et al., 2018) have been developed for deep learning. Many (Abadi et al., 2016; Chen et al., 2015; Jia et al., 2014; Paszke et al., 2017) offer a dataflow DAG abstraction for specifying NN workloads and provide optimization support for inference as well as training with automatic differentiation. These frameworks significantly reduce development cycles for deep learning algorithms and thus facilitate innovations in deep learning. However, a majority of these frameworks (Chen et al., 2015; Jia et al., 2014; Paszke et al., 2017) adopt a library-based approach that maps the NN operations to hardware through existing high-performance libraries, such as cuDNN (Chetlur et al., 2014) for GPUs, and GEMMLOWP (Jacob et al., 2017) and NNPACK (Dukhan, 2016) for CPUs. These libraries currently do not support low-precision inference (INT4), and since they are not open source we could not add that functionality. As such, for our analysis we adopted to use TVM (Chen et al., 2018), which provides a general graph and a tensor expression intermediate representation (IR) to support automatic code transformation and generation. TVM also equips a QNN dialect (Jain et al., 2020) to compile the quantization-specific operators of a quantized model. We choose TVM as our deployment framework for several reasons including: (i) its extensive support in the frontend high-level frameworks and the backend hardware platforms; and (ii) its decoupled IR abstraction that separates the algorithm specifications and the scheduling decisions. Augmenting TVM with our mixed-precision quantization support allows this optimization to be used by NNs written in different frameworks as well as for various target hardware platforms. In addition, the decoupled IR design in TVM allows the mixed-precision quantization optimization to be applied without affecting the specification of algorithms.","",""
235,"A. Ainla, Maral P. S. Mousavi, M. Tsaloglou, Julia Redston, Jeffrey G Bell, M. T. Fernández-Abedul, G. Whitesides","Open-Source Potentiostat for Wireless Electrochemical Detection with Smartphones",2018,"","","","",229,"2024-08-22 15:04:59","","10.1021/acs.analchem.8b00850","","",,,,,235,39.17,34,7,6,"This paper describes the design and characterization of an open-source “universal wireless electrochemical detector” (UWED). This detector interfaces with a smartphone (or a tablet) using “Bluetooth Low Energy” protocol; the smartphone provides (i) a user interface for receiving the experimental parameters from the user and visualizing the result in real time, and (ii) a proxy for storing, processing, and transmitting the data and experimental protocols. This approach simplifies the design, and decreases both the size and the cost of the hardware; it also makes the UWED adaptable to different types of analyses by simple modification of the software. The UWED can perform the most common electroanalytical techniques of potentiometry, chronoamperometry, cyclic voltammetry, and square wave voltammetry, with results closely comparable to benchtop commercial potentiostats. Although the operating ranges of electrical current and voltage of the UWED (±1.5 V, ±180 μA) are more limited than most benchtop commercial potentiostats, its functional range is sufficient for most electrochemical analyses in aqueous solutions. Because the UWED is simple, small in size, assembled from inexpensive components, and completely wireless, it offers new opportunities for the development of affordable diagnostics, sensors, and wearable devices.","",""
19,"A. Alami, Y. Dittrich, A. Wąsowski","Influencers of Quality Assurance in an Open Source Community",2018,"","","","",267,"2024-08-22 15:04:59","","10.1145/3195836.3195853","","",,,,,19,3.17,6,3,6,"ROS (Robot Operating System) is an open source community in robotics that is developing standard robotics operating system facilities such as hardware abstraction, low-level device control, communication middleware, and a wide range of software components for robotics functionality. This paper studies the quality assurance practices of the ROS community. We use qualitative methods to understand how ideology, priorities of the community, culture, sustainability, complexity, and adaptability of the community affect the implementation of quality assurance practices. Our analysis suggests that software engineering practices require social and cultural alignment and adaptation to the community particularities to achieve seamless implementation in open source environments. This alignment should be incorporated into the design and implementation of quality assurance practices in open source communities.","",""
43,"A. Ali, C. Cote, Mohammad Heidarinejad, B. Stephens","Elemental: An Open-Source Wireless Hardware and Software Platform for Building Energy and Indoor Environmental Monitoring and Control",2019,"","","","",110,"2024-08-22 15:04:59","","10.3390/s19184017","","",,,,,43,8.60,11,4,5,"This work demonstrates an open-source hardware and software platform for monitoring the performance of buildings, called Elemental, that is designed to provide data on indoor environmental quality, energy usage, HVAC operation, and other factors to its users. It combines: (i) custom printed circuit boards (PCBs) with RFM69 frequency shift keying (FSK) radio frequency (RF) transceivers for wireless sensors, control nodes, and USB gateway, (ii) a Raspberry Pi 3B with custom firmware acting as either a centralized or distributed backhaul, and (iii) a custom dockerized application for the backend called Brood that serves as the director software managing message brokering via Message Queuing Telemetry Transport (MQTT) protocol using VerneMQ, database storage using InfluxDB, and data visualization using Grafana. The platform is built around the idea of a private, secure, and open technology for the built environment. Among its many applications, the platform allows occupants to investigate anomalies in energy usage, environmental quality, and thermal performance via a comprehensive dashboard with rich querying capabilities. It also includes multiple frontends to view and analyze building activity data, which can be used directly in building controls or to provide recommendations on how to increase operational efficiency or improve operating conditions. Here, we demonstrate three distinct applications of the Elemental platform, including: (1) deployment in a research lab for long-term data collection and automated analysis, (2) use as a full-home energy and environmental monitoring solution, and (3) fault and anomaly detection and diagnostics of individual building systems at the zone-level. Through these applications we demonstrate that the platform allows easy and virtually unlimited datalogging, monitoring, and analysis of real-time sensor data with low setup costs. Low-power sensor nodes placed in abundance in a building can also provide precise and immediate fault-detection, allowing for tuning equipment for more efficient operation and faster maintenance during the lifetime of the building.","",""
33,"A. Bianco, J. Finochietto, G. Galante, M. Mellia, F. Neri","Open-Source PC-Based Software Routers: A Viable Approach to High-Performance Packet Switching",2005,"","","","",462,"2024-08-22 15:04:59","","10.1007/978-3-540-30573-6_27","","",,,,,33,1.74,7,5,19,"","",""
47,"A. Bianco, R. Birke, D. Bolognesi, J. Finochietto, G. Galante, M. Mellia, M.L.N.P.P. Prashant, Ferrante Neri","Click vs. Linux: two efficient open-source IP network stacks for software routers",2005,"","","","",457,"2024-08-22 15:04:59","","10.1109/HPSR.2005.1503186","","",,,,,47,2.47,6,8,19,"Software routers based on off-the-shelf hardware and open-source operating systems are gaining more and more momentum. The reasons are manifold: first, personal computer (PC) hardware is broadly available at low cost; second, large-scale production and the huge market spur the manufacturers to closely track the improvements made available by Moore's Law; third, open-source software leaves the freedom to study the source code, learn from it, modify it to improve the performance, and tailor its operation to one's own needs. In this paper we focus only on the data plane performance and compare the default Linux IP stack with the Click modular IP stack in terms of the forwarding throughput. The results are surprising and show that a high-end PC is easily able to fit into the multi-Gigabit-per-second routing segment, for a price much lower than commercial routers.","",""
30,"A. Bonaccorsi, Cristina Rossi Lamastra, S. Giannangeli","Adaptive Entry Strategies Under Dominant Standards - Hybrid Business Models in the Open Source Software Industry",2004,"","","","",464,"2024-08-22 15:04:59","","10.2139/ssrn.519842","","",,,,,30,1.50,10,3,20,"During the '60s and the '70s, basically all software was Open Source and everyone was allowed to copy, modify and redistribute computer programs. When software ceased to be hardware-specific and the diffusion of computers took off, firms started to produce software independently from hardware and to protect their code through intellectual property rights. At present, a turnaround is taking place: the Open Source production mode is spreading across the software industry and, in some cases, it performs even better than the traditional proprietary one. Although a growing body of literature is analyzing Open Source software (OSS) issues, there is still lack of empirical data on the phenomenon, and little is known about firms that enter the software industry by producing under the Open Source license scheme (Open Source firms). This paper is a contribution to fill this gap and focuses on the business models of these firms. We find significant heterogeneity among them, in particular many agents supply both proprietary and Open Source software. We present a model of adoption that studies the intra-firm diffusion of the new paradigm. Explanatory hypotheses are discussed analyzing how the characteristics of the Open Source production mode and of network externalities in software demand shape the strategies of firms that entered the OSS field.","",""
48,"A. Bustamante, M. A. Patricio, J. M. Molina","Thinger.io: An Open Source Platform for Deploying Data Fusion Applications in IoT Environments",2019,"","","","",880,"2024-08-22 15:04:59","","10.3390/s19051044","","",,,,,48,9.60,16,3,5,"In the last two decades, data and information fusion has experienced significant development due mainly to advances in sensor technology. The sensors provide a continuous flow of data about the environment in which they are deployed, which is received and processed to build a dynamic estimation of the situation. With current technology, it is relatively simple to deploy a set of sensors in a specific geographic area, in order to have highly sensorized spaces. However, to be able to fusion and process the information coming from the data sources of a highly sensorized space, it is necessary to solve certain problems inherent to this type of technology. The challenge is analogous to what we can find in the field of the Internet of Things (IoT). IoT technology is characterized by providing the infrastructure capacity to capture, store, and process a huge amount of heterogeneous sensor data (in most cases, from different manufacturers), in the same way that it occurs in data fusion applications. This work is not simple, mainly due to the fact that there is no standardization of the technologies involved (especially within the communication protocols used by the connectable sensors). The solutions that we can find today are proprietary solutions that imply an important dependence and a high cost. The aim of this paper is to present a new open source platform with capabilities for the collection, management and analysis of a huge amount of heterogeneous sensor data. In addition, this platform allows the use of hardware-agnostic in a highly scalable and cost-effective manner. This platform is called Thinger.io. One of the main characteristics of Thinger.io is the ability to model sensorized environments through a high level language that allows a simple and easy implementation of data fusion applications, as we will show in this paper.","",""
180,"A. C. Jiménez","The Right to Infrastructure: A Prototype for Open Source Urbanism",2014,"","","","",321,"2024-08-22 15:04:59","","10.1068/d13077p","","",,,,,180,18.00,180,1,10,"This paper develops an analytical framework to place the rise of open source urbanism in context, and develops the concept of the ‘right to infrastructure’ as expressive of new ecologies of urban relations that have come into being. It describes, first, a genealogy for open source technology, focusing in particular on how open source urban hardware projects may challenge urban theory. It moves then to describe in detail various dimensions and implications of an open source infrastructural project in Madrid. In all, the paper analyses three challenges that the development of open source urban infrastructures is posing to the institutions of urban governance and property: the evolving shape and composition of urban ecologies; the technical and design challenges brought about by open source urban projects; and the social organisation of the ‘right to infrastructure’ as a political, active voice in urban governance. In the last instance, the right to infrastructure, I shall argue, signals the rise of the ‘prototype’ as an emerging figure for contemporary sociotechnical designs in and for social theory.","",""
15,"A. Drouin, M. Muller","Paparazzi - The free autopilot : build your own UAV",2007,"","","","",871,"2024-08-22 15:04:59","","","","",,,,,15,0.88,8,2,17,"Paparazzi is a free and open-source hardware and software project intended to create an exceptionally powerful and versatile autopilot system by allowing and encouraging input from the community. The project includes not only the airborne hardware and software, from voltage regulators and GPS receivers to Kalman filtering code, but also a powerful and ever-expanding array of ground hardware and software including modems, antennas, and a highly evolved user-friendly ground control software interface. All hardware and software is open-source and freely available to anyone under the GPL. The key feature of the Paparazzi autopilot is its unique combination of infrared thermopiles and inertial measurement for attitude sensing, providing a robust and accurate attitude estimate that requires no ground calibration and can recover from any launch attitude.","",""
376,"A. D’Ausilio","Arduino: A low-cost multipurpose lab equipment",2011,"","","","",596,"2024-08-22 15:04:59","","10.3758/s13428-011-0163-z","","",,,,,376,28.92,376,1,13,"","",""
49,"A. E. Kouche","Towards a wireless sensor network platform for the Internet of Things: Sprouts WSN platform",2012,"","","","",809,"2024-08-22 15:04:59","","10.1109/ICC.2012.6364196","","",,,,,49,4.08,49,1,12,"This paper describes a WSN platform architecture uniquely designed and implemented for the Internet of Things (IoTs). The paper elaborates on all the architectural design decisions and challenges across the three major divisions of the platform, that is, the middleware, hardware, and network layer. The result of this research is a unique WSN platform, Sprouts, which is rugged, cost effective, versatile, open source, and multistandard WSN platform that offers a step forward towards interoperable WSN platforms for the IoTs. Sprouts' architecture leverages state of the art technologies in hardware and network standards and builds upon our module-oriented DREAMS middleware architecture. Sprouts presents a much needed new approach that is different than the de-facto MSP430/AVR and Zigbee-based WSNs, and we discusses the reasons behind the necessary changes to meet the needs of IoT. Sprouts was tested in the harsh industrial environment of the Oil-Sands and showcased at the Ontario Centre of Excellence (OCE) Discovery of 2011.","",""
1537,"A. Edelstein, Mark A. Tsuchida, Nenad Amodaj, H. Pinkard, R. Vale, N. Stuurman","Advanced methods of microscope control using μManager software.",2014,"","","","",496,"2024-08-22 15:04:59","","10.14440/JBM.2014.36","","",,,,,1537,153.70,256,6,10,"μManager is an open-source, cross-platform desktop application, to control a wide variety of motorized microscopes, scientific cameras, stages, illuminators, and other microscope accessories. Since its inception in 2005, μManager has grown to support a wide range of microscopy hardware and is now used by thousands of researchers around the world. The application provides a mature graphical user interface and offers open programming interfaces to facilitate plugins and scripts. Here, we present a guide to using some of the recently added advanced μManager features, including hardware synchronization, simultaneous use of multiple cameras, projection of patterned light onto a specimen, live slide mapping, imaging with multi-well plates, particle localization and tracking, and high-speed imaging.","",""
35,"A. Ehliar, Dake Liu","An FPGA Based Open Source Network-on-Chip Architecture",2007,"","","","",447,"2024-08-22 15:04:59","","10.1109/FPL.2007.4380772","","",,,,,35,2.06,18,2,17,"Networks on chip (NoC) has long been seen as a potential solution to the problems encountered when implementing large digital hardware designs. In this paper we describe an open source FPGA based NoC architecture with low area overhead, high throughput and low latency compared to other published works. The architecture has been optimized for Xilinx FPGAs and the NoC is capable of operating at a frequency of 260 MHz in a Virtex-4 FPGA. We have also developed a bridge so that generic Wishbone bus compatible IP blocks can be connected to the NoC.","",""
472,"A. Espay, P. Bonato, Fatta B. Nahab, W. Maetzler, John Dean, J. Klucken, B. Eskofier, A. Merola, F. Horak, A. Lang, R. Reilmann, J. Giuffrida, A. Nieuwboer, M. Horne, Max A. Little, I. Litvan, T. Simuni, E. Dorsey, M. Burack, Ken Kubota, A. Kamondi, C. Godinho, J. Daneault, G. Mitsi, Lothar Krinke, J. Hausdorff, B. Bloem, S. Papapetropoulos","Technology in Parkinson's disease: Challenges and opportunities",2016,"","","","",530,"2024-08-22 15:04:59","","10.1002/mds.26642","","",,,,,472,59.00,47,28,8,"The miniaturization, sophistication, proliferation, and accessibility of technologies are enabling the capture of more and previously inaccessible phenomena in Parkinson's disease (PD). However, more information has not translated into a greater understanding of disease complexity to satisfy diagnostic and therapeutic needs. Challenges include noncompatible technology platforms, the need for wide‐scale and long‐term deployment of sensor technology (among vulnerable elderly patients in particular), and the gap between the “big data” acquired with sensitive measurement technologies and their limited clinical application. Major opportunities could be realized if new technologies are developed as part of open‐source and/or open‐hardware platforms that enable multichannel data capture sensitive to the broad range of motor and nonmotor problems that characterize PD and are adaptable into self‐adjusting, individualized treatment delivery systems. The International Parkinson and Movement Disorders Society Task Force on Technology is entrusted to convene engineers, clinicians, researchers, and patients to promote the development of integrated measurement and closed‐loop therapeutic systems with high patient adherence that also serve to (1) encourage the adoption of clinico‐pathophysiologic phenotyping and early detection of critical disease milestones, (2) enhance the tailoring of symptomatic therapy, (3) improve subgroup targeting of patients for future testing of disease‐modifying treatments, and (4) identify objective biomarkers to improve the longitudinal tracking of impairments in clinical care and research. This article summarizes the work carried out by the task force toward identifying challenges and opportunities in the development of technologies with potential for improving the clinical management and the quality of life of individuals with PD. © 2016 International Parkinson and Movement Disorder Society","",""
60,"A. Fanfarillo, T. Burnus, V. Cardellini, Salvatore Filippone, D. Nagle, D. Rouson","OpenCoarrays: Open-source Transport Layers Supporting Coarray Fortran Compilers",2014,"","","","",336,"2024-08-22 15:04:59","","10.1145/2676870.2676876","","",,,,,60,6.00,10,6,10,"Coarray Fortran is a set of features of the Fortran 2008 standard that make Fortran a PGAS parallel programming language. Two commercial compilers currently support coarrays: Cray and Intel. Here we present two coarray transport layers provided by the new OpenCoarrays project: one library based on MPI and the other on GASNet. We link the GNU Fortran (GFortran) compiler to either of the two OpenCoarrays implementations and present performance comparisons between executables produced by GFortran and the Cray and Intel compilers. The comparison includes synthetic benchmarks, application prototypes, and an application kernel. In our tests, Intel outperforms GFortran only on intra-node small transfers (in particular, scalars). GFortran outperforms Intel on intra-node array transfers and in all settings that require inter-node transfers. The Cray comparisons are mixed, with either GFortran or Cray being faster depending on the chosen hardware platform, network, and transport layer.","",""
100,"A. Galadima","Arduino as a learning tool",2014,"","","","",674,"2024-08-22 15:04:59","","10.1109/ICECCO.2014.6997577","","",,,,,100,10.00,100,1,10,"In this paper we shall take a brief look at the Arduino microcontroller and some of its applications and how it can be used in learning. Arduino is an open-source microcontroller used in electronic prototyping. Arduino hardware and its components shall be looked at. Software and the Environment that Arduino runs on are both looked at too. Some applications will be taken as examples that can help make learning Arduino more interesting. This can be used as a major way to encourage students and others to learn more about electronics and programming.","",""
13,"A. Gambardella, E. von Hippel","Open Sourcing as a Profit-Maximizing Strategy for Downstream Firms",2019,"","","","",919,"2024-08-22 15:04:59","","10.1287/STSC.2018.0075","","",,,,,13,2.60,7,2,5,"This paper characterizes and explores a corporate strategy in which downstream firms collaborate to develop open substitute designs for proprietary hardware they would otherwise purchase from upstr...","",""
62,"A. Giyenko, Young-Im Cho","Intelligent UAV in smart cities using IoT",2016,"","","","",704,"2024-08-22 15:04:59","","10.1109/ICCAS.2016.7832322","","",,,,,62,7.75,31,2,8,"The concept of a Smart City is becoming an increasingly important research area around the world. The amount of information collected and the number of stationary sensors, surveillance cameras and other devices that need to be places in a smart city is so vast that using a mobile platform to replace them can reduce the cost in both energy and resources. This paper proposes an open source intelligent IoT platform that would allow implementation of various Smart City services such as: smart home, smart unmanned aerial vehicle, smart energy grid, smart transportation systems and other possible future services that will evolve along with the consumer demand. A smart platform is enabled by Machine-to-Machine communications and multi-agent system architecture. Such a platform will allow solving multiple issues with the smart city implementation such as scalability, integration and interoperation of different IoT services and networks that are run on different hardware. We discuss the structure of such a platform.","",""
67,"A. Gleadall","FullControl GCode Designer: open-source software for unconstrained design in additive manufacturing",2021,"","","","",157,"2024-08-22 15:04:59","","10.31224/osf.io/3nmau","","",,,,,67,22.33,67,1,3,"A new concept is presented for the design of additive manufacturing procedures, which is implemented in open-source software called FullControl GCode Designer. In this new design approach, the user defines every segment of the print-path along with all printing parameters, which may be related to geometric and non-geometric factors, at all points along the print-path. Machine control code (GCode) is directly generated by the software, without the need for any programming skills and without using computer-aided design (CAD), STL-files or slicing software. Excel is used as the front end for the software, which is written in Visual Basic. Case studies are used to demonstrate the broad range of structures that can be designed using the software, including: precisely controlled specimens for printer calibration, parametric specimens for hardware characterisation utilising hundreds of unique parameter combinations, novel mathematically defined lattice structures, and previously inconceivable 3D geometries that are impossible for traditional slicing software to achieve. The FullControl design approach enables unconstrained freedom to create nonplanar 3D print-paths and break free from traditional restrictions of layerwise print-path planning. It also allows nozzle movements to be carefully designed - both during extrusion and while travelling between disconnected extrusion volumes - to overcome inherent limitations of the printing process or to improve capabilities for challenging materials. An industrial case study shows how explicit print-path design improved printer reliability, production time, and print quality for a production run of over 1,000 parts. FullControl GCode Designer offers a general framework for unconstrained design and is not limited to a particular type of structure or hardware; transferability to lasers and other manufacturing processes is discussed. Parametric design files use a few bytes or kilobytes of data to describe all details that are sent to the printer, which greatly improves shareability by eliminating any risk of errors being introduced during STL file conversion or due to different users having inconsistent slicer settings. Adjustable parameters allow GCode for revised designs to be produced instantly, instead of the laborious traditional routine using multiple software packages and file conversions. The FullControl design concept offers new opportunities for creative and high-precision use of additive manufacturing systems. It facilitates design for additive manufacturing (DfAM) at the smallest possible scale based on the fundamental nature of the process (i.e. assembly of individual extrusions). The software and source code are provided as supplementary data and ongoing updates to improve functionality and the user interface will be available at www.fullcontrolgcode.com.","",""
16,"A. Hansen, T. Howard","The Current State of Open Source Hardware: The Need for an Open Source Development Platform",2013,"","","","",102,"2024-08-22 15:04:59","","10.1007/978-81-322-1050-4_77","","",,,,,16,1.45,8,2,11,"","",""
6,"A. Herrera","The Promises and Challenges of Open Source Hardware",2020,"","","","",21,"2024-08-22 15:04:59","","10.1109/MC.2020.3011080","","",,,,,6,1.50,6,1,4,"Discusses the challenges associated with open source hardware. Over the last decade, open source hardware (OSHW) has matured, including a flourishing OSHW community developing projects like RISC-V. The new IEEE Standards Association Open platform enables proficiency and knowledge of OSHW’s potential and challenges.","",""
15,"A. Hill, Alasdair Davies, Peter Prince, Jake L. Snaddon, C. Patrick Doncaster, A. Rogers","Leveraging conservation action with open‐source hardware",2019,"","","","",27,"2024-08-22 15:04:59","","10.1111/conl.12661","","",,,,,15,3.00,3,6,5,"Data collection by conservation biologists is undergoing radical change, with researchers collaborating across disciplines to create bespoke, low‐cost monitoring equipment from open‐source hardware (OSH). Compared to commercial hardware, OSH dramatically reduces participation costs. Four barriers currently hold back its wide adoption: (1) user inexperience inhibits initial uptake; (2) complex and costly manufacturing/distribution procedures impede global dissemination; (3) lack of creator support results in lapsed projects; and (4) lack of user support degrades continued utility in the field. Here, we propose a framework to address these barriers, illustrating how OSH offers a route to rapid expansion of community‐driven conservation action.","",""
9,"A. J. Molina-Cantero, J. A. Castro-García, Clara Lebrato-Vázquez, I. M. Gómez-González, M. Monge","Real-Time Processing Library for Open-Source Hardware Biomedical Sensors",2018,"","","","",68,"2024-08-22 15:04:59","","10.3390/s18041033","","",,,,,9,1.50,2,5,6,"Applications involving data acquisition from sensors need samples at a preset frequency rate, the filtering out of noise and/or analysis of certain frequency components. We propose a novel software architecture based on open-software hardware platforms which allows programmers to create data streams from input channels and easily implement filters and frequency analysis objects. The performances of the different classes given in the size of memory allocated and execution time (number of clock cycles) were analyzed in the low-cost platform Arduino Genuino. In addition, 11 people took part in an experiment in which they had to implement several exercises and complete a usability test. Sampling rates under 250 Hz (typical for many biomedical applications) makes it feasible to implement filters, sliding windows and Fourier analysis, operating in real time. Participants rated software usability at 70.2 out of 100 and the ease of use when implementing several signal processing applications was rated at just over 4.4 out of 5. Participants showed their intention of using this software because it was percieved as useful and very easy to use. The performances of the library showed that it may be appropriate for implementing small biomedical real-time applications or for human movement monitoring, even in a simple open-source hardware device like Arduino Genuino. The general perception about this library is that it is easy to use and intuitive.","",""
79,"A. Javadi, Z. Hakimi, M. Barati, Vincent Walsh, L. Tcheang","SET: a pupil detection method using sinusoidal approximation",2015,"","","","",677,"2024-08-22 15:04:59","","10.3389/fneng.2015.00004","","",,,,,79,8.78,16,5,9,"Mobile eye-tracking in external environments remains challenging, despite recent advances in eye-tracking software and hardware engineering. Many current methods fail to deal with the vast range of outdoor lighting conditions and the speed at which these can change. This confines experiments to artificial environments where conditions must be tightly controlled. Additionally, the emergence of low-cost eye tracking devices calls for the development of analysis tools that enable non-technical researchers to process the output of their images. We have developed a fast and accurate method (known as “SET”) that is suitable even for natural environments with uncontrolled, dynamic and even extreme lighting conditions. We compared the performance of SET with that of two open-source alternatives by processing two collections of eye images: images of natural outdoor scenes with extreme lighting variations (“Natural”); and images of less challenging indoor scenes (“CASIA-Iris-Thousand”). We show that SET excelled in outdoor conditions and was faster, without significant loss of accuracy, indoors. SET offers a low cost eye-tracking solution, delivering high performance even in challenging outdoor environments. It is offered through an open-source MATLAB toolkit as well as a dynamic-link library (“DLL”), which can be imported into many programming languages including C# and Visual Basic in Windows OS (www.eyegoeyetracker.co.uk).","",""
15,"A. Kahng","Open-Source EDA: If We Build It, Who Will Come?",2020,"","","","",212,"2024-08-22 15:04:59","","10.1109/VLSI-SOC46417.2020.9344073","","",,,,,15,3.75,15,1,4,"The VLSI technology and scaling roadmap has always included Process technology (wrapped as “PDK”), VLSI designs themselves (“System Drivers”), and EDA technology (“Design Technology”). Today, we see an open-source foundry PDK, and we see a vibrant open-source hardware design ecosystem. But what about open-source EDA? The development of open-source EDA technology cannot be separated from the question, “If we build it, who will come?” Today's talk will try to provide some thoughts on this question. What is “it”? Who is “we”? Who is “who”? And in what ways will the “who” come to interact with open-source EDA?","",""
22,"A. Kahng, Tom Spyrou","The OpenROAD Project: Unleashing Hardware Innovation",2021,"","","","",368,"2024-08-22 15:04:59","","","","",,,,,22,7.33,11,2,3,"—The OpenROAD project develops an open-source RTL-to-GDS tool that generates manufacturable layout from a given hardware description – in 24 hours, with no human in the loop. The project is part of the IDEA program within the DARPA ERI. By reducing today’s cost, expertise and schedule barriers to hardware design, OpenROAD enables access to ASIC implementation, thus unleashing hardware innovation. This paper describes the status and outlook for OpenROAD as of its v1.0 release. The OpenROAD tool is integrated around an open-source, commercial-quality database and timing engine. A SkyWater 130nm tapeout was made by efabless.com in May 2020. DRC-clean layout generation in GLOBALFOUNDRIES 12nm was achieved in July 2020. OpenROAD’s futures include (i) serving as a foundation for academic research and teaching; (ii) seeding the transition of open-source EDA into government and commercial usage; and (iii) driving new machine learning research that further accelerates EDA and hardware innovation. With permissively open-sourced code, and no restrictions on sharing of scripts, OpenROAD enables transparency and reproducibility of hardware and EDA research, thus accelerating the pace of discovery.","",""
23,"A. Kist, Stephan Dürr, A. Schützenberger, M. Döllinger","OpenHSV: an open platform for laryngeal high-speed videoendoscopy",2021,"","","","",408,"2024-08-22 15:04:59","","10.1038/s41598-021-93149-0","","",,,,,23,7.67,6,4,3,"","",""
26,"A. Lasso, Tamas Heffter, C. Pinter, T. Ungi, G. Fichtinger","Implementation of the PLUS open-source toolkit for translational research of ultrasound-guided intervention systems",2012,"","","","",382,"2024-08-22 15:04:59","","10.54294/41fjl6","","",,,,,26,2.17,5,5,12,"This document describes the design of the PLUS (Public software Library for Ultrasound) open-source toolkit. The toolkit provides a basic infrastructure for implementing ultrasound-guided intervention systems. Functionalities include collection of synchronized ultrasound and position data from a wide variety of hardware devices, spatial and temporal calibration, volume reconstruction, live streaming to end-user applications, and recording to and replay from file. Source code, documentation, tutorials, application examples are available with a BSD-type license at the project website: www.assembla.com/spaces/plus.","",""
521,"A. Limaye","Drishti: a volume exploration and presentation tool",2012,"","","","",541,"2024-08-22 15:04:59","","10.1117/12.935640","","",,,,,521,43.42,521,1,12,"Among several rendering techniques for volumetric data, direct volume rendering is a powerful visualization tool for a wide variety of applications. This paper describes the major features of hardware based volume exploration and presentation tool - Drishti. The word, Drishti, stands for vision or insight in Sanskrit, an ancient Indian language. Drishti is a cross-platform open-source volume rendering system that delivers high quality, state of the art renderings. The features in Drishti include, though not limited to, production quality rendering, volume sculpting, multi-resolution zooming, transfer function blending, profile generation, measurement tools, mesh generation, stereo/anaglyph/crosseye renderings. Ultimately, Drishti provides an intuitive and powerful interface for choreographing animations.","",""
69,"A. M. Coffey, R. Shchepin, M. Truong, K. Wilkens, W. Pham, E. Chekmenev","Open-Source Automated Parahydrogen Hyperpolarizer for Molecular Imaging Using 13C Metabolic Contrast Agents",2016,"","","","",288,"2024-08-22 15:04:59","","10.1021/acs.analchem.6b02130","","",,,,,69,8.63,12,6,8,"An open-source hyperpolarizer producing 13C hyperpolarized contrast agents using parahydrogen induced polarization (PHIP) for biomedical and other applications is presented. This PHIP hyperpolarizer utilizes an Arduino microcontroller in conjunction with a readily modified graphical user interface written in the open-source processing software environment to completely control the PHIP hyperpolarization process including remotely triggering an NMR spectrometer for efficient production of payloads of hyperpolarized contrast agent and in situ quality assurance of the produced hyperpolarization. Key advantages of this hyperpolarizer include: (i) use of open-source software and hardware seamlessly allowing for replication and further improvement as well as readily customizable integration with other NMR spectrometers or MRI scanners (i.e., this is a multiplatform design), (ii) relatively low cost and robustness, and (iii) in situ detection capability and complete automation. The device performance is demonstrated by production of a dose (∼2–3 mL) of hyperpolarized 13C-succinate with %P13C ∼ 28% and 30 mM concentration and 13C-phospholactate at %P13C ∼ 15% and 25 mM concentration in aqueous medium. These contrast agents are used for ultrafast molecular imaging and spectroscopy at 4.7 and 0.0475 T. In particular, the conversion of hyperpolarized 13C-phospholactate to 13C-lactate in vivo is used here to demonstrate the feasibility of ultrafast multislice 13C MRI after tail vein injection of hyperpolarized 13C-phospholactate in mice.","",""
91,"A. Maia Chagas","Haves and have nots must find a better way: The case for open scientific hardware",2018,"","","","",318,"2024-08-22 15:04:59","","10.1371/journal.pbio.3000014","","",,,,,91,15.17,91,1,6,"Many efforts are making science more open and accessible; they are mostly concentrated on issues that appear before and after experiments are performed: open access journals, open databases, and many other tools to increase reproducibility of science and access to information. However, these initiatives do not promote access to scientific equipment necessary for experiments. Mostly due to monetary constraints, equipment availability has always been uneven around the globe, affecting predominantly low-income countries and institutions. Here, a case is made for the use of free open source hardware in research and education, including countries and institutions where funds were never the biggest problem.","",""
92,"A. Maia Chagas, Jennifer C Molloy, L. Prieto-Godino, T. Baden","Leveraging open hardware to alleviate the burden of COVID-19 on global health systems",2020,"","","","",276,"2024-08-22 15:04:59","","10.1371/journal.pbio.3000730","","",,,,,92,23.00,23,4,4,"With the current rapid spread of COVID-19, global health systems are increasingly overburdened by the sheer number of people that need diagnosis, isolation and treatment. Shortcomings are evident across the board, from staffing, facilities for rapid and reliable testing to availability of hospital beds and key medical-grade equipment. The scale and breadth of the problem calls for an equally substantive response not only from frontline workers such as medical staff and scientists, but from skilled members of the public who have the time, facilities and knowledge to meaningfully contribute to a consolidated global response. Here, we summarise community-driven approaches based on Free and Open Source scientific and medical Hardware (FOSH) as well as personal protective equipment (PPE) currently being developed and deployed to support the global response for COVID-19 prevention, patient treatment and diagnostics.","",""
19,"A. Määttä, P. Troxler","Developing open & distributed tools for Fablab project documentation",2011,"","","","",678,"2024-08-22 15:04:59","","","","",,,,,19,1.46,10,2,13,"Fablab project / HOWTO documentation sharing has not had a major focus on Fablab network development so far. To this end, a series of ""platform"" workshops and calls have been taking place as of August 2010, covering topics from (online) community development in general to formalizing project descriptions in order to accommodate different web platforms used in the distributed Fablab network (initial proposal for open hardware information interchange format - FabML)  The goal of the proposed talk is threefold:  1) To demonstrate the checking in & checking out concept for documenting Fablab projects on Drupal platform as part of the lab visit developed at ProtoSpace (Fablab Utrecht, NL) and use of Wordpress as documentation tool  2) To demonstrate project documentation aggregation from Fablabs using different open source content management systems used within the network (Drupal, Wordpress, Mediawiki being main ones currently in use), and first practical experiments with aggregation and FabML.  3) in the context of the Open Knowledge conference, opening a discussion on open documentation formats for open source hardware documentation.","",""
76,"A. Nayyar, Vikram Puri","A review of Arduino board's, Lilypad's & Arduino shields",2016,"","","","",679,"2024-08-22 15:04:59","","","","",,,,,76,9.50,38,2,8,"The word “Open Source” is everywhere with Linux Technology and GNU foundation. In addition to open source software's and operating systems, Open Source Hardware is also progressing and becoming center point of attraction for researchers across the nook and corner of the world. The most widely adopted Open Source hardware available right now is “Arduino”. Arduino has various products like boards, Lilypad's and shields. The aim of this research paper is to explore the world of Arduino technology in terms of Boards, Lilypad's and Shields covering in depth regarding-Technical Specifications, features and real-world applications. Arduino technology has enabled various manufactures and research enthusiasts to come out with their own customized boards and shields as per their research requirements and area of implementations. Arduino Open Source community is also providing platform for researchers to come up with innovative research applications and market ready products in terms of Home Automation, Robotics, Wireless Connectivity, Drones and many others.","",""
106,"A. Olofsson, Tomas Nordstrom, Z. Ul-Abdin","Kickstarting high-performance energy-efficient manycore architectures with Epiphany",2014,"","","","",661,"2024-08-22 15:04:59","","10.1109/ACSSC.2014.7094761","","",,,,,106,10.60,35,3,10,"In this paper we introduce Epiphany as a highperformance energy-efficient manycore architecture suitable for real-time embedded systems. This scalable architecture supports floating point operations in hardware and achieves 50 GFLOPS/W in 28 nm technology, making it suitable for high performance streaming applications like radio base stations and radar signal processing. Through an efficient 2D mesh Network-on-Chip and a distributed shared memory model, the architecture is scalable to thousands of cores on a single chip. An Epiphany-based open source computer named Parallella was launched in 2012 through Kickstarter crowd funding and has now shipped to thousands of customers around the world.","",""
19,"A. Panwar, Anand Singh, R. Kumawat, Siddharth Jaidka, K. Garg","Eyrie smart home automation using Internet of Things",2017,"","","","",795,"2024-08-22 15:04:59","","10.1109/SAI.2017.8252269","","",,,,,19,2.71,4,5,7,"This paper describes the use of various open source hardware such as Arduino, Raspberry Pi, etc. to build smart and secure homes. The hardware is open source and hence cost efficient. This home automation system allows the end user to monitor his home or office with a smartphone, tablet, or any computer. This paper also explains the use of the security system for fire hazards that may occur due to a gas leakage and can be detected using a smoke sensor. It uses a low power NRF24L trans-receiver at each node around the house to create a mesh network that connects to a Linux based central hub. Users can monitor the house from anywhere and get periodic alerts. In the proposed work, the house can also be controlled using voice commands such as Google Voice, Apple HomeKit and Alexa.","",""
100,"A. Parmiggiani, M. Maggiali, L. Natale, F. Nori, A. Schmitz, N. Tsagarakis, J. Santos-Victor, F. Becchi, G. Sandini, G. Metta","The Design of the iCub humanoid Robot",2012,"","","","",740,"2024-08-22 15:04:59","","10.1142/S0219843612500272","","",,,,,100,8.33,10,10,12,"This article describes the hardware design of the iCub humanoid robot. The iCub is an open-source humanoid robotic platform designed explicitly to support research in embodied cognition. This paper covers the mechanical and electronic design of the first release of the robot. A series upgrades developed for the second version of the robot (iCub2), which are aimed at the improvement of the mechanical and sensing performance, are also described.","",""
77,"A. Parsons, D. Backer, A. Siemion, Henry Chen, D. Werthimer, P. Droz, T. Filiba, J. Manley, P. McMahon, A. Parsa, D. MacMahon, M. Wright","A Scalable Correlator Architecture Based on Modular FPGA Hardware, Reuseable Gateware, and Data Packetization",2008,"","","","",626,"2024-08-22 15:04:59","","10.1086/593053","","",,,,,77,4.81,8,12,16,"A new generation of radio telescopes is achieving unprecedented levels of sensitivity and resolution, as well as increased agility and field of view, by employing high-performance digital signal-processing hardware to phase and correlate signals from large numbers of antennas. The computational demands of these imaging systems scale in proportion to BMN 2, where B is the signal bandwidth, M is the number of independent beams, and N is the number of antennas. The specifications of many new arrays lead to demands in excess of tens of PetaOps per second. To meet this challenge, we have developed a general-purpose correlator architecture using standard 10-Gbit Ethernet switches to pass data between flexible hardware modules containing Field Programmable Gate Array (FPGA) chips. These chips are programmed using open-source signal-processing libraries that we have developed to be flexible, scalable, and chip-independent. This work reduces the time and cost of implementing a wide range of signal-processing systems, with correlators foremost among them, and facilitates upgrading to new generations of processing technology. We present several correlator deployments, including a 16-antenna, 200-MHz bandwidth, 4-bit, full-Stokes parameter application deployed on the Precision Array for Probing the Epoch of Reionization.","",""
64,"A. Parsons, D. Backer, Chen Chang, D. Chapman, H. Chen, P. Crescini, C. de Jesus, C. Dick, P. Droz, D. MacMahon, K. Meder, J. Mock, V. Nagpal, B. Nikolić, A. Parsa, B. Richards, A. Siemion, J. Wawrzynek, D. Werthimer, M. Wright","PetaOp/Second FPGA Signal Processing for SETI and Radio Astronomy",2006,"","","","",841,"2024-08-22 15:04:59","","10.1109/ACSSC.2006.355123","","",,,,,64,3.56,6,20,18,"Our group, the Center for Astronomy Signal Processing and Electronics Research (CASPER), seeks to speed the development of radio astronomy signal processing instrumentation by designing and demonstrating a scalable, upgradeable, FPGA-based computing platform and software design methodology that targets a range of realtime radio telescope signal processing applications. This project relies on a small number of modular, connectible hardware components and open-source signal processing libraries which can be reused and scaled as hardware capabilities expand. ""We have demonstrated the use of 10 Gb Ethernet packetization and switches to manage high-bandwidth inter-board communication. Using these tools, we have built spectrometers, correlators, beamformers, VLBI data recorders, and many other applications. Future directions for the development include a fully packetized scalable correlator, additional library and toolfiow development, and a next generation of modular FPGA-based hardware.","",""
34,"A. Pathania, J. Henkel","HotSniper: Sniper-Based Toolchain for Many-Core Thermal Simulations in Open Systems",2019,"","","","",492,"2024-08-22 15:04:59","","10.1109/LES.2018.2866594","","",,,,,34,6.80,17,2,5,"This letter presents a toolchain called <italic>HotSniper</italic> developed by integrating <italic>HotSpot</italic> temperature modeling tool with <italic>Sniper</italic> many-core simulator. <italic>HotSniper</italic> allows for interval thermal simulation of many-cores, which is several times faster than the cycle-accurate many-core thermal simulations and at the same time is more accurate than trace-based many-core thermal simulations. <italic>HotSniper</italic> toolchain provides efficient means to perform thermal-aware hardware–software codesign of many-core processors in domain of embedded systems. The source code for <italic>HotSniper</italic> has been made public.","",""
56,"A. Petrasova, B. Harmon, V. Petras, H. Mitásová","Tangible Modeling with Open Source GIS",2015,"","","","",301,"2024-08-22 15:04:59","","10.1007/978-3-319-25775-4","","",,,,,56,6.22,14,4,9,"","",""
11,"A. Ribière","Emulation of obsolete hardware in open source virtualization software",2010,"","","","",304,"2024-08-22 15:04:59","","10.1109/INDIN.2010.5549393","","",,,,,11,0.79,11,1,14,"Nuclear Power plants are built to last 40 years. From the beginning of their lifetime up to now, dozens of specific, but not critical, applications have been developed. Their cost does not only reside in the development but mainly in the qualification and validation processes. Most of the time, once these applications have been commissioned and have fulfilled their functions, no functional or performance reason require them to be modified later on. They should stay unchanged during the whole lifetime of the plant. Meanwhile the hardware has changed many times; the average lifespan of a standard PC is 1 to 2 years. In order to cope with these frequent changes, we have come out with a new solution: emulation of obsolete hardware through virtualization.","",""
1814,"A. Rosset, L. Spadola, O. Ratib","OsiriX: An Open-Source Software for Navigating in Multidimensional DICOM Images",2004,"","","","",331,"2024-08-22 15:04:59","","10.1007/s10278-004-1014-6","","",,,,,1814,90.70,605,3,20,"","",""
14,"A. S. Abdalla, Andrew L. Yingst, Keith Powell, A. Gelonch, V. Marojevic","Open Source Software Radio Platform for Research on Cellular Networked UAVs: It Works!",2021,"","","","",169,"2024-08-22 15:04:59","","10.1109/mcom.001.2100394","","",,,,,14,4.67,3,5,3,"Cellular network-connected unmanned aerial vehicles (UAVs) experience different radio propagation conditions than radio nodes on the ground. Therefore, it has become critical to investigate the performance of aerial radios, both theoretically and through field trials. In this article, we consider low-altitude aerial nodes that are served by an experimental cellular network. We provide a detailed description of the hardware and software components needed to establish a broadband wireless testbed for UAV communications research using software radios. Results show that a testbed for innovation in UAV communications and networking is feasible with commercial off-the-shelf hardware, open source software, and low-power signaling.","",""
17,"A. Saboor, M. Akhlaq, B. Aslam","Experimental evaluation of Snort against DDoS attacks under different hardware configurations",2013,"","","","",575,"2024-08-22 15:04:59","","10.1109/NCIA.2013.6725321","","",,,,,17,1.55,6,3,11,"Network intrusion detection systems are considered as one of the basic entities widely utilized and studied in the field of network security that aim to detect any hostile intrusion within a given network. Among many network intrusion detection systems (NIDS), open source systems have gained substantial preference due to their flexibility, support and cost effectiveness. Snort, an open source system is considered as the de-facto standard for NIDS. In this paper, effort has been made to gauge Snort in terms of performance (packet handling) and detection accuracy against TCP Flooding Distributed Denial of Service attack. The evaluation has been done using a sophisticated test-bench under different hardware configurations. This paper has analyzed the major factors affecting the performance and detection capability of Snort and has recommended techniques to make Snort a better intrusion detection system (IDS). Experimental results have shown significant improvement in Snort packet handling capability by using better hardware. However; Snort detection capability is not improved by improving hardware and is dependent upon its internal architecture (signature database and rate filtration). Furthermore, the findings can be applied to other signature based intrusion detection systems for refining their performance and detection capability.","",""
45,"A. Sarkar, Z. Al-Ars, K. Bertels","QuASeR: Quantum Accelerated de novo DNA sequence reconstruction",2020,"","","","",624,"2024-08-22 15:04:59","","10.1371/journal.pone.0249850","","",,,,,45,11.25,15,3,4,"In this article, we present QuASeR, a reference-free DNA sequence reconstruction implementation via de novo assembly on both gate-based and quantum annealing platforms. This is the first time this important application in bioinformatics is modeled using quantum computation. Each one of the four steps of the implementation (TSP, QUBO, Hamiltonians and QAOA) is explained with a proof-of-concept example to target both the genomics research community and quantum application developers in a self-contained manner. The implementation and results on executing the algorithm from a set of DNA reads to a reconstructed sequence, on a gate-based quantum simulator, the D-Wave quantum annealing simulator and hardware are detailed. We also highlight the limitations of current classical simulation and available quantum hardware systems. The implementation is open-source and can be found on https://github.com/QE-Lab/QuASeR.","",""
78,"A. Seethepalli, Haichao Guo, Xiuwei Liu, M. Griffiths, Hussien Almtarfi, Zenglu Li, Shuyu Liu, Alina Zare, F. Fritschi, E. Blancaflor, Xuefeng Ma, L. York","RhizoVision Crown: An Integrated Hardware and Software Platform for Root Crown Phenotyping",2019,"","","","",391,"2024-08-22 15:04:59","","10.34133/2020/3074916","","",,,,,78,15.60,8,12,5,"Root crown phenotyping measures the top portion of crop root systems and can be used for marker-assisted breeding, genetic mapping, and understanding how roots influence soil resource acquisition. Several imaging protocols and image analysis programs exist, but they are not optimized for high-throughput, repeatable, and robust root crown phenotyping. The RhizoVision Crown platform integrates an imaging unit, image capture software, and image analysis software that are optimized for reliable extraction of measurements from large numbers of root crowns. The hardware platform utilizes a back light and a monochrome machine vision camera to capture root crown silhouettes. RhizoVision Imager and RhizoVision Analyzer are free, open-source software that streamline image capture and image analysis with intuitive graphical user interfaces. RhizoVision Analyzer was physically validated using copper wire and features were extensively validated using 10,464 ground-truth simulated images of dicot and monocot root systems. This platform was then used to phenotype soybean and wheat root crowns. A total of 2,799 soybean (Glycine max) root crowns of 187 lines and 1,753 wheat (Triticum aestivum) root crowns of 186 lines were phenotyped. Principal component analysis indicated similar correlations among features in both species. The maximum heritability was 0.74 in soybean and 0.22 in wheat, indicating differences in species and populations need to be considered. The integrated RhizoVision Crown platform facilitates high-throughput phenotyping of crop root crowns, and sets a standard by which open plant phenotyping platforms can be benchmarked.","",""
73,"A. Shamis, A. Chamayou, Christine Avanessians, C. Wintersteiger, Edward Ashton, Felix Schuster, C. Fournet, Julien Maffre, Kartik Nayak, M. Russinovich, M. Kerner, M. Castro, T. Moscibroda, Olga Vrousgou, Roy Schwartz, S. Krishna, S. Clebsch, O. Ohrimenko","CCF: A Framework for Building Confidential Verifiable Replicated Services",2019,"","","","",621,"2024-08-22 15:04:59","","","","",,,,,73,14.60,7,18,5,"We present CCF, a framework to build permissioned confidential blockchains. CCF provides a simple programming model of a highly-available data store and a universally-verifiable log that implements a ledger abstraction. CCF leverages trust in a consortium of governing members and in a network of replicated hardware-protected execution environments to achieve high throughput, low latency, strong integrity and strong confidentiality for application data and code executing on the ledger. CCF embeds consensus protocols with Byzantine and crash faulttolerant configurations. All configurations support strong service integrity based on the ledger contents. Even if some replicas are corrupt or their keys are compromised, they can be blamed based on their signed evidence of malicious activity recorded in the ledger. CCF supports transparent, programmable governance where the power of the consortium members is tunable and their activity is similarly recorded in the ledger for full auditability. We are developing an open-source implementation of CCF based on SGX-enabled Azure Confidential Compute, built on top of the Open Enclave SDK. Experimental results show that this implementation achieves throughput/latency tradeoffs up to 3 orders of magnitude better than previous confidential blockchain designs. Its code and documentation are available at https: //github.com/Microsoft/CCF.","",""
284,"A. Straw","Vision Egg: an Open-Source Library for Realtime Visual Stimulus Generation",2008,"","","","",434,"2024-08-22 15:04:59","","10.3389/neuro.11.004.2008","","",,,,,284,17.75,284,1,16,"Modern computer hardware makes it possible to produce visual stimuli in ways not previously possible. Arbitrary scenes, from traditional sinusoidal gratings to naturalistic 3D scenes can now be specified on a frame-by-frame basis in realtime. A programming library called the Vision Egg that aims to make it easy to take advantage of these innovations. The Vision Egg is a free, open-source library making use of OpenGL and written in the high-level language Python with extensions in C. Careful attention has been paid to the issues of luminance and temporal calibration, and several interfacing techniques to input devices such as mice, movement tracking systems, and digital triggers are discussed. Together, these make the Vision Egg suitable for many psychophysical, electrophysiological, and behavioral experiments. This software is available for free download at visionegg.org.","",""
78,"A. Straw, M. Dickinson","Motmot, an open-source toolkit for realtime video acquisition and analysis",2009,"","","","",906,"2024-08-22 15:04:59","","10.1186/1751-0473-4-5","","",,,,,78,5.20,39,2,15,"","",""
38,"A. Turner","An Open-Source, Extensible Spacecraft Simulation And Modeling Environment Framework",2003,"","","","",460,"2024-08-22 15:04:59","","","","",,,,,38,1.81,38,1,21,"An Open-Source, Extensible Spacecraft Simulation And Modeling Environment Framework Andrew J. Turner An Open-Source, extensible spacecraft simulation and modeling (Open-SESSAME) framework was developed with the aim of providing to researchers the ability to quickly test satellite algorithms while allowing them the ability to view and extend the underlying code. The software is distributed under the GPL (General Public License) and the package’s extensibility allows users to implement their own components into the libraries, investigate new algorithms, or tie in existing software or hardware components for algorithm and flight component testing. This thesis presents the purpose behind the development of the framework, the software design architecture and implementation, and a roadmap of the future for the software package.","",""
2535,"A. Vansteenkiste, J. Leliaert, M. Dvornik, F. García-Sánchez, B. Waeyenberge","The design and verification of MuMax3",2014,"","","","",497,"2024-08-22 15:04:59","","10.1063/1.4899186","","",,,,,2535,253.50,507,5,10,"We report on the design, verification and performance of MUMAX3, an open-source GPU-accelerated micromagnetic simulation program. This software solves the time- and space dependent magnetization evolution in nano- to micro scale magnets using a finite-difference discretization. Its high performance and low memory requirements allow for large-scale simulations to be performed in limited time and on inexpensive hardware. We verified each part of the software by comparing results to analytical values where available and to micromagnetic standard problems. MUMAX3 also offers specific extensions like MFM image generation, moving simulation window, edge charge removal and material grains.","",""
53,"A. von Lühmann, Christian Herff, D. Heger, Tanja Schultz","Toward a Wireless Open Source Instrument: Functional Near-infrared Spectroscopy in Mobile Neuroergonomics and BCI Applications",2015,"","","","",889,"2024-08-22 15:04:59","","10.3389/fnhum.2015.00617","","",,,,,53,5.89,13,4,9,"Brain-Computer Interfaces (BCIs) and neuroergonomics research have high requirements regarding robustness and mobility. Additionally, fast applicability and customization are desired. Functional Near-Infrared Spectroscopy (fNIRS) is an increasingly established technology with a potential to satisfy these conditions. EEG acquisition technology, currently one of the main modalities used for mobile brain activity assessment, is widely spread and open for access and thus easily customizable. fNIRS technology on the other hand has either to be bought as a predefined commercial solution or developed from scratch using published literature. To help reducing time and effort of future custom designs for research purposes, we present our approach toward an open source multichannel stand-alone fNIRS instrument for mobile NIRS-based neuroimaging, neuroergonomics and BCI/BMI applications. The instrument is low-cost, miniaturized, wireless and modular and openly documented on www.opennirs.org. It provides features such as scalable channel number, configurable regulated light intensities, programmable gain and lock-in amplification. In this paper, the system concept, hardware, software and mechanical implementation of the lightweight stand-alone instrument are presented and the evaluation and verification results of the instrument's hardware and physiological fNIRS functionality are described. Its capability to measure brain activity is demonstrated by qualitative signal assessments and a quantitative mental arithmetic based BCI study with 12 subjects.","",""
71,"A. Wyglinski, D. Orofino, M. Ettus, T. Rondeau","Revolutionizing software defined radio: case studies in hardware, software, and education",2016,"","","","",449,"2024-08-22 15:04:59","","10.1109/MCOM.2016.7378428","","",,,,,71,8.88,18,4,8,"SDR has increasingly become an invaluable research, development, and educational tool within the telecommunications sector with respect to rapidly prototyping new algorithms and paradigms in actual radio hardware and evaluating them in real-world over-the-air conditions. Due to advances in microprocessor technology, radio frequency hardware, and software, SDR has matured into a reliable tool that is now part of almost every communication engineer's toolbox, and it has changed the way the telecommunication sector produces innovative solutions to technical challenges. In this article, we explore four case studies that highlight SDR as a reliable tool in industry, academia, and government. Specifically, we study four examples that illustrate: advances in low-cost, reliable, and versatile SDR platforms, open source and universal SDR software development environments, powerful technical computing environments employing SDR hardware for real-world experimentation, and educational paradigms for synthesizing digital communications and digital processing concepts using SDR technology. By understanding the impact of these case studies, we intend to provide some insight on how the SDR revolution has changed the way the world designs and implements telecommunication systems.","",""
45,"Aakash Tyagi, Addison Crump, A. Sadeghi, Garrett Persyn, Jeyavijayan Rajendran, Patrick Jauernig, Rahul Kande","TheHuzz: Instruction Fuzzing of Processors Using Golden-Reference Models for Finding Software-Exploitable Vulnerabilities",2022,"","","","",940,"2024-08-22 15:04:59","","","","",,,,,45,22.50,6,7,2,"The increasing complexity of modern processors poses many challenges to existing hardware verification tools and methodologies for detecting security-critical bugs. Recent attacks on processors have shown the fatal consequences of uncovering and exploiting hardware vulnerabilities. Fuzzing has emerged as a promising technique for detecting software vulnerabilities. Recently, a few hardware fuzzing techniques have been proposed. However, they suffer from several limitations, including non-applicability to commonly used Hardware Description Languages (HDLs) like Verilog and VHDL, the need for significant human intervention, and inability to capture many intrinsic hardware behaviors, such as signal transitions and floating wires. In this paper, we present the design and implementation of a novel hardware fuzzer, TheHuzz, that overcomes the aforementioned limitations and significantly improves the state of the art. We analyze the intrinsic behaviors of hardware designs in HDLs and then measure the coverage metrics that model such behaviors. TheHuzz generates assembly-level instructions to increase the desired coverage values, thereby finding many hardware bugs that are exploitable from software. We evaluate TheHuzz on four popular open-source processors and achieve 1.98x and 3.33x the speed compared to the industry-standard random regression approach and the state-of-the-art hardware fuzzer, DiffuzRTL, respectively. Using TheHuzz, we detected 11 bugs in these processors, including 8 new vulnerabilities, and we demonstrate exploits using the detected bugs. We also show that TheHuzz overcomes the limitations of formal verification tools from the semiconductor industry by comparing its findings to those discovered by the Cadence JasperGold tool.","",""
236,"Aaron A. Rowe, Andrew J. Bonham, Ryan J. White, Michael P. Zimmer, R. Yadgar, Tony Hobza, J. Honea, I. Ben-Yaacov, K. Plaxco","CheapStat: An Open-Source, “Do-It-Yourself” Potentiostat for Analytical and Educational Applications",2011,"","","","",384,"2024-08-22 15:04:59","","10.1371/journal.pone.0023783","","",,,,,236,18.15,26,9,13,"Although potentiostats are the foundation of modern electrochemical research, they have seen relatively little application in resource poor settings, such as undergraduate laboratory courses and the developing world. One reason for the low penetration of potentiostats is their cost, as even the least expensive commercially available laboratory potentiostats sell for more than one thousand dollars. An inexpensive electrochemical workstation could thus prove useful in educational labs, and increase access to electrochemistry-based analytical techniques for food, drug and environmental monitoring. With these motivations in mind, we describe here the CheapStat, an inexpensive (<$80), open-source (software and hardware), hand-held potentiostat that can be constructed by anyone who is proficient at assembling circuits. This device supports a number of potential waveforms necessary to perform cyclic, square wave, linear sweep and anodic stripping voltammetry. As we demonstrate, it is suitable for a wide range of applications ranging from food- and drug-quality testing to environmental monitoring, rapid DNA detection, and educational exercises. The device's schematics, parts lists, circuit board layout files, sample experiments, and detailed assembly instructions are available in the supporting information and are released under an open hardware license.","",""
14,"Aaron C. Greenville, N. Emery","Gathering lots of data on a small budget",2016,"","","","",812,"2024-08-22 15:04:59","","10.1126/science.aag3057","","",,,,,14,1.75,7,2,8,"Open-source hardware and software technology can redefine data collection Many science research projects rely on specialized electronic devices and software to gather data that often come with a high price tag. Advances in open-source hardware and software are occurring at an astounding rate, but scientists are often slow to take advantage of these for purposes beyond their original scope. Here, we advocate that open-source technology can be easily applied in science research to collect large data sets, at the same time reducing costs and increasing the repeatability of experiments.","",""
7,"Aaron Weiss","Open source hardware: freedom you can hold?",2008,"","","","",189,"2024-08-22 15:04:59","","10.1145/1435535.1435541","","",,,,,7,0.44,7,1,16,"Though the philosophy behind open source software is relatively simple—“promote transparency”—it has proved rather complicated in the marketplace, where it has taken more than 20 years for the resulting products to gain a measure of mainstream acceptance. While traditional businesses have struggled to understand the logic and route to profitability behind open source software, the model itself has already made a deep impact on the Internet. From Linux OS, which powers an increasing number of PCs, to TiVo, the Firefox Web browser, and Apache (the world’s most widely used Web server), open source is now a proven strategy for producing software. But what about hardware? Can open and collaborative development produce physical products, too? Yes, say the advocates of open source hardware, while admitting a few complications. The entire landscape of consumer technology could change radically as a result.","",""
83,"Abhinav Chandrakar, Barkha Soni, Dr. Bhumika Das","Application of GIS",2016,"","","","",959,"2024-08-22 15:04:59","","10.2139/SSRN.2889630","","",,,,,83,10.38,28,3,8,"Surveillance and exchange of gathered information guides emergency response as well as long-term planning. In this paper we have discussed about the Open GIS, which can be very well utilized during different health hazards and in response to that some immediate actions can be taken up based on the available latest information in the said system. Open Source Web GIS software systems have reached a stage of maturity, sophistication, robustness and stability, and usability and user friendliness rivaling that of commercial, proprietary GIS and Web GIS server products. The Open Source Web GIS community is also actively embracing OGC (Open Geospatial Consortium) standards, including WMS (Web Map Service). WMS enables the creation of Web maps that have layers coming from multiple different remote servers/sources. Here we present one easy to implement .Web GIS server solution that is based on the Open Source Map Server. With the help of step-by-step instructions, interested readers running mainstream machines and with no prior technical experience in Web GIS or Internet map servers will be able to publish their own health maps on the Web and add to those maps additional layers retrieved from Remote WMS servers. All problems with planning and management are related to location, they are geographically referenced and require spatial analysis and presentation, an Open GIS on any compatible GIS platform will be very helpful tool for planning and decision making in emergency management. The geographical information system (GIS) is a tool used generically for any computer based capability for manipulating geographical data. The hardware and software functions of GIS include data input, data storage, data management (data manipulation, updating, changing, exchange) and data reporting (retrieval, presentation, analysis, combination, etc.).All of these actions and operations are applied to GIS as a tool that forms its database. The paper describes the types of the GIS data formats (vector, raster), database object definitions, relationships, geometric features, and the data organization structure. Some GIS applications and examples are given for better understanding of how GIS data can be used in GIS applications, with the respect to data formats, including surface elevation and slope from Digital Elevation Model data (DEM), with the applicability in water industry.","",""
32,"Abraham Gonzalez","Replicating and Mitigating Spectre Attacks on a Open Source RISC-V Microarchitecture",2019,"","","","",224,"2024-08-22 15:04:59","","","","",,,,,32,6.40,32,1,5,"Recent revelations of new side-channel vulnerabilities in modern processors has made hardware security a first-order concern in processor design. We demonstrate how the Berkeley Out-of-Order Machine (BOOM), a generic open-source out-of-order RISC-V processor, is useful for studying the performance and security implications of microarchitectural mitigations for side-channel attacks. Two results are presented. First we replicate several basic variants of Spectre attacks which exploit the effects of speculative execution in the L1 data cache. We then implement a preliminary hardware mitigation for such attacks, demonstrate its effectiveness, and measure its impact on performance, and area. Compared to the baseline processor, our mitigation displays a 2% IPC improvement, a 2.5% area increase, and a 0.36% clock reduction in a 45nm process. To our knowledge, our work is the first available demonstration on an open-source RISC-V processor of speculative side-channel attacks and a potential hardware mitigation. Our methodology demonstrates the value of the open-source RISC-V hardware ecosystem for secure hardware research.","",""
131,"Abubakar Abid, Ali Abdalla, Ali Abid, Dawood Khan, Abdulrahman Alfozan, James Y. Zou","Gradio: Hassle-Free Sharing and Testing of ML Models in the Wild",2019,"","","","",584,"2024-08-22 15:04:59","","","","",,,,,131,26.20,22,6,5,"Accessibility is a major challenge of machine learning (ML). Typical ML models are built by specialists and require specialized hardware/software as well as ML experience to validate. This makes it challenging for non-technical collaborators and endpoint users (e.g. physicians) to easily provide feedback on model development and to gain trust in ML. The accessibility challenge also makes collaboration more difficult and limits the ML researcher's exposure to realistic data and scenarios that occur in the wild. To improve accessibility and facilitate collaboration, we developed an open-source Python package, Gradio, which allows researchers to rapidly generate a visual interface for their ML models. Gradio makes accessing any ML model as easy as sharing a URL. Our development of Gradio is informed by interviews with a number of machine learning researchers who participate in interdisciplinary collaborations. Their feedback identified that Gradio should support a variety of interfaces and frameworks, allow for easy sharing of the interface, allow for input manipulation and interactive inference by the domain expert, as well as allow embedding the interface in iPython notebooks. We developed these features and carried out a case study to understand Gradio's usefulness and usability in the setting of a machine learning collaboration between a researcher and a cardiologist.","",""
14,"Abubakr Abdulgadir, William Diehl, J. Kaps","An Open-Source Platform for Evaluation of Hardware Implementations of Lightweight Authenticated Ciphers",2019,"","","","",122,"2024-08-22 15:04:59","","10.1109/ReConFig48160.2019.8994788","","",,,,,14,2.80,5,3,5,"Lightweight implementations of cryptographic algorithms must be evaluated in terms of security, cost, and performance before their deployment in practical applications. The availability of open-source platforms for such evaluation saves researchers' time and increases reproducibility of results. In this work, we improve upon the previous version of the Flexible Opensource workBench fOr Side-channel analysis (FO-BOS) to introduce “FOBOS2,” and utilize it to perform such evaluation tasks for hardware implementations of authenticated ciphers, with special focus on candidates submitted to the NIST Lightweight Cryptography standardization process. We perform power measurements on Artix7 FPGA, and countermeasure evaluation of lightweight hardware implementations of selected NIST Lightweight Cryptography Round-2 candidates and the current NIST standard AES-GCM on the Spartan6 and Artix7 FPGAs. Our results show that Ascon consumes the least power at 50 MHz, and has the lowest change in dynamic power per increase in frequency, while GIFT-COFB consumes the least energy-per-bit. We also show that side-channel countermeasures applied to implementations of Ascon and AES-GCM are effective using leakage detection tests.","",""
25,"Adam Duley, Christopher J. Spandikow, Miryung Kim","A program differencing algorithm for verilog HDL",2010,"","","","",864,"2024-08-22 15:04:59","","10.1145/1858996.1859093","","",,,,,25,1.79,8,3,14,"During code review tasks, comparing two versions of a hardware design description using existing program differencing tools such as diff is inherently limited because existing program differencing tools implicitly assume sequential execution semantics, while hardware description languages are designed to model concurrent computation. We designed a position-independent differencing algorithm to robustly handle language constructs whose relative orderings do not matter. This paper presents Vdiff, an instantiation of this position-independent differencing algorithm for Verilog HDL. To help programmers reason about the differences at a high-level, Vdiff outputs syntactic differences in terms of Verilog-specific change types. We evaluated Vdiff on two open source hardware design projects. The evaluation result shows that Vdiff is very accurate, with overall 96.8% precision and 97.3% recall when using manually classified differences as a basis of comparison.","",""
10,"Adam Gokcezade, Jakob Leitner, M. Haller","LightTracker: An Open-Source Multitouch Toolkit",2010,"","","","",423,"2024-08-22 15:04:59","","10.1145/1902593.1902598","","",,,,,10,0.71,3,3,14,"In this article we present LightTracker -- an open-source toolkit for vision-based multi-touch setups. Using this toolkit, we can dynamically create and manipulate the image processing pipeline at runtime. After presenting various new requirements derived from hardware configurations as well as literature review, features and shortcomings of available tracking solutions are discussed and compared to our proposed toolkit. This is followed by a detailed description of the toolkit’s functionality, including the filter chain and the improved calibration module. We also present implementation details such as the plug-in system and the multithreaded architecture. To illustrate the advantages of the toolkit, an interactive gaming couch table based on LightTracker is introduced.","",""
142,"Adam M. Izraelevitz, Jack Koenig, Patrick Li, Richard Lin, Angie Wang, Albert Magyar, Donggyu Kim, Colin Schmidt, Chick Markley, Jim Lawson, J. Bachrach","Reusability is FIRRTL ground: Hardware construction languages, compiler frameworks, and transformations",2017,"","","","",389,"2024-08-22 15:04:59","","10.1109/ICCAD.2017.8203780","","",,,,,142,20.29,14,11,7,"Enabled by modern languages and retargetable compilers, software development is in a virtual “Cambrian explosion” driven by a critical mass of powerfully parameterized libraries; but hardware development practices lag far behind. We hypothesize that existing hardware construction languages (HCLs) and novel hardware compiler frameworks (HCFs) can put hardware development on a similar evolutionary path by enabling new hardware libraries to be independent of underlying process technologies including FPGA mappings. We support this claim by (1) evaluating the degree with which Chisel, an existing HCL, can support powerfully parameterized libraries, and (2) introducing the concept and implementation of an HCF that uses an open-source hardware intermediate representation, FIRRTL (Flexible Intermediate Representation for RTL), to transform target-independent RTL into technology-specific RTL. Finally, we evaluate many hardware compiler transformations, including simplifying transformations, analyses, optimizations, instrumentations, and specializations, which demonstrate the power of a combined HCL and HCF approach.","",""
102,"Adithyavairavan Murali, Tao Chen, Kalyan Vasudev Alwala, Dhiraj Gandhi, Lerrel Pinto, Saurabh Gupta, A. Gupta","PyRobot: An Open-source Robotics Framework for Research and Benchmarking",2019,"","","","",195,"2024-08-22 15:04:59","","","","",,,,,102,20.40,15,7,5,"This paper introduces PyRobot, an open-source robotics framework for research and benchmarking. PyRobot is a light-weight, high-level interface on top of ROS that provides a consistent set of hardware independent mid-level APIs to control different robots. PyRobot abstracts away details about low-level controllers and inter-process communication, and allows non-robotics researchers (ML, CV researchers) to focus on building high-level AI applications. PyRobot aims to provide a research ecosystem with convenient access to robotics datasets, algorithm implementations and models that can be used to quickly create a state-of-the-art baseline. We believe PyRobot, when paired up with low-cost robot platforms such as LoCoBot, will reduce the entry barrier into robotics, and democratize robotics. PyRobot is open-source, and can be accessed via this https URL.","",""
47,"Aditya Prabaswara, A. Munir, A. B. Suksmono","GNU Radio based software-defined FMCW radar for weather surveillance application",2011,"","","","",835,"2024-08-22 15:04:59","","10.1109/TSSA.2011.6095440","","",,,,,47,3.62,16,3,13,"In this paper, a GNU Radio based software-defined FMCW (Frequency Modulated — Continuous Wave) radar is studied for weather surveillance application. The FMCW radar that has been gaining popularity due to the use of solid state microwave amplifier to generate a signal source is proposed for the design since the current weather surveillance radar is usually using a pulse-radar type that needs high power in pulse generation and high cost in the deployment. In addition, by using software-defined radar, therefore the designed FMCW radar can be implemented and configured at a reduced cost and complexity. The FMCW radar prototype is implemented using both open sources of software and hardware. The software part of the radar is realized using GNU Radio, whilst the hardware part is implemented using USRP (Universal Software Radio Peripheral) N210. Based on the design specification, an FMCW radar prototype based on GNU Radio is then realized and examined. From the performance-test, the prototype that works at a center frequency of 2.1GHz with a bandwidth of 750kHz is able to perform range detection of targets after utilizing the FFT (Fast Fourier Transform) function using MATLAB. In addition, the discussion of system design of software defined FMCW radar and performance-test of its prototype are presented.","",""
211,"Adrian Voßkühler, Volkhard Nordmeier, L. Kuchinke, A. Jacobs","OGAMA (Open Gaze and Mouse Analyzer): Open-source software designed to analyze eye and mouse movements in slideshow study designs",2008,"","","","",435,"2024-08-22 15:04:59","","10.3758/BRM.40.4.1150","","",,,,,211,13.19,53,4,16,"","",""
136,"Ahmad Al Badawi, Jack Bates, Flávio Bergamaschi, David Cousins, Saroja Erabelli, N. Genise, S. Halevi, Hamish Hunt, Andrey Kim, Yongwoo Lee, Zeyu Liu, D. Micciancio, Ian Quah, Y. Polyakov, Saraswathy R.V., Kurt Rohloff, Jonathan Saylor, Dmitriy Suponitsky, M. Triplett, V. Vaikuntanathan, Vincent Zucca","OpenFHE: Open-Source Fully Homomorphic Encryption Library",2022,"","","","",121,"2024-08-22 15:04:59","","10.1145/3560827.3563379","","",,,,,136,68.00,14,21,2,"Fully Homomorphic Encryption (FHE) is a powerful cryptographic primitive that enables performing computations over encrypted data without having access to the secret key. We introduce OpenFHE, a new open-source FHE software library that incorporates selected design ideas from prior FHE projects, such as PALISADE, HElib, and HEAAN, and includes several new design concepts and ideas. The main new design features can be summarized as follows: (1) we assume from the very beginning that all implemented FHE schemes will support bootstrapping and scheme switching; (2) OpenFHE supports multiple hardware acceleration backends using a standard Hardware Abstraction Layer (HAL); (3) OpenFHE includes both user-friendly modes, where all maintenance operations, such as modulus switching, key switching, and bootstrapping, are automatically invoked by the library, and compiler-friendly modes, where an external compiler makes these decisions. This paper focuses on high-level description of OpenFHE design, and the reader is pointed to external OpenFHE references for a more detailed/technical description of the software library.","",""
70,"Aina Niemetz, Mathias Preiner, C. Wolf, Armin Biere","Btor2 , BtorMC and Boolector 3.0",2018,"","","","",656,"2024-08-22 15:04:59","","10.1007/978-3-319-96145-3_32","","",,,,,70,11.67,18,4,6,"","",""
105,"Alejandro F. Azocar, Luke M. Mooney, Jean-Francois Duval, A. M. Simon, L. Hargrove, Elliott J. Rouse","Design and clinical implementation of an open-source bionic leg",2020,"","","","",181,"2024-08-22 15:04:59","","10.1038/s41551-020-00619-3","","",,,,,105,26.25,18,6,4,"","",""
60,"Alejandro F. Azocar, Luke M. Mooney, L. Hargrove, Elliott J. Rouse","Design and Characterization of an Open-Source Robotic Leg Prosthesis",2018,"","","","",244,"2024-08-22 15:04:59","","10.1109/BIOROB.2018.8488057","","",,,,,60,10.00,15,4,6,"Challenges associated with current prosthetic technologies limit the quality of life of lower-limb amputees. Passive prostheses lead amputees to walk slower, use more energy, fall more often, and modify their gait patterns to compensate for the prosthesis' lack of net-positive mechanical energy. Robotic prostheses can provide mechanical energy, but may also introduce challenges through controller design. Fortunately, talented researchers are studying how to best control robotic leg prostheses, but the time and resources required to develop prosthetic hardware has limited their potential impact. Even after research is completed, comparison of results is confounded by the use of different, researcher-specific hardware. To address these issues, we have developed the Open-source Leg (OSL): a scalable robotic knee/ankle prosthesis intended to foster investigations of control strategies. This paper introduces the design goals, transmission selection, hardware implementation, and initial control benchmarks for the OSL. The OSL provides a common hardware platform for comparison of control strategies, lowers the barrier to entry for prosthesis research, and enables testing within the lab, community, and at home.","",""
67,"Alex Forencich, A. Snoeren, G. Porter, G. Papen","Corundum: An Open-Source 100-Gbps Nic",2020,"","","","",183,"2024-08-22 15:04:59","","10.1109/FCCM48280.2020.00015","","",,,,,67,16.75,17,4,4,"Corundum is an open-source, FPGA-based prototyping platform for network interface development at up to 100 Gbps and beyond. The Corundum platform includes several core features to enable real-time, high-line-rate operations including: a high-performance datapath, 10G/25G/100G Ethernet MACs, PCI Express gen 3, a custom PCIe DMA engine, and native high-precision IEEE 1588 PTP timestamping. A key feature is extensible queue management that can support over 10,000 queues coupled with extensible transmit schedulers, enabling fine-grained hardware control of packet transmission. In conjunction with multiple network interfaces, multiple ports per interface, and per-port event-driven transmit scheduling, these features enable the development of advanced network interfaces, architectures, and protocols. The software interface to these hardware features is a high-performance driver for the Linux networking stack. The platform also supports scatter/gather DMA, checksum offloading, receive flow hashing, and receive-side scaling. Development and debugging is facilitated by a comprehensive open-source, Python-based simulation framework that includes the entire system from a simulation model of the driver and PCI express interface to the Ethernet interfaces. The power and flexibility of Corundum is demonstrated by the implementation of a microsecond-precision time-division multiple access (TDMA) hardware scheduler to enforce a TDMA schedule at 100 Gbps line rate with no CPU overhead.","",""
36,"Alexander Spröwitz, Alexandre Tuleu, Mostafa Ajaoolleian, Massimo Vespignani, R. Moeckel, P. Eckert, Michiel D'Haene, Jonas Degrave, Arne Nordmann, B. Schrauwen, Jochen J. Steil, A. Ijspeert","Oncilla Robot: A Versatile Open-Source Quadruped Research Robot With Compliant Pantograph Legs",2018,"","","","",262,"2024-08-22 15:04:59","","10.3389/frobt.2018.00067","","",,,,,36,6.00,4,12,6,"We present Oncilla robot, a novel mobile, quadruped legged locomotion machine. This large-cat sized, 5.1 kg robot is one of a kind of a recent, bioinspired legged robot class designed with the capability of model-free locomotion control. Animal legged locomotion in rough terrain is clearly shaped by sensor feedback systems. Results with Oncilla robot show that agile and versatile locomotion is possible without sensory signals to some extend, and tracking becomes robust when feedback control is added (Ajallooeian, 2015). By incorporating mechanical and control blueprints inspired from animals, and by observing the resulting robot locomotion characteristics, we aim to understand the contribution of individual components. Legged robots have a wide mechanical and control design parameter space, and a unique potential as research tools to investigate principles of biomechanics and legged locomotion control. But the hardware and controller design can be a steep initial hurdle for academic research. To facilitate the easy start and development of legged robots, Oncilla-robot's blueprints are available through open-source. The robot's locomotion capabilities are shown in several scenarios. Specifically, its spring-loaded pantographic leg design compensates for overdetermined body and leg postures, i.e., during turning maneuvers, locomotion outdoors, or while going up and down slopes. The robot's active degree of freedom allow tight and swift direction changes, and turns on the spot. Presented hardware experiments are conducted in an open-loop manner, with little control and computational effort. For more versatile locomotion control, Oncilla-robot can sense leg joint rotations, and leg-trunk forces. Additional sensors can be included for feedback control with an open communication protocol interface. The robot's customized actuators are designed for robust actuation, and efficient locomotion. It trots with a cost of transport of 3.2 J/(Nm), at a speed of 0.63 m s-1 (Froude number 0.25). The robot trots inclined slopes up to 10°, at 0.25 m s-1. The multi-body Webots model of Oncilla robot, and Oncilla robot's extensive software architecture enables users to design and test scenarios in simulation. Controllers can directly be transferred to the real robot. Oncilla robot's blueprints are open-source published (hardware GLP v3, software LGPL v3).","",""
12,"Alexandro Baldassin, P. Centoducatte, S. Rigo, D.C. Casarotto, L. Santos, M. Schultz, Olinto J. V. Furtado","An open-source binary utility generator",2008,"","","","",445,"2024-08-22 15:04:59","","10.1145/1344418.1344423","","",,,,,12,0.75,2,7,16,"Electronic system level (ESL) modeling allows early hardware-dependent software (HDS) development. Due to broad CPU diversity and shrinking time-to-market, HDS development can neither rely on hand-retargeting binary tools, nor can it rely on pre-existent tools within standard packages. As a consequence, binary utilities which can be easily adapted to new CPU targets are of increasing interest. We present in this article a framework for automatic generation of binary utilities. It relies on two innovative ideas: platform-aware modeling and more inclusive relocation handling. Generated assemblers, linkers, disassemblers and debuggers were validated for MIPS, SPARC, PowerPC, i8051 and PIC16F84. An open-source prototype generator is available for download.","",""
334,"Alexandru Agache, Marc Brooker, Andreea Florescu, Alexandra Iordache, Anthony Liguori, Rolf Neugebauer, Phil Piwonka, Amazon Diana-Maria Popa, Web Services","This paper is included in the Proceedings of the 17th USENIX Symposium on Networked Systems Design and Implementation (NSDI ’20)",,"","","","",781,"2024-08-22 15:04:59","","","","",,,,,334,0.00,37,9,,"Serverless containers and functions are widely used for deploying and managing software in the cloud. Their popularity is due to reduced cost of operations, improved utilization of hardware, and faster scaling than traditional deployment meth-ods. The economics and scale of serverless applications demand that workloads from multiple customers run on the same hardware with minimal overhead, while preserving strong security and performance isolation. The traditional view is that there is a choice between virtualization with strong security and high overhead, and container technologies with weaker security and minimal overhead. This tradeoff is unacceptable to public infrastructure providers, who need both strong security and minimal overhead. To meet this need, we developed Fire-cracker, a new open source Virtual Machine Monitor (VMM) specialized for serverless workloads, but generally useful for containers, functions and other compute workloads within a reasonable set of constraints. We have deployed Firecracker in two publically-available serverless compute services at Amazon Web Services (Lambda and Fargate), where it supports millions of production workloads, and trillions of requests per month. We describe how specializing for serverless informed the design of Firecracker, and what we learned from seamlessly migrating Lambda customers to Firecracker.","",""
102,"Alicia Gibb, Steven Abadie","Building Open Source Hardware: DIY Manufacturing for Hackers and Makers",2014,"","","","",90,"2024-08-22 15:04:59","","","","",,,,,102,10.20,51,2,10,"Our website was released having a aspire to work as a total online digital library that provides usage of multitude of PDF file ebook assortment. You might find many kinds of e-publication as well as other literatures from our papers data bank. Distinct preferred subjects that distribute on our catalog are trending books, solution key, test test question and answer, manual example, exercise guideline, test sample, customer handbook, owner's guideline, assistance instructions, restoration guide, and so forth.","",""
116,"Alison Powell","Democratizing production through open source knowledge: from open software to open hardware",2012,"","","","",230,"2024-08-22 15:04:59","","10.1177/0163443712449497","","",,,,,116,9.67,116,1,12,"The commercial success of open source software, along with a broader socio-cultural shift towards participation in media and cultural production, have inspired attempts to extend and expand open source practices. These include expansions from software into general culture through ‘Free Culture’ movements and, more recently, expansions from software into hardware and design. This article provides a critical perspective on the democratic potential of these broader ‘open’ contribution structures by examining how open source contributions to both software and hardware increase the opportunities for democratic participation in production, governance and knowledge exchange. By analysing attempts to ‘open source’ the sharing of hardware designs, it also notes the limitations of this democratization. The insights developed in the article nuance the relationship between open source cultures and commercial and market structures, identifying how the generative opportunities created by certain aspects of open source contribution structures increase the potential for democratizing production of communication tools, but also how incongruities across different open-source cultures and communities of practice limit the democratic potential of these processes.","",""
17,"Alison Powell","Open culture and innovation: integrating knowledge across boundaries",2015,"","","","",539,"2024-08-22 15:04:59","","10.1177/0163443714567169","","",,,,,17,1.89,17,1,9,"What does open source mean for culture? For knowledge? As cultural production has come to be characterized by contribution as well as consumption and as alternative modes of intellectual property transfer challenge the ‘dominant paradigm’ that knowledge and information should be protected and monetized, the logic of ‘open sourcing’ has extended into many cultural spheres. This article positions ‘openness’ as a value that intermediates between re-usable software code, institutional transparency, and expanded opportunities for participation in knowledge production cultures. By observing and analyzing the expansion of ‘openness’ from computer software to electronics hardware, we can develop a framework that identifies the tensions between socio-cultural visions of knowledge commons and the realities of governing those commons. This research focuses in particular on the knowledge related to electronics hardware and other material objects governed by open hardware licenses. The insights in this article are valuable for anyone studying open source and peer production processes and the knowledge claims surrounding them.","",""
158,"Alon Amid, David Biancolin, Abraham Gonzalez, D. Grubb, S. Karandikar, Harrison Liew, Albert Magyar, Howard Mao, Albert J. Ou, Nathan Pemberton, P. Rigge, Colin Schmidt, J. Wright, Jerry Zhao, Y. Shao, K. Asanović, B. Nikolić","Chipyard: Integrated Design, Simulation, and Implementation Framework for Custom SoCs",2020,"","","","",559,"2024-08-22 15:04:59","","10.1109/MM.2020.2996616","","",,,,,158,39.50,16,17,4,"Continued improvement in computing efficiency requires functional specialization of hardware designs. Agile hardware design methodologies have been proposed to alleviate the increased design costs of custom silicon architectures, but their practice thus far has been accompanied with challenges in integration and validation of complex systems-on-a-chip (SoCs). We present the Chipyard framework, an integrated SoC design, simulation, and implementation environment for specialized compute systems. Chipyard includes configurable, composable, open-source, generator-based IP blocks that can be used across multiple stages of the hardware development flow while maintaining design intent and integration consistency. Through cloud-hosted FPGA accelerated simulation and rapid ASIC implementation, Chipyard enables continuous validation of physically realizable customized systems.","",""
1,"Amartya Mukherjee, N. Dey","Introduction to Open Source Hardware",2019,"","","","",49,"2024-08-22 15:04:59","","10.1201/9781351120340-1","","",,,,,1,0.20,1,2,5,"","",""
42,"Andrea Bonarini, M. Matteucci, M. Migliavacca, D. Rizzi","R2P: An open source hardware and software modular approach to robot prototyping",2014,"","","","",92,"2024-08-22 15:04:59","","10.1016/J.ROBOT.2013.08.009","","",,,,,42,4.20,11,4,10,"","",""
196,"Andrea Fosfuri, Marco S. Giarratana, A. Luzzi","The Penguin Has Entered the Building: The Commercialization of Open Source Software Products",2008,"","","","",436,"2024-08-22 15:04:59","","10.1287/ORSC.1070.0321","","",,,,,196,12.25,65,3,16,"Previous literature on open source software (OSS) mostly analyzes organizational issues within communities of developers and users. This paper focuses on for-profit organizations that release software products under OSS licenses, and argues that variations in their endowments of intellectual property rights, namely patents and trademarks, help to determine which firms will tend to incorporate OSS into commercial products. We explain whether and under what conditions preexisting stocks of intellectual property rights can be useful complementary assets that allow firms to benefit directly or indirectly from commercializing OSS products, and test our hypotheses on a novel data set built on firms' announcements of OSS product releases in the specialized press between 1995 and 2003. We find three robust results: (a) firms with large stocks of software patents are more likely to release OSS products; (b) firms with large stocks of software trademarks are less likely to release OSS products; (c) firms with large stocks of hardware trademarks are more likely to release OSS products.","",""
79,"Andrei Tatar, Cristiano Giuffrida, H. Bos, Kaveh Razavi","Defeating Software Mitigations Against Rowhammer: A Surgical Precision Hammer",2018,"","","","",649,"2024-08-22 15:04:59","","10.1007/978-3-030-00470-5_3","","",,,,,79,13.17,20,4,6,"","",""
60,"Andrew Canis, Jongsok Choi, B. Fort, Ruolong Lian, Qijing Huang, Nazanin Calagar, Marcel Gort, Jia Jun Qin, Mark Aldham, Tomasz S. Czajkowski, S. Brown, J. Anderson","From software to accelerators with LegUp high-level synthesis",2013,"","","","",755,"2024-08-22 15:04:59","","10.1109/CASES.2013.6662524","","",,,,,60,5.45,6,12,11,"Embedded system designers can achieve energy and performance benefits by using dedicated hardware accelerators. However, implementing custom hardware accelerators for an application can be difficult and time intensive. LegUp is an open-source high-level synthesis framework that simplifies the hardware accelerator design process [8]. With LegUp, a designer can start from an embedded application running on a processor and incrementally migrate portions of the program to hardware accelerators implemented on an FPGA. The final application then executes on an automatically-generated software/hardware coprocessor system. This paper presents on overview of the LegUp design methodology and system architecture, and discusses ongoing work on profiling, hardware/software partitioning, hardware accelerator quality improvements, Pthreads/OpenMP support, visualization tools, and debugging support.","",""
563,"Andrew Canis, Jongsok Choi, Mark Aldham, Victor Zhang, Ahmed Kammoona, J. Anderson, S. Brown, Tomasz S. Czajkowski","LegUp: high-level synthesis for FPGA-based processor/accelerator systems",2011,"","","","",532,"2024-08-22 15:04:59","","10.1145/1950413.1950423","","",,,,,563,43.31,70,8,13,"In this paper, we introduce a new open source high-level synthesis tool called LegUp that allows software techniques to be used for hardware design. LegUp accepts a standard C program as input and automatically compiles the program to a hybrid architecture containing an FPGA-based MIPS soft processor and custom hardware accelerators that communicate through a standard bus interface. Results show that the tool produces hardware solutions of comparable quality to a commercial high-level synthesis tool.","",""
322,"Andrew Canis, Jongsok Choi, Mark Aldham, Victor Zhang, Ahmed Kammoona, Tomasz S. Czajkowski, S. Brown, J. Anderson","LegUp: An open-source high-level synthesis tool for FPGA-based processor/accelerator systems",2013,"","","","",347,"2024-08-22 15:04:59","","10.1145/2514740","","",,,,,322,29.27,40,8,11,"It is generally accepted that a custom hardware implementation of a set of computations will provide superior speed and energy efficiency relative to a software implementation. However, the cost and difficulty of hardware design is often prohibitive, and consequently, a software approach is used for most applications. In this article, we introduce a new high-level synthesis tool called LegUp that allows software techniques to be used for hardware design. LegUp accepts a standard C program as input and automatically compiles the program to a hybrid architecture containing an FPGA-based MIPS soft processor and custom hardware accelerators that communicate through a standard bus interface. In the hybrid processor/accelerator architecture, program segments that are unsuitable for hardware implementation can execute in software on the processor. LegUp can synthesize most of the C language to hardware, including fixed-sized multidimensional arrays, structs, global variables, and pointer arithmetic. Results show that the tool produces hardware solutions of comparable quality to a commercial high-level synthesis tool. We also give results demonstrating the ability of the tool to explore the hardware/software codesign space by varying the amount of a program that runs in software versus hardware. LegUp, along with a set of benchmark C programs, is open source and freely downloadable, providing a powerful platform that can be leveraged for new research on a wide range of high-level synthesis topics.","",""
20,"Andrew Huang","Moore's Law is Dying (and that could be good)",2015,"","","","",798,"2024-08-22 15:04:59","","10.1109/MSPEC.2015.7065418","","",,,,,20,2.22,20,1,9,"Companies that produce open-source hardware are few and far between. At least, they are if you define them in the usual way: an enterprise that provides documentation and permission sufficient for others to re-create, modify, improve, and even make their own versions of the devices it sells. And although open hardware has made strides in recent years-including an increasing number of companies adhering to these practices along with the establishment of the Open Source Hardware Association-it remains a niche industry. You might guess the reason to be simple-such companies must be set up and run by idealists who lack any hardheaded business sense. Not true! What's held back the opensource hardware movement is not a lack of business acumen; it's the rapid evolution of electronic technology. The reasons for this are subtle, but as I will explain below, swift advances in electronic technology inherently favor large “closed” businesses at the expense of small teams or individual innovators, who benefit most by working with open systems. At least that's the way things have been. But there are changes coming that I expect will tilt the balance the other way.","",""
11,"Andrew Katz","Towards a Functional Licence for Open Hardware",2012,"","","","",479,"2024-08-22 15:04:59","","10.5033/IFOSSLR.V4I1.69","","",,,,,11,0.92,11,1,12,"Open hardware lags open source software in maturity. The two main licences assert a form of copyleft. This paper argues that copyleft's applicabilty to hardware is probelmatic, and concludes by proposing a simpler non-copyleft licence, based on Apache 2.0, for hardware.","",""
32,"Andrey Khurri, E. Vorobyeva, A. Gurtov","Performance of host identity protocol on lightweight hardware",2007,"","","","",676,"2024-08-22 15:04:59","","10.1145/1366919.1366925","","",,,,,32,1.88,11,3,17,"The Host Identity Protocol (HIP) is being standardized by the IETF as a new solution for host mobility and multihoming in the Internet. HIP uses self-certifying public-private key pairs in combination with IPsec to authenticate hosts and protect user data. While there are three open-source HIP implementations, no experience is available with running HIP on lightweight hardware such as a PDA or a mobile phone. Limited computational power and battery lifetime of lightweight devices raises concerns if HIP can be used there at all. This paper presents performance measurements of HIP over WLAN on Nokia 770 Internet Tablet. It also provides comprehensive analysis of the results and makes suggestions on HIP suitability for lightweight clients.","",""
46,"Andrés Mejías, R. S. Herrera, M. Marquez, Antonio José Calderón Godoy, Isaías González Pérez, J. Márquez","Easy Handling of Sensors and Actuators over TCP/IP Networks by Open Source Hardware/Software",2017,"","","","",50,"2024-08-22 15:04:59","","10.3390/s17010094","","",,,,,46,6.57,8,6,7,"There are several specific solutions for accessing sensors and actuators present in any process or system through a TCP/IP network, either local or a wide area type like the Internet. The usage of sensors and actuators of different nature and diverse interfaces (SPI, I2C, analogue, etc.) makes access to them from a network in a homogeneous and secure way more complex. A framework, including both software and hardware resources, is necessary to simplify and unify networked access to these devices. In this paper, a set of open-source software tools, specifically designed to cover the different issues concerning the access to sensors and actuators, and two proposed low-cost hardware architectures to operate with the abovementioned software tools are presented. They allow integrated and easy access to local or remote sensors and actuators. The software tools, integrated in the free authoring tool Easy Java and Javascript Simulations (EJS) solve the interaction issues between the subsystem that integrates sensors and actuators into the network, called convergence subsystem in this paper, and the Human Machine Interface (HMI)—this one designed using the intuitive graphical system of EJS—located on the user’s computer. The proposed hardware architectures and software tools are described and experimental implementations with the proposed tools are presented.","",""
51,"Angel Soriano, Leonardo Marín, M. Vallés, Á. Valera, P. Albertos","Low Cost Platform for Automatic Control Education Based on Open Hardware.",2014,"","","","",366,"2024-08-22 15:04:59","","10.3182/20140824-6-ZA-1003.01909","","",,,,,51,5.10,10,5,10,"Abstract Automatic control, as well as the introduction to programming, are subjects increasingly being taught to young engineering students. For this reason the availability of a suitable platform for the laboratory work becomes a critical decision, in order to promote students' motivation to experience the theoretical concepts studied in the classroom. Until recently, the only option to perform laboratory work in this kind of subjects was to use closed platforms commercially available but today, thanks to advances in technology, many open hardware options supporting standard and intuitive programming languages are available. In order to provide a multidisciplinary low cost open platform for the automatic control introductory courses, an example of open-source educational platform easily programmable composed by a differential mobile robot with a robotic arm manipulator is presented in this paper.","",""
57,"Ankur M. Mehta, K. Pister","WARPWING: A complete open source control platform for miniature robots",2010,"","","","",411,"2024-08-22 15:04:59","","10.1109/IROS.2010.5649382","","",,,,,57,4.07,29,2,14,"The electronics packages for many robot control systems have very similar requirements, yet are often redesigned for each custom application. To reduce wasted time and effort, the project presented in this paper (the Wireless Autonomous Robot Platform with Inertial Navigation and Guidance, WARP-WING) is intended to create a complete and easily customizable general purpose control system for miniature robotic systems, in particular micro air vehicles. In its default configuration, hardware designs, firmware, and software are all available to deliver an out-of-the-box robot control solution comprising 6 degree-of-freedom inertial sensors, a microprocessor, and wireless communication, along with general purpose input/output pins, serial ports, and control outputs for interfacing to additional sensors and actuators. The entire project is open source and a process is in place to enable modification of any component, allowing for easy adaptation to any need. WARPWING is already in use in a number of labs, with each research group contributing its expertise to enhance the platform and make such modifications available to others as well.","",""
144,"Anthony G. Rowe, Adam Goode, Dhiraj Goel, I. Nourbakhsh","CMUcam3: An Open Programmable Embedded Vision Sensor",2007,"","","","",662,"2024-08-22 15:04:59","","","","",,,,,144,8.47,36,4,17,"In this paper we present CMUcam3, a low-cost, open source, embedded computer vision platform. The CMUcam3 is the third generation of the CMUcam system and is designed to provide a flexible and easy to use open source development environment along with a more powerful hardware platform. The goal of the system is to provide simple vision capabilities to small embedded systems in the form of an intelligent sensor that is supported by an open source community. The hardware platform consists of a color CMOS camera, a frame buffer, a low cost 32bit ARM7TDMI microcontroller, and an MMC memory card slot. The CMUcam3 also includes 4 servo ports, enabling one to create entire, working robots using the CMUcam3 board as the only requisite robot processor. Custom C code can be developed using an optimized GNU toolchain and executables can be flashed onto the board using a serial port without external downloading hardware. The development platform includes a virtual camera target allowing for rapid application development exclusively on a PC. The software environment comes with numerous open source example applications and libraries including JPEG compression, frame differencing, color tracking, convolutions, histogramming, edge detection, servo control, connected component analysis, FAT file system support, and a face detector.","",""
34,"Antoine Floch, Tomofumi Yuki, Ali Hassan El Moussawi, Antoine Morvan, Kevin J. M. Martin, Maxime Naullet, M. Alle, L. L'Hours, N. Simon, Steven Derrien, François Charot, C. Wolinski, O. Sentieys","GeCoS: A framework for prototyping custom hardware design flows",2013,"","","","",544,"2024-08-22 15:04:59","","10.1109/SCAM.2013.6648190","","",,,,,34,3.09,3,13,11,"GeCoS is an open source framework that provide a highly productive environment for hardware design. GeCoS primarily targets custom hardware design using High Level Synthesis, distinguishing itself from classical compiler infrastructures. Compiling for custom hardware makes use of domain specific semantics that are not considered by general purpose compilers. Finding the right balance between various performance criteria, such as area, speed, and accuracy, is the goal, contrary to the typical goal in high performance context to maximize speed. The GeCoS infrastructure facilitates the prototyping of hardware design flows, going beyond compiler analyses and transformations. Hardware designers must interact with the compiler for design space exploration, and it is important to be able to give instant feedback to the users.","",""
28,"Apolinar González, R. Aquino-Santos, W. Mata, Alberto M. Ochoa-Brust, Pedro Saldaña, A. E. Block","Open-WiSe: A Solar Powered Wireless Sensor Network Platform",2012,"","","","",945,"2024-08-22 15:04:59","","10.3390/s120608204","","",,,,,28,2.33,5,6,12,"Because battery-powered nodes are required in wireless sensor networks and energy consumption represents an important design consideration, alternate energy sources are needed to provide more effective and optimal function. The main goal of this work is to present an energy harvesting wireless sensor network platform, the Open Wireless Sensor node (WiSe). The design and implementation of the solar powered wireless platform is described including the hardware architecture, firmware, and a POSIX Real-Time Kernel. A sleep and wake up strategy was implemented to prolong the lifetime of the wireless sensor network. This platform was developed as a tool for researchers investigating Wireless sensor network or system integrators.","",""
73,"Arief Marwanto, M. Sarijari, N. Fisal, S. K. Yusof, R. Rashid","Experimental study of OFDM implementation utilizing GNU Radio and USRP - SDR",2009,"","","","",801,"2024-08-22 15:04:59","","10.1109/MICC.2009.5431480","","",,,,,73,4.87,15,5,15,"A Software Defined Radio (SDR) is a radio which can tune to any frequency band, transmit and receive different modulations and different physical parameters across a large frequency spectrum by using a programmable hardware and powerful software. An SDR performs significant amounts of signal processing in a general purpose computer, or a reconfigurable piece of digital electronics or the combination of both. In this paper, we seek to explore the viability of using GNU Radio; an open source SDR implementation and the Universal Software Radio Peripheral (USRP); an SDR hardware platform, to transmit and receive the OFDM radio signal with QPSK and BPSK modulation. Quality of Service (QoS) in terms of Packet Received Ratio (PRR) on the data transmitted will then be investigated and analyzed.","",""
1008,"Ashish Thusoo, Joydeep Sen Sarma, Namit Jain, Zheng Shao, Prasad Chakka, Ning Zhang, Suresh Anthony, H. Liu, R. Murthy","Hive - a petabyte scale data warehouse using Hadoop",2010,"","","","",508,"2024-08-22 15:04:59","","10.1109/ICDE.2010.5447738","","",,,,,1008,72.00,112,9,14,"The size of data sets being collected and analyzed in the industry for business intelligence is growing rapidly, making traditional warehousing solutions prohibitively expensive. Hadoop [1] is a popular open-source map-reduce implementation which is being used in companies like Yahoo, Facebook etc. to store and process extremely large data sets on commodity hardware. However, the map-reduce programming model is very low level and requires developers to write custom programs which are hard to maintain and reuse. In this paper, we present Hive, an open-source data warehousing solution built on top of Hadoop. Hive supports queries expressed in a SQL-like declarative language - HiveQL, which are compiled into map-reduce jobs that are executed using Hadoop. In addition, HiveQL enables users to plug in custom map-reduce scripts into queries. The language includes a type system with support for tables containing primitive types, collections like arrays and maps, and nested compositions of the same. The underlying IO libraries can be extended to query data in custom formats. Hive also includes a system catalog - Metastore - that contains schemas and statistics, which are useful in data exploration, query optimization and query compilation. In Facebook, the Hive warehouse contains tens of thousands of tables and stores over 700TB of data and is being used extensively for both reporting and ad-hoc analyses by more than 200 users per month.","",""
1872,"Ashish Thusoo, Joydeep Sen Sarma, Namit Jain, Zheng Shao, Prasad Chakka, Suresh Anthony, H. Liu, P. Wyckoff, R. Murthy","Hive - A Warehousing Solution Over a Map-Reduce Framework",2009,"","","","",500,"2024-08-22 15:04:59","","10.14778/1687553.1687609","","",,,,,1872,124.80,208,9,15,"The size of data sets being collected and analyzed in the industry for business intelligence is growing rapidly, making traditional warehousing solutions prohibitively expensive. Hadoop [3] is a popular open-source map-reduce implementation which is being used as an alternative to store and process extremely large data sets on commodity hardware. However, the map-reduce programming model is very low level and requires developers to write custom programs which are hard to maintain and reuse.","",""
72,"Asit K. Mishra, R. Barik, S. Paul","iACT: A Software-Hardware Framework for Understanding the Scope of Approximate Computing",2014,"","","","",487,"2024-08-22 15:04:59","","","","",,,,,72,7.20,24,3,10,"Approximate computing has recently emerged as a paradigm for enabling energy efficient software and hardware implementations by exploiting the inherent resiliency in applications to impreciseness in their underlying computations. Much of the previous work in this area has demonstrated the potential for significant energy and performance improvements, but these works largely consist of ad hoc techniques that are applied to a small number of similar applications. Mainstream adoption of approximate computing requires a deeper understanding of the inherent application resilience and the codesign hardware to go with the software. This dictates tools and methods that can help programmers reason about the scope and behavior of approximations in applications. To this end, this paper discusses an open source toolkit, called iACT (Intel’s Approximate Computing Toolkit) to analyze and study the scope of approximations in applications. Our toolkit consists of a compiler, runtime and a simulated hardware test bed. We discuss the design of this toolkit and present examples of how to use this toolkit in this paper. As an example on how to use this toolkit, we include two different applications and analyze the scope of approximate computing in these.","",""
79,"Avinash R. Desai, M. Hsiao, Chao Wang, L. Nazhandali, Simin Hall","Interlocking obfuscation for anti-tamper hardware",2013,"","","","",938,"2024-08-22 15:04:59","","10.1145/2459976.2459985","","",,,,,79,7.18,16,5,11,"Tampering and Reverse Engineering of a chip to extract the hardware Intellectual Property (IP) core or to inject malicious alterations is a major concern. Digital systems susceptible to tampering are of immense concern to defense organizations. First, offshore chip manufacturing allows the design secrets of the IP cores to be transparent to the foundry and other entities along the production chain. Second, small malicious modifications to the design may not be detectable after fabrication without anti-tamper mechanisms. Some techniques have been developed in the past to improve the defense against such attacks but they tend to fall prey to the increasing power of the attacker. We present a new way to protect against tampering by a clever obfuscation of the design, which can be unlocked with a specific, dynamic path traversal. Hence, the functional mode of the controller is hidden with the help of obfuscated states, and the functional mode is made operational only on the formation of a specific interlocked Code-Word during state transition. No comparator is needed as the obfuscation is embedded within the transition function of the state machine itself. A side benefit is that any small alteration will be magnified via the obfuscated design. In other words, an alteration to the design will manifest itself as a large difference in the circuit's functionality. Experimental results on an Advanced Encryption Standard (AES) circuit from the open-source IP-cores suite suggest that the proposed method provides better active defense mechanisms against attacks with nominal (7.8%) area overhead.","",""
129,"Avrilia Floratou, Ashvin Agrawal, Bill Graham, Sriram Rao, K. Ramasamy","Dhalion: Self-Regulating Stream Processing in Heron",2017,"","","","",987,"2024-08-22 15:04:59","","10.14778/3137765.3137786","","",,,,,129,18.43,26,5,7,"In recent years, there has been an explosion of large-scale real-time analytics needs and a plethora of streaming systems have been developed to support such applications. These systems are able to continue stream processing even when faced with hardware and software failures. However, these systems do not address some crucial challenges facing their operators: the manual, time-consuming and error-prone tasks of tuning various configuration knobs to achieve service level objectives (SLO) as well as the maintenance of SLOs in the face of sudden, unpredictable load variation and hardware or software performance degradation.    In this paper, we introduce the notion of self-regulating streaming systems and the key properties that they must satisfy. We then present the design and evaluation of Dhalion, a system that provides self-regulation capabilities to underlying streaming systems. We describe our implementation of the Dhalion framework on top of Twitter Heron, as well as a number of policies that automatically reconfigure Heron topologies to meet throughput SLOs, scaling resource consumption up and down as needed. We experimentally evaluate our Dhalion policies in a cloud environment and demonstrate their effectiveness. We are in the process of open-sourcing our Dhalion policies as part of the Heron project.","",""
20,"B. Cathey, Sofian N. Obaid, Alexander M. Zolotarev, R. Pryamonosov, R. Syunyaev, Sharon A. George, I. Efimov","Open-Source Multiparametric Optocardiography",2019,"","","","",235,"2024-08-22 15:04:59","","10.1038/s41598-018-36809-y","","",,,,,20,4.00,3,7,5,"","",""
51,"B. Chopard, P. Combes, J. Zory","A Conservative Approach to SystemC Parallelization",2006,"","","","",852,"2024-08-22 15:04:59","","10.1007/11758549_89","","",,,,,51,2.83,17,3,18,"","",""
28,"B. Fort, Andrew Canis, Jongsok Choi, Nazanin Calagar, Ruolong Lian, Stefan Hadjis, Yu Ting Chen, Mathew Hall, Bain Syrowik, Tomasz S. Czajkowski, S. Brown, J. Anderson","Automating the Design of Processor/Accelerator Embedded Systems with LegUp High-Level Synthesis",2014,"","","","",791,"2024-08-22 15:04:59","","10.1109/EUC.2014.26","","",,,,,28,2.80,3,12,10,"LegUp [1] is an open-source high-level synthesis (HLS) tool that accepts a C program as input and automatically synthesizes it into a hybrid system. The hybrid system comprises an embedded processor and custom accelerators that realize user-designated compute-intensive parts of the program with improved throughput and energy efficiency. In this paper, we overview the LegUp framework and describe several recent developments: 1) support for an embedded ARM processor, as is available on Altera's recently released SoC FPGA, 2) HLS support for software parallelization schemes -- pthreads and OpenMP, 3) enhancements to LegUp's core HLS algorithms that raise the quality of the auto-generated hardware, and, 4) a preliminary debugging and verification framework providing C source-level debugging of HLS hardware. Since its first release in 2011, LegUp has been downloaded over 1000 times by groups around the world, providing a powerful platform for new research in high-level synthesis algorithms and embedded systems design.","",""
47,"B. Gati","Open source autopilot for academic research - The Paparazzi system",2013,"","","","",349,"2024-08-22 15:04:59","","10.1109/ACC.2013.6580045","","",,,,,47,4.27,47,1,11,"Paparazzi is a free and open-source hardware and software project intended to create a flexible autopilot system for fixed-wing aircraft as well as multicopters by allowing and encouraging input from the community. In addition to the airborne hardware and software (from voltage regulators, IMU boards and GPS receivers to Kalman filtering code), the project includes an ever-expanding array of ground hardware and software including modems, antennas and a user-friendly ground control software interface with a simulation environment. The airborne software supports several microprocessor architectures and various hardware configurations. All hardware and software is open-source and freely available to anyone under the GNU licensing agreement. Currently, the Paparazzi project is developed mainly at ENAC University (Ecole Nationale de l'Aviation Civile) and the TU-Delft, but significant amount of work done by various open-source enthusiasts. The system has been used on dozens of airframes and implemented by several teams around the world. Thousands of hours of autonomous flight have been successfully achieved with the Paparazzi system on all continents including the Antarctic.","",""
66,"B. Halligan, Joey Geiger, Andrew K Vallejos, A. Greene, S. Twigger","Low cost, scalable proteomics data analysis using Amazon's cloud computing services and open source search algorithms.",2009,"","","","",426,"2024-08-22 15:04:59","","10.1021/pr800970z","","",,,,,66,4.40,13,5,15,"One of the major difficulties for many laboratories setting up proteomics programs has been obtaining and maintaining the computational infrastructure required for the analysis of the large flow of proteomics data. We describe a system that combines distributed cloud computing and open source software to allow laboratories to set up scalable virtual proteomics analysis clusters without the investment in computational hardware or software licensing fees. Additionally, the pricing structure of distributed computing providers, such as Amazon Web Services, allows laboratories or even individuals to have large-scale computational resources at their disposal at a very low cost per run. We provide detailed step-by-step instructions on how to implement the virtual proteomics analysis clusters as well as a list of current available preconfigured Amazon machine images containing the OMSSA and X!Tandem search algorithms and sequence databases on the Medical College of Wisconsin Proteomics Center Web site ( http://proteomics.mcw.edu/vipdac ).","",""
12,"B. Huang","Open-source Hardware – Microcontrollers and Physics Education – Integrating DIY Sensors and Data Acquisition with Arduino",2015,"","","","",82,"2024-08-22 15:04:59","","10.18260/p.24542","","",,,,,12,1.33,12,1,9,"Brian Huang is an Education Engineer for SparkFun Electronics, a cutting edge open-source hardware and electronics education company. Brian started his career in engineering with wireless transport technologies for ADC Telecommunications in Minneapolis, MN. While working at ADC, Brian volunteered at the Science Museum of Minnesota and quickly discovered a passion for teaching and working with students especially in an environment that fostered and supported the ”wow” factor associated with inquiry and discovery. In 2007, Brian left the world of engineering to pursue a career in education. For the past 5 years, Brian has taught various levels of high school physics, mathematics, applied technology, and robotics.","",""
70,"B. J. Dempsey, Debra Weiss, Paul Jones, J. Greenberg","A Quantitative Profile of a Community of Open Source Linux Developers",1999,"","","","",911,"2024-08-22 15:04:59","","","","",,,,,70,2.80,18,4,25,"Open source software, or free software, has generated much interest and debate in the wake of a number of high-impact applications and systems produced under open source models for development and distribution. Despite the high degree of interest, little hard data exists to-date on the membership of collaborative open source communities and the evolutionary process of their repositories. This paper contributes a baseline quantitative study of one of the oldest continuous repositories for the Linux open source project (the UNC MetaLab Linux Archives), including demographic information on its broad community of developers. Our methodology is a close examination of collection statistics, including custom monitoring scripts on the server, as well as an analysis of the contents of user-generated metadata embedded within the Archives. User-generated metadata files in a format known as the Linux Software Map (LSM) are required when submitting open source software for inclusion in non-mirrored portions of the MetaLab Linux Archives. The over 4500 LSMs in the Archives then provide a demographic profile of contributors of LSM-accompanied software as well as other information on this broad subset of the Linux community. To explore repository evolution directly, an instrumented Linux Archives mirror was developed, and aggregate statistics on content changes seen over a month-long period are reported. In sum, our results quantify aspects of the global Linux development effort in dimensions that have not been documented before now, as well as providing a guide for more detailed future studies. Introduction Open source development communities have successfully created, distributed, and continued to evolve many important software projects---the GNU project’s utilities and libraries including the gcc compiler and Emacs editor, the Perl and Tcl languages, the Apache WWW server, and the Linux and FreeBSD operating system. Open source, or free software, means more than access to source code (see Appendix A), and there is not universal agreement on a single open-source development model. Nonetheless, the guiding principle for open source software is that, by sharing source code, developers 1 See http://metalab.unc.edu/osrt/ for related work by the Open Source Research Team. Dempsey, Weiss, Jones, and Greenberg 12/6/99 SILS Technical Report TR-1999-05 Page 2 cooperate under a model of rigorous peer-review and take advantage of “parallel debugging” that leads to innovation and rapid advancement in developing and evolving software products. Open-source licensing, moreover, ensures an open market in integration and support for these products downstream. Software production and distribution driven by the open source model thus has strong practical advantages as well as its strong appeal to those who, in Richard Stallman’s words, see open source software in a “social advantage, allowing users to cooperate, and an ethical advantage, respecting the user’s freedom. [3]” Advocates emphasizing the business reasons for adopting an open source model have engendered in recent years an on-going---and often acrimonious--debate over the ultimate impact of open source communities. Some have proposed that free software methods leveraging the Internet represent an alternative economic model for engendering and managing robust software that will dramatically reshape the multi-billion dollar commercial software industry. Skeptics meanwhile continue to challenge the idea that the technical and organizational approach represented by open-source development can really scale up in the coming years and produce the robust software required for large-scale mainstream computing [1]. The stakes in this debate are clearly quite high. A prime difficulty in understanding and drawing conclusions about open source collaborative development has been the sketchy information available on exactly who participates in open source development and how their software archives evolve. This lack of information is understandable given the distributed, organic process of collaborative development in open source communities. The contribution of this paper is a baseline quantitative study of a broad community of developers within the Linux open source effort, which, due to its influence and increasing user base, is widely regarded as a cornerstone project for large-scale open-source development. Our work characterizes a very large repository of Linux-related materials and analyzes information embedded within the collection on the nature of its contributors. Derived from a variety of collection meta-data statistics, the data and analysis here supports the assertions that Linux community is indeed very vibrant, geographically diverse, and engaged in a broadening the quantity and scope of the freely available Linux software and documentation. Background on Open Source Development The genesis of the open-source model for software development and distribution goes back to the earliest days of software in university environments. Open-source software is an alternative term for “free software”, which was popularized by the seminal Free Software Foundation, founded in 1984 by MIT researcher Richard Stallman. The Free Software Foundation is the parent organization for the GNU (GNU’s Not Unix) project. Stallman’s vision was to develop a free operating system, complete with standard software tools such as compilers, interpreters, text editors, mailers, and so forth, in order to recreate a community of cooperating hackers that he felt had been lost [3]. Under his direction, the Free Software Foundation popularized the term “free software” as explained in the now-classic distinction, free as in “free speech”, not “free beer”. That is, Dempsey, Weiss, Jones, and Greenberg 12/6/99 SILS Technical Report TR-1999-05 Page 3 free software may or may not be distributed with a monetary cost, but the knowledge that underlies the program, i.e., the source code, should be freely available in order to empower future innovation. Software source code is a form of scientific knowledge, and just as scientists publish so that other scientists can build on their results, computer scientists must publish their source code in order to foster continued innovation in computing. Unfortunately, the term “free software” has negative connotations for many in the commercial computing world, and the tone adopted by Stallman, the most prominent free software advocate for some time, was distinctly anti-business. In early 1997, a group of leaders in the free software community decided to address this problem head-on with a marketing campaign designed “argue for ‘free software' on pragmatic grounds of reliability, cost, and strategic business risk.” [4]. They were goaded to action largely by frustration over what they felt was the unrecognized potential of free software as a driver of innovation and the basis for the development of commercial-grade software, despite the successes of Apache, Linux, and other projects. An initial decision of the group, which would become the Open Source Initiative, was to choose the term “open source” for their campaign to avoid the baggage being carried by the term “free software”. A key component of Stallman’s effort in developing a successful free software organization was to formulate a licensing agreement that would prevent businesses from taking free software and using it in binary-only redistributions for commercial gain. Stallman developed the GNU General Public License, known as the GPL or “copyleft”, to address this issue. In subsequent years, other open-source efforts adopted variations on copyright statements designed to enable open-source works to thrive while not hampering the ability of developers to incorporate open-source work effectively. For its part, The Open Source Initiative adopted a set of criteria, titled “The Open Source Definition”, for open-source licensing. Based on an earlier document by Bruce Perens, the Open Source Definition explicitly mentions some example licenses that fit its criteria, including that of the GNU project (the GNU GPL), the Berkeley Unix Project (BSD), the X Consortium, and a few others. For reference, the Open Source Definition, Version 1.7, is reproduced in Appendix A. Linux: Open-Source Development on a Global Scale Internet connectivity has enabled the open-source notion of cooperative, peer-reviewed software development to be deployed on a global scale. Perhaps the most influential open-source project to-date has been and continues to be the Linux operating system. Linux began as a personal project of a graduate student in Finland, Linus Torvalds, in 1991. The Linux project now represents a mature operating system that runs on the popular hardware platforms. Linux is playing an increasingly significant role in the business plans of established computing companies, in university research labs, and in the development of a new set of companies focused on Linux support and integration issues. 2 It is interesting to note that the GNU Emacs FAQ (http://www.gnu.org/software/emacs/emacs-faq.text) dated February 1999 points out: “The real legal meaning of the GNU General Public License (copyleft) will only be known if and when a judge rules on its validity and scope. There has never been a copyright infringement case involving the GPL to set any precedents... ” Dempsey, Weiss, Jones, and Greenberg 12/6/99 SILS Technical Report TR-1999-05 Page 4 According to April 1999 statistics at the Internet Operating System Counter site [5], Linux is now the operating system at over 30% of Internet server sites. Linux has been estimated to have 10 percent of the server market share in the Unix market with growth trends suggesting it will dominate the Unix arena in a few years. The Linux Kernel Project continues to be led by Linus Torvalds himself, with a significant array of co-developers throughout the world. In addition, the Linux community of application-lev","",""
30,"B. Jesiek","Democratizing software: Open source, the hacker ethic, and beyond",2003,"","","","",465,"2024-08-22 15:04:59","","10.5210/fm.v8i10.1082","","",,,,,30,1.43,30,1,21,"The development of computer software and hardware in closed-source, corporate environments limits the extent to which technologies can be used to empower the marginalized and oppressed. Various forms of resistance and counter-mobilization may appear, but these reactive efforts are often constrained by limitations that are embedded in the technologies by those in power. In the world of open source software development, actors have one more degree of freedom in the proactive shaping and modification of technologies, both in terms of design and use. Drawing on the work of philosopher of technology Andrew Feenberg, I argue that the open source model can act as a forceful lever for positive change in the discipline of software development. A glance at the somewhat vacuous hacker ethos, however, demonstrates that the technical community generally lacks a cohesive set of positive values necessary for challenging dominant interests. Instead, Feenbergos commitment to ""deep democratization"" is offered as a guiding principle for incorporating more preferable values and goals into software development processes.","",""
327,"B. Lu, Xin Wu, H. Figueroa, A. Monti","A Low-Cost Real-Time Hardware-in-the-Loop Testing Approach of Power Electronics Controls",2007,"","","","",578,"2024-08-22 15:04:59","","10.1109/TIE.2007.892253","","",,,,,327,19.24,82,4,17,"Hardware-in-the-loop (HIL) testing is increasingly recognized as an effective approach in the design of power electronics controls. A high-performance real-time simulation environment is necessary to obtain high-fidelity results in HIL simulations. This paper presents the detailed implementation of a very-low-cost multisolver hard real-time simulation environment, namely the real-time extension of the virtual test bed (VTB-RT). VTB-RT is implemented completely from open-source software and off-the-shelf hardware. Using VTB-RT, this paper proposes an efficient real-time HIL testing approach for control designs in power electronics applications. VTB-RT enables the natural coupling between the simulation environment and the hardware under test and, thus, makes virtual power exchange in HIL simulation possible. For validation purposes, the proposed real-time HIL testing approach is applied in two well-known power electronics application examples, namely a boost converter and an H-bridge inverter with their respective control systems, representing a very-low-cost and a relatively advanced hardware setup, respectively. The consistency of the experimental results with the theoretical results proves the applicability of VTB-RT and the proposed testing approach. Finally, the most recent research progresses in VTB-RT are summarized","",""
38,"B. Sutradhar","Design and development of an institutional repository at the Indian Institute of Technology Kharagpur",2006,"","","","",866,"2024-08-22 15:04:59","","10.1108/00330330610681321","","",,,,,38,2.11,38,1,18,"Purpose – To describe how an institutional repository (IR) was set up, using open source software, at the Indian Institute of Technology (IIT) in Kharagpur. Members of the IIT can publish their research documents in the IR for online access as well as digital preservation. Material in this IR includes instructional materials, records, data sets, electronic theses, dissertations, annual reports, as well as published papers. This opens up the world of scholarly publishing in a way that causes re‐examination of many of the current practices of scholarly communication and publishing.Design/methodology/approach – Details of the hardware and software requirements are provided along with information about available open source software. The steps involved in uploading and submitting material in the IR are described.Findings – This paper provides evidence on how to set up an IR and how to create different communities and, under each community, many collections using the DSpace software. It was found that setting ...","",""
127,"B. Tanner, A. White","RL-Glue: Language-Independent Software for Reinforcement-Learning Experiments",2009,"","","","",754,"2024-08-22 15:04:59","","10.5555/1577069.1755857","","",,,,,127,8.47,64,2,15,"RL-Glue is a standard, language-independent software package for reinforcement-learning experiments. The standardization provided by RL-Glue facilitates code sharing and collaboration. Code sharing reduces the need to re-engineer tasks and experimental apparatus, both common barriers to comparatively evaluating new ideas in the context of the literature. Our software features a minimalist interface and works with several languages and computing platforms. RL-Glue compatibility can be extended to any programming language that supports network socket communication. RL-Glue has been used to teach classes, to run international competitions, and is currently used by several other open-source software and hardware projects.","",""
44,"B. V. Herbruggen, Bart Jooris, Jen Rossey, Matteo Ridolfi, Nicola Macoir, Quinten Van den Brande, S. Lemey, E. D. Poorter","Wi-PoS: A Low-Cost, Open Source Ultra-Wideband (UWB) Hardware Platform with Long Range Sub-GHz Backbone",2019,"","","","",112,"2024-08-22 15:04:59","","10.3390/s19071548","","",,,,,44,8.80,6,8,5,"Ultra-wideband (UWB) localization is one of the most promising approaches for indoor localization due to its accurate positioning capabilities, immunity against multipath fading, and excellent resilience against narrowband interference. However, UWB researchers are currently limited by the small amount of feasible open source hardware that is publicly available. We developed a new open source hardware platform, Wi-PoS, for precise UWB localization based on Decawave’s DW1000 UWB transceiver with several unique features: support of both long-range sub-GHz and 2.4 GHz back-end communication between nodes, flexible interfacing with external UWB antennas, and an easy implementation of the MAC layer with the Time-Annotated Instruction Set Computer (TAISC) framework. Both hardware and software are open source and all parameters of the UWB ranging can be adjusted, calibrated, and analyzed. This paper explains the main specifications of the hardware platform, illustrates design decisions, and evaluates the performance of the board in terms of range, accuracy, and energy consumption. The accuracy of the ranging system was below 10 cm in an indoor lab environment at distances up to 5 m, and accuracy smaller than 5 cm was obtained at 50 and 75 m in an outdoor environment. A theoretical model was derived for predicting the path loss and the influence of the most important ground reflection. At the same time, the average energy consumption of the hardware was very low with only 81 mA for a tag node and 63 mA for the active anchor nodes, permitting the system to run for several days on a mobile battery pack and allowing easy and fast deployment on sites without an accessible power supply or backbone network. The UWB hardware platform demonstrated flexibility, easy installation, and low power consumption.","",""
44,"B. Wijnen, G. Anzalone, A. Haselhuhn, P. Sanders, Joshua M. Pearce","Free and open-source control software for 3-D motion and processing",2016,"","","","",305,"2024-08-22 15:04:59","","10.5334/JORS.78","","",,,,,44,5.50,9,5,8,"RepRap 3-D printers and their derivatives using conventional firmware are limited by: 1) requiring technical knowledge, 2) poor resilience with unreliable hardware, and 3) poor integration in complicated systems. In this paper, a new control system called Franklin, for CNC machines in general and 3-D printers specifically, is presented that enables web-based three dimensional control of additive, subtractive and analytical tools from any Internet connected device. Franklin can be set up and controlled entirely from a web interface; it uses a custom protocol which allows it to continue printing when the connection is temporarily lost, and allows communication with scripts.","",""
46,"B. Wijnen, G. Anzalone, Joshua M. Pearce","Open-source mobile water quality testing platform",2014,"","","","",330,"2024-08-22 15:04:59","","10.2166/WASHDEV.2014.137","","",,,,,46,4.60,15,3,10,"The developing world remains plagued by lack of access to safe drinking water. Although many low-cost methods have been developed to treat contaminated water, low-cost methods for water-quality testing are necessary to determine if these appropriate technologies are needed, effective, and reliable. This paper provides a methodology for the design, development, and technical validation of a low-cost, open-source (OS) water testing platform. A case study is presented where the platform is developed to provide both the colorimetry for biochemical oxygen demand/chemical oxygen demand and nephelometry to measure turbidity using method ISO 7027. This approach resulted in equipment that is as accurate, but costs between 7.5 and 15 times less than current commercially available tools. It is concluded that OS hardware development is a promising solution for the equipment necessary to perform water quality measurements in both developed and developing regions.","",""
32,"B. Y. Jacobs, Emily H. Lakes, Alex J. Reiter, S. Lake, Trevor R Ham, Nic D. Leipzig, S. Porvasnik, C. Schmidt, Rebecca A. Wachs, K. Allen","The Open Source GAITOR Suite for Rodent Gait Analysis",2018,"","","","",270,"2024-08-22 15:04:59","","10.1038/s41598-018-28134-1","","",,,,,32,5.33,3,10,6,"","",""
105,"Baichuan Huang, Jun Zhao, Jingbin Liu","A Survey of Simultaneous Localization and Mapping",2019,"","","","",601,"2024-08-22 15:04:59","","10.5081/jgps.17.1.94","","",,,,,105,21.00,35,3,5,"Simultaneous Localization and Mapping (SLAM) achieves the purpose of simultaneous positioning and map construction based on self-perception. The paper makes an overview in SLAM including Lidar SLAM, visual SLAM, and their fusion. For Lidar or visual SLAM, the survey illustrates the basic type and product of sensors, open source system in sort and history, deep learning embedded, the challenge and future. Additionally, visual inertial odometry is supplemented. For Lidar and visual fused SLAM, the paper highlights the multi-sensors calibration, the fusion in hardware, data, task layer. The open question and forward thinking end the paper. The contributions of this paper can be summarized as follows: the paper provides a high quality and full-scale overview in SLAM. It's very friendly for new researchers to hold the development of SLAM and learn it very obviously. Also, the paper can be considered as dictionary for experienced researchers to search and find new interested orientation.","",""
85,"Bao Liu, Brandon Wang","Embedded reconfigurable logic for ASIC design obfuscation against supply chain attacks",2014,"","","","",682,"2024-08-22 15:04:59","","10.7873/DATE2014.256","","",,,,,85,8.50,43,2,10,"Hardware is the foundation and the root of trust of any security system. However, in today's global IC industry, an IP provider, an IC design house, a CAD company, or a foundry may subvert a VLSI system with back doors or logic bombs. Such a supply chain adversary's capability is rooted in his knowledge on the hardware design. Successful hardware design obfuscation would severely limit a supply chain adversary's capability if not preventing all supply chain attacks. However, not all designs are obfuscatable in traditional technologies. We propose to achieve ASIC design obfuscation based on embedded reconfigurable logic which is determined by the end user and unknown to any party in the supply chain. Combined with other security techniques, embedded reconfigurable logic can provide the root of ASIC design obfuscation, data confidentiality and tamper-proofness. As a case study, we evaluate hardware-based code injection attacks and reconfiguration-based instruction set obfuscation based on an open source SPARC processor LEON2. We prevent program monitor Trojan attacks and increase the area of a minimum code injection Trojan with a 1KB ROM by 2.38% for every 1% area increase of the LEON2 processor.","",""
95,"Bastian Bloessl, Michele Segata, C. Sommer, F. Dressler","Performance Assessment of IEEE 802.11p with an Open Source SDR-Based Prototype",2018,"","","","",247,"2024-08-22 15:04:59","","10.1109/TMC.2017.2751474","","",,,,,95,15.83,24,4,6,"We present a complete simulation and experimentation framework for IEEE 802.11p. The core of the framework is a Software Defined Radio (SDR)-based Orthogonal Frequency Division Multiplexing (OFDM) transceiver that we validated extensively by means of simulations, interoperability tests, and, ultimately, by conducting a field test. Being SDR-based, the transceiver offers important benefits: It provides access to all data down to and including the physical layer, allowing for a better understanding of the system. Based on open and programmable hardware and software, the transceiver is completely transparent and all implementation details can be studied and, if needed, modified. Finally, it enables a seamless switch between simulations and experiments and, thus, helps to bridge the gap between theory and practice. Comparing the transceiver’s performance with independent results from simulations and experiments, we underline its potential to be used as a tool for further studies of IEEE 802.11p networks both in field operational tests as well as for simulation-based development of novel physical layer solutions. To make the framework accessible to fellow researchers and to allow reproduction of the results, we released it under an Open Source license.","",""
183,"Bastian Bloessl, Michele Segata, C. Sommer, F. Dressler","An IEEE 802.11a/g/p OFDM receiver for GNU radio",2013,"","","","",648,"2024-08-22 15:04:59","","10.1145/2491246.2491248","","",,,,,183,16.64,46,4,11,"Experimental research on wireless communication protocols frequently requires full access to all protocol layers, down to and including the physical layer. Software Defined Radio (SDR) hardware platforms, together with real-time signal processing frameworks, offer a basis to implement transceivers that can allow such experimentation and sophisticated measurements. We present a complete Orthogonal Frequency Division Multiplexing (OFDM) receiver implemented in GNU Radio and fitted for operation with an Ettus USRP N210. To the best of our knowledge, this is the first prototype of a GNU Radio based OFDM receiver for this technology. Our receiver comprises all layers up to parsing the MAC header and extracting the payload of IEEE 802.11a/g/p networks. It supports both WiFi with a bandwidth of 20 MHz and IEEE 802.11p DSRC with a bandwidth of 10 MHz. We validated and verified our implementation by means of interoperability tests, and present representative performance measurements. By making the code available as Open Source we provide an easy-to-access system that can be readily used for experimenting with novel signal processing algorithms.","",""
16,"Beccani Marco, Susilo Ekawahyu, Natali Christian Di, Valdastri Pietro","SMAC — A Modular Open Source Architecture for Medical Capsule Robots",2014,"","","","",341,"2024-08-22 15:04:59","","10.5772/59505","","",,,,,16,1.60,4,4,10,"The field of Medical Capsule Robots (MCRs) is gaining momentum in the robotics community, with applications spanning from abdominal surgery to gastrointestinal (GI) endoscopy. MCRs are miniature multifunctional devices usually constrained in both size and on-board power supply. The design process for MCRs is time consuming and resource intensive, as it involves the development of custom hardware and software components. In this work, we present the STORM Lab Modular Architecture for Capsules (SMAC), a modular open source architecture for MCRs aiming to provide the MCRs research community with a tool for shortening the design and development time for capsule robots. The SMAC platform consists of both hardware modules and firmware libraries that can be used for developing MCRs. In particular, the SMAC modules are miniature boards of uniform diameter (i.e., 9.8 mm) that are able to fulfill five different functions: signal coordination combined with wireless data transmission, sensing, actuation, powering and vision/illumination. They are small in size, low power, and have reconfigurable software libraries for the Hardware Abstraction Layer (HAL), which has been proven to work reliably for different types of MCRs. A design template for a generic SMAC application implementing a robust communication protocol is presented in this work, together with its finite state machine abstraction, capturing all the architectural components involved. The reliability of the wireless link is assessed for different levels of data transmission power and separation distances. The current consumption for each SMAC module is quantified and the timing of a SMAC radio message transmission is characterized. Finally, the applicability of SMAC in the field of MCRs is discussed by analysing examples from the literature.","",""
44,"Ben Pfaff, Anthony Romano, Godmar Back","The pintos instructional operating system kernel",2009,"","","","",850,"2024-08-22 15:04:59","","10.1145/1508865.1509023","","",,,,,44,2.93,15,3,15,"Pintos is an instructional operating system, complete with documentation and ready-made, modular projects that introduce students to the principles of multi-programming, scheduling, virtual memory, and filesystems. By allowing students to run their work product on actual hardware, while simultaneously benefiting from debugging and dynamic analysis tools provided in simulated and emulated environments, Pintos increases student engagement. Unlike tailored versions of commercial or open source OS such as Linux, Pintos is designed from the ground up from an educational perspective. It has been used by multiple institutions for a number of years and is available for wider use.","",""
243,"Benjamin A. Suter, Timothy O'Connor, V. Iyer, L. Petreanu, Bryan M. Hooks, Taro Kiritani, K. Svoboda, G. Shepherd","Ephus: Multipurpose Data Acquisition Software for Neuroscience Experiments",2010,"","","","",696,"2024-08-22 15:04:59","","10.3389/fncir.2010.00100","","",,,,,243,17.36,30,8,14,"Physiological measurements in neuroscience experiments often involve complex stimulus paradigms and multiple data channels. Ephus (http://www.ephus.org) is an open-source software package designed for general-purpose data acquisition and instrument control. Ephus operates as a collection of modular programs, including an ephys program for standard whole-cell recording with single or multiple electrodes in typical electrophysiological experiments, and a mapper program for synaptic circuit mapping experiments involving laser scanning photostimulation based on glutamate uncaging or channelrhodopsin-2 excitation. Custom user functions allow user-extensibility at multiple levels, including on-line analysis and closed-loop experiments, where experimental parameters can be changed based on recently acquired data, such as during in vivo behavioral experiments. Ephus is compatible with a variety of data acquisition and imaging hardware. This paper describes the main features and modules of Ephus and their use in representative experimental applications.","",""
29,"Benjamin Ambrose, James M. Baxter, John Cully, Matthew Willmott, Elliot M Steele, Benji C. Bateman, M. Martin-Fernandez, A. Cadby, J. Shewring, Marleen Aaldering, Timothy D. Craggs","The smfBox is an open-source platform for single-molecule FRET",2020,"","","","",198,"2024-08-22 15:04:59","","10.1038/s41467-020-19468-4","","",,,,,29,7.25,3,11,4,"","",""
1190,"Bichen Wu, Xiaoliang Dai, Peizhao Zhang, Yanghan Wang, Fei Sun, Yiming Wu, Yuandong Tian, Péter Vajda, Yangqing Jia, K. Keutzer","FBNet: Hardware-Aware Efficient ConvNet Design via Differentiable Neural Architecture Search",2018,"","","","",905,"2024-08-22 15:04:59","","10.1109/CVPR.2019.01099","","",,,,,1190,198.33,119,10,6,"Designing accurate and efficient ConvNets for mobile devices is challenging because the design space is combinatorially large. Due to this, previous neural architecture search (NAS) methods are computationally expensive. ConvNet architecture optimality depends on factors such as input resolution and target devices. However, existing approaches are too resource demanding for case-by-case redesigns. Also, previous work focuses primarily on reducing FLOPs, but FLOP count does not always reflect actual latency. To address these, we propose a differentiable neural architecture search (DNAS) framework that uses gradient-based methods to optimize ConvNet architectures, avoiding enumerating and training individual architectures separately as in previous methods. FBNets (Facebook-Berkeley-Nets), a family of models discovered by DNAS surpass state-of-the-art models both designed manually and generated automatically. FBNet-B achieves 74.1% top-1 accuracy on ImageNet with 295M FLOPs and 23.1 ms latency on a Samsung S8 phone, 2.4x smaller and 1.5x faster than MobileNetV2-1.3 with similar accuracy. Despite higher accuracy and lower latency than MnasNet, we estimate FBNet-B's search cost is 420x smaller than MnasNet's, at only 216 GPU-hours. Searched for different resolutions and channel sizes, FBNets achieve 1.5% to 6.4% higher accuracy than MobileNetV2. The smallest FBNet achieves 50.2% accuracy and 2.9 ms latency (345 frames per second) on a Samsung S8. Over a Samsung-optimized FBNet, the iPhone-X-optimized model achieves a 1.4x speedup on an iPhone X. FBNet models are open-sourced at https://github. com/facebookresearch/mobile-vision.","",""
22,"Blaise Tine, Krishna Praveen Yalamarthy, Fares Elsabbagh, Hyesoon Kim","Vortex: Extending the RISC-V ISA for GPGPU and 3D-Graphics",2021,"","","","",614,"2024-08-22 15:04:59","","10.1145/3466752.3480128","","",,,,,22,7.33,6,4,3,"The importance of open-source hardware and software has been increasing. However, despite GPUs being one of the more popular accelerators across various applications, there is very little open-source GPU infrastructure in the public domain. We argue that one of the reasons for the lack of open-source infrastructure for GPUs is rooted in the complexity of their ISA and software stacks. In this work, we first propose an ISA extension to RISC-V that supports GPGPUs and graphics. The main goal of the ISA extension proposal is to minimize the ISA changes so that the corresponding changes to the open-source ecosystem are also minimal, which makes for a sustainable development ecosystem. To demonstrate the feasibility of the minimally extended RISC-V ISA, we implemented the complete software and hardware stacks of Vortex on FPGA. Vortex is a PCIe-based soft GPU that supports OpenCL and OpenGL. Vortex can be used in a variety of applications, including machine learning, graph analytics, and graphics rendering. Vortex can scale up to 32 cores on an Altera Stratix 10 FPGA, delivering a peak performance of 25.6 GFlops at 200 Mhz.","",""
51,"Bob L. Sturm, M. Iglesias, Oded Ben-Tal, M. Miron, Emilia Gómez","Artificial Intelligence and Music: Open Questions of Copyright Law and Engineering Praxis",2019,"","","","",480,"2024-08-22 15:04:59","","10.3390/arts8030115","","",,,,,51,10.20,10,5,5,"The application of artificial intelligence (AI) to music stretches back many decades, and presents numerous unique opportunities for a variety of uses, such as the recommendation of recorded music from massive commercial archives, or the (semi-)automated creation of music. Due to unparalleled access to music data and effective learning algorithms running on high-powered computational hardware, AI is now producing surprising outcomes in a domain fully entrenched in human creativity—not to mention a revenue source around the globe. These developments call for a close inspection of what is occurring, and consideration of how it is changing and can change our relationship with music for better and for worse. This article looks at AI applied to music from two perspectives: copyright law and engineering praxis. It grounds its discussion in the development and use of a specific application of AI in music creation, which raises further and unanticipated questions. Most of the questions collected in this article are open as their answers are not yet clear at this time, but they are nonetheless important to consider as AI technologies develop and are applied more widely to music, not to mention other domains centred on human creativity.","",""
64,"Bob Lantz, Brian O'Connor","A Mininet-based Virtual Testbed for Distributed SDN Development",2015,"","","","",702,"2024-08-22 15:04:59","","10.1145/2785956.2790030","","",,,,,64,7.11,32,2,9,"The need for fault tolerance and scalability is leading to the development of distributed SDN operating systems and applications. But how can you develop such systems and applications reliably without access to an expensive testbed? We continue to observe SDN development practices using full system virtualization or heavyweight containers, increasing complexity and overhead while decreasing usability. We demonstrate a simpler and more efficient approach: using Mininet's cluster mode to easily deploy a virtual testbed of lightweight containers on a single machine, an ad hoc cluster, or a dedicated hardware testbed. By adding an open source, distributed network operating system such as ONOS, we can create a flexible and scalable open source development platform for distributed SDN system and application software development.","",""
18,"Bogdan Oniga, A. Munteanu, V. Dădârlat","Open-source multi-protocol gateway for Internet of Things",2018,"","","","",885,"2024-08-22 15:04:59","","10.1109/ROEDUNET.2018.8514136","","",,,,,18,3.00,6,3,6,"Internet of Things (IoT) is becoming increasingly ubiquitous with global applicability in a very wide spectrum of commercial sectors, making use of diverse technologies for custom usage in certain environments. The diversity of applications and protocols and the custom needs for each environment introduce a big challenge for IoT applications, demanding the support of communication and message exchanges in implementations that aggregate diverse protocols. The paper addresses the design of an open-source multiprotocol gateway which supports two communication protocols, namely, Bluetooth Low Energy (BLE) and LoRa. The proposed gateway represents the bridge between the devices and the network server and transports the received messages via a standard format readable by the network server. The messages between the gateway and the network server are transported over the Message Queuing Telemetry Transport (MQTT) protocol. The paper details the implementation of the proposed multi-protocol gateway and highlights its benefits. In particular, the proposed gateway demonstrates support for multiple protocols on the same hardware base and eliminates the need of using multiple hardware components for each type of protocol.","",""
964,"Brandon Amos, Bartosz Ludwiczuk, M. Satyanarayanan","OpenFace: A general-purpose face recognition library with mobile applications",2016,"","","","",929,"2024-08-22 15:04:59","","","","",,,,,964,120.50,321,3,8,"Cameras are becoming ubiquitous in the Internet of Things (IoT) and can use face recognition technology to improve context. There is a large accuracy gap between today’s publicly available face recognition systems and the state-of-the-art private face recognition systems. This paper presents our OpenFace face recognition library that bridges this accuracy gap. We show that OpenFace provides near-human accuracy on the LFW benchmark and present a new classification benchmark for mobile scenarios. This paper is intended for non-experts interested in using OpenFace and provides a light introduction to the deep neural network techniques we use. We released OpenFace in October 2015 as an open source library under the Apache 2.0 license. It is available at: http://cmusatyalab.github.io/openface/ This research was supported by the National Science Foundation (NSF) under grant number CNS-1518865. Additional support was provided by Crown Castle, the Conklin Kistler family fund, Google, the Intel Corporation, and Vodafone. NVIDIA’s academic hardware grant provided the Tesla K40 GPU used in all of our experiments. Any opinions, findings, conclusions or recommendations expressed in this material are those of the authors and should not be attributed to their employers or funding sources.","",""
74,"Brian McGillion, T. Dettenborn, Thomas Nyman, N. Asokan","Open-TEE -- An Open Virtual Trusted Execution Environment",2015,"","","","",918,"2024-08-22 15:04:59","","10.1109/Trustcom.2015.400","","",,,,,74,8.22,19,4,9,"Hardware-based Trusted Execution Environments (TEEs) are widely deployed in mobile devices. Yet their use has been limited primarily to applications developed by the device vendors. Recent standardization of TEE interfaces by GlobalPlatform (GP) promises to partially address this problem by enabling GP-compliant trusted applications to run on TEEs from different vendors. Nevertheless ordinary developers wishing to develop trusted applications face significant challenges. Access to hardware TEE interfaces are difficult to obtain without support from vendors. Tools and software needed to develop and debug trusted applications may be expensive or non-existent. In this paper, we describe Open-TEE, a virtual, hardware-independent TEE implemented in software. Open-TEE conforms to GP specifications. It allows developers to develop and debug trusted applications with the same tools they use for developing software in general. Once a trusted application is fully debugged, it can be compiled for any actual hardware TEE. Through performance measurements and a user study we demonstrate that Open-TEE is efficient and easy to use. We have made Open-TEE freely available as open source.","",""
33,"Brian T. Mirletz, In-Won Park, R. Quinn, Vytas SunSpiral","Towards bridging the reality gap between tensegrity simulation and robotic hardware",2015,"","","","",489,"2024-08-22 15:04:59","","10.1109/IROS.2015.7354134","","",,,,,33,3.67,8,4,9,"Using a new hardware implementation of our designs for tunably compliant spine-like tensegrity robots, we show that the NASA Tensegrity Robotics Toolkit can effectively generate and predict desirable locomotion strategies for these many degree of freedom systems. Tensegrity, which provides structural integrity through a tension network, shows promise as a design strategy for more compliant robots capable of interaction with rugged environments, such as a tensegrity interplanetary probe prototype surviving multi-story drops. Due to the complexity of tensegrity structures, modeling through physics simulation and machine learning improves our ability to design and evaluate new structures and their controllers in a dynamic environment. The kinematics of our simulator, the open source NASA Tensegrity Robotics Toolkit, have been previously validated within 1.3% error on position through motion capture of the six strut robot ReCTeR. This paper provides additional validation of the dynamics through the direct comparison of the simulator to forces experienced by the latest version of the Tetraspine robot. These results give us confidence in our strategy of using tensegrity to impart future robotic systems with properties similar to biological systems such as increased flexibility, power, and mobility in extreme terrains.","",""
11,"Brien East, Sean DeLong, R. Manshaei, A. Arif, Ali Mazalek","Actibles: Open Source Active Tangibles",2016,"","","","",320,"2024-08-22 15:04:59","","10.1145/2992154.2996874","","",,,,,11,1.38,2,5,8,"Actibles are an open source hardware/software platform for creating active tangibles. Actibles contain a smartwatch core, which eases both hardware and software development, and enables application developers to leverage various web technologies. The smartwatch core is augmented by custom hardware that enables an expanded set of tangible interactions, including shaking, tilting, stacking and neighbouring, as well as on-screen gestures and integrated LED feedback. Actibles can be used both independently or in conjunction with other devices, such as interactive tabletops. We describe the Actible's technical specifications and demonstrate several example applications.","",""
26,"Bruno Sá, José Martins, Sandro Pinto","A First Look at RISC-V Virtualization From an Embedded Systems Perspective",2021,"","","","",612,"2024-08-22 15:04:59","","10.1109/tc.2021.3124320","","",,,,,26,8.67,9,3,3,"This article describes the first public implementation and evaluation of the latest version of the RISC-V hypervisor extension (H-extension v0.6.1) specification in a Rocket chip core. To perform a meaningful evaluation for modern multi-core embedded and mixed-criticality systems, we have ported Bao, an open-source static partitioning hypervisor, to RISC-V. We have also extended the RISC-V platform-level interrupt controller (PLIC) to enable direct guest interrupt injection with low and deterministic latency and we have enhanced the timer infrastructure to avoid trap and emulation overheads. Experiments were carried out in FireSim, a cycle-accurate, FPGA-accelerated simulator, and the system was also successfully deployed and tested in a Zynq UltraScale+ MPSoC ZCU104. Our hardware implementation was open-sourced and is currently in use by the RISC-V community towards the ratification of the H-extension specification.","",""
376,"C. Adjih, E. Baccelli, E. Fleury, Gaetan Harter, N. Mitton, Thomas Noël, R. Pissard-Gibollet, Frederic Saint-Marcel, G. Schreiner, J. Vandaele, T. Watteyne","FIT IoT-LAB: A large scale open experimental IoT testbed",2015,"","","","",414,"2024-08-22 15:04:59","","10.1109/WF-IoT.2015.7389098","","",,,,,376,41.78,38,11,9,"This paper introduces the FIT IoT-LAB testbed, an open testbed composed of 2728 low-power wireless nodes and 117 mobile robots available for experimenting with large-scale wireless IoT technologies, ranging from low-level protocols to advanced Internet services. IoT-LAB is built to accelerate the development of tomorrow's IoT technology by offering an accurate open-access and open-source multi-user scientific tool. The IoT-LAB testbed is deployed in 6 sites across France. Each site features different node and hardware capabilities, but all sites are interconnected and available through the same web portal, common REST interfaces and consistent CLI tools. The result is a heterogeneous testing environment, which covers a large spectrum of IoT use cases and applications. IoT-LAB is a one-of-a-kind facility, allowing anyone to test their solution at scale, experiment and fine-tune new networking concept.","",""
93,"C. Alappat, A. Basermann, A. Bishop, H. Fehske, G. Hager, O. Schenk, J. Thies, G. Wellein","A Recursive Algebraic Coloring Technique for Hardware-efficient Symmetric Sparse Matrix-vector Multiplication",2020,"","","","",370,"2024-08-22 15:04:59","","10.1145/3399732","","",,,,,93,23.25,12,8,4,"The symmetric sparse matrix-vector multiplication (SymmSpMV) is an important building block for many numerical linear algebra kernel operations or graph traversal applications. Parallelizing SymmSpMV on today’s multicore platforms with up to 100 cores is difficult due to the need to manage conflicting updates on the result vector. Coloring approaches can be used to solve this problem without data duplication, but existing coloring algorithms do not take load balancing and deep memory hierarchies into account, hampering scalability and full-chip performance. In this work, we propose the recursive algebraic coloring engine (RACE), a novel coloring algorithm and open-source library implementation that eliminates the shortcomings of previous coloring methods in terms of hardware efficiency and parallelization overhead. We describe the level construction, distance-k coloring, and load balancing steps in RACE, use it to parallelize SymmSpMV, and compare its performance on 31 sparse matrices with other state-of-the-art coloring techniques and Intel MKL on two modern multicore processors. RACE outperforms all other approaches substantially. By means of a parameterized roofline model, we analyze the SymmSpMV performance in detail and discuss outliers. While we focus on SymmSpMV in this article, our algorithm and software are applicable to any sparse matrix operation with data dependencies that can be resolved by distance-k coloring.","",""
15,"C. Coopmans, Michal Podhradský, Nathan Hoffer","Software- and hardware-in-the-loop verification of flight dynamics model and flight control simulation of a fixed-wing unmanned aerial vehicle",2015,"","","","",510,"2024-08-22 15:04:59","","10.1109/RED-UAS.2015.7440998","","",,,,,15,1.67,5,3,9,"Unmanned aerial system (UAS) use is ever-increasing. In this paper, it is shown that even with low-cost hardware and open-source software, simple numerical testing practices (software- and hardware-in-the-loop) can prove the accuracy and usefulness of an aeronautical flight model, as well as provide valuable pre-flight testing of many situations typically only encountered in flight: high winds, hardware failure, etc. Software and hardware simulation results are compared with actual flight testing results to show that these modeling and testing techniques are accurate and provide a useful testing platform for a small unmanned aerial vehicle. Source code used in simulation is open and provided to the community.","",""
41,"C. Denver, P. Gutmann","Proceedings of the 9th USENIX Security Symposium",,"","","","",846,"2024-08-22 15:04:59","","","","",,,,,41,0.00,21,2,,"Current crypto implementations rely on software running under general-purpose operating systems alongside a horde of untrusted applications, ActiveX controls, web browser plugins, mailers handling messages with embedded active content, and numerous other threats to security, with only the OS’s (often almost nonexistant) security to keep the two apart. This paper presents a general-purpose open-source crypto coprocessor capable of securely performing crypto operations such as key management, certificate creation and handling, and email encryption, decryption, and signing, at a cost one to two orders of magnitude below that of commercial equivalents while providing generally equivalent performance and a higher level of functionality. The paper examines various issues involved in designing the coprocessor, and explores options for hardware acceleration of crypto operations for extended performance above and beyond that offered by the basic coprocessor’s COTS hardware.","",""
100,"C. Deroulers, D. Ameisen, M. Badoual, C. Gerin, Alexandre Granier, M. Lartaud","Analyzing huge pathology images with open source software",2013,"","","","",348,"2024-08-22 15:04:59","","10.1186/1746-1596-8-92","","",,,,,100,9.09,17,6,11,"","",""
47,"C. Gloschat, Kedar K. Aras, Shubham Gupta, N. R. Faye, Hanyu Zhang, R. Syunyaev, R. Pryamonosov, R. Pryamonosov, J. Rogers, M. Kay, I. Efimov, Igor R. Efimov","RHYTHM: An Open Source Imaging Toolkit for Cardiac Panoramic Optical Mapping",2018,"","","","",882,"2024-08-22 15:04:59","","10.1038/s41598-018-21333-w","","",,,,,47,7.83,5,12,6,"","",""
35,"C. Hollabaugh","Embedded Linux: Hardware, Software, and Interfacing",2002,"","","","",697,"2024-08-22 15:04:59","","","","",,,,,35,1.59,35,1,22,"Introduction. I. GETTING STARTED. 1. Introducing Embedded Linux. Why Linux, Why Now? What Is an Embedded System? What Does Real-Time Mean? Implications of Open Source. Summary. Additional Reading. 2. System Architecture. Introducing Project Trailblazer. The Silverjack Resort Layout. Project Trailblazer Requirements. Safety Requirements. Operations Requirements. Supplier Requirements. The Project Trailblazer System Architecture. Summary. 3. Selecting a Platform and Installing Tool Sets. Sources of Information. The Project Trailblazer Strategic Direction. Building tbdev1, the Embedded Linux Development Workstation. Getting Started. Installing the Linux Operating System. Installing the Native GNU Tool Chain and Other Applications. Building the GNU Tool Chain for Cross-Compiling. Summary. Additional Reading. 4. Booting Linux. The Target PBRs. The Linux Boot Process. The Linux root Filesystem. Required Files for init. Required Files for bash. The root Filesystem Binary Files: Compile or Download? Creating the root Filesystem. Deciding Which Package to Use. The Process for Building the root Filesystem. Running buildrootfilesystem. Installing the TFTP Server. Installing minicom. Booting the Embedded Planet RPX-CLLF. Embedded Planet RPX-CLLF Target PBR Review. Booting the Brightstar Engineering MediaEngine. Brightstar Engineering MediaEngine Target PBR Review. Booting the Tri-M MZ104 and the COTS PC with a Flash IDE Drive. Flash IDE Technology. Preparing the Tri-M MZ104 and the COTS PC. Booting the Tri-M MZ104 Target. Tri-M MZ104 Target Platform Boot Requirements Review. Boot Comparison. Summary. Additional Reading. 5. Debugging. Introducing gdb. Local Debugging. Remote Debugging. Network-Mounting the root Filesystem. Configuring the NFS Server. Configuring the Target Kernels. Summary. Additional Reading. II. INTERFACING. 6. Asynchronous Serial Communication Interfacing. The Project Trailblazer Asynchronous Serial Hardware Development Environment. Target EIA/TIA-232-E Compliance. Linux Serial Communications. Setting the Serial Port Control Signals with setSerialSignal. Reading the Serial Port Control Signals with getSerialSignal. Providing Serial Communication for bash Scripts, Using querySerial. Summary. Additional Reading. 7. Parallel Port Interfacing. Control Using the Parallel Port. Standard Parallel Port Control with Port I/O. Monitoring Lift Operation Using Port I/O. Snow-Making Control Using Port I/O. Standard Parallel Port Control Using ppdev. Developing a Custom Device Driver. Understanding helloworld_proc_module. Compiling, Inserting, and Testing helloworld_proc_module on the MediaEngine. Standard Parallel Port Control Using the Custom Device Driver liftmon_snowcon. Enhancements to helloworld_proc_module to Create liftmon_snowcon. Compiling, Inserting, and Testing liftmon_snowcon on the MZ104. Summary. Additional Reading. 8. USB Interfacing. Learning About USB. Project Trailblazer USB Hardware. USB Audio: Yamaha YST-MS35D USB Speakers. USB Image Capture: Kensington VideoCAM Super-VGA PC Camera. USB Mass Storage: SanDisk USB SmartMedia Card Reader. Summary. Additional Reading. 9. Memory I/O Interfacing. The Hardware Design Process. Developing Lift Monitoring and Snow-Making Control for the MediaEngine. Designing the External Interface Hardware for the MediaEngine. Finding Space in the Memory Map for the MediaEngine. Finding the Register Base Address for the MediaEngine. Configuring the Memory Controller for the MediaEngine. Assigning the Output Module Enable Signal for the MediaEngine. Configuring the I/O Port Controller for the MediaEngine. Writing the helloworldbit Testing Device Driver for the MediaEngine. Writing the liftmon_snowcon Device Driver for the MediaEngine. Developing Lift Monitoring and Snow-Making Control for the RPX-CLLF. Designing the External Interface Hardware for the RPX-CLLF. Finding Space in the Memory Map for the RPX-CLLF. Finding the Register Base Address for the RPX-CLLF. Configuring the Memory Controller for the RPX-CLLF. Assigning the Output Module Enable Signal for the RPX-CLLF. Configuring the I/O Port Controller for the RPX-CLLF. Writing the helloworldbit Testing Device Driver for the RPX-CLLF. Writing the liftmon_snowcon Device Driver for the RPX-CLLF. Summary. Additional Reading. 10. Synchronous Serial Communication Interfacing. Temperature Sensing and Display. SPI Communication and the LM70. Connecting the LM70 to the x86 Parallel Printer Port. Connecting the LM70 to the MediaEngine. I2C Communication with the Philips Semiconductor SAA1064. Connecting the SAA1064 to the x86 Parallel Printer Port. Connecting the SAA1064 to the RPX-CLLF. Summary. Additional Reading. 11. Using Interrupts For Timing. Linux Timing Sources. Measuring Interrupt Latency. Measuring Interrupt Latency on the MZ104. Measuring Interrupt Latency on the MediaEngine. Measuring Interrupt Latency on the RPX-CLLF. Interrupt Latency Test Summary. Implementing the Race Timer. Race Timer Interrupt Processing Using Tasklets. Race Timer Status Display Using System Timers. Summary. Additional Reading. 12. System Integration. Integration Overview. Installing the System Integration Applications. Creating and Testing the Project Trailblazer Database. Developing the Target and CGI Integration Scripts. Collecting and Distributing Temperature Data. Collecting and Distributing Image Data. Collecting Guest Pass Identification and Allowing Lift Access. Summary. Additional Reading. 13. Final Thoughts. GUI Development. Real-time Capabilities. The Embedded Linux Vendor Offerings. Project Trailblazer Hardware. Summary. Additional Reading. Index. 0672322269T03282002","",""
61,"C. Kiefer, Frauke Behrendt","Smart e-bike monitoring system: real-time open source and open hardware GPS assistance and sensor data for electrically-assisted bicycles",2016,"","","","",140,"2024-08-22 15:04:59","","10.1049/IET-ITS.2014.0251","","",,,,,61,7.63,31,2,8,"The smart e-bike monitoring system (SEMS) is a platform for the real-time acquisition of usage data from electrically-assisted bikes (also called pedelecs or e-bikes). It is autonomous (runs off the bike battery), replicable (open source and open hardware), scalable (different fleet sizes) and modular (sensors can be added), so it can be used for further research and development. The system monitors location (global positioning system), rider control data (level of assistance) and other custom sensor input in real time. The SEMS data feeds an online interface for data analysis, for riders to view their own data and for sharing on social media. The basic system can be replicated by other researchers and can be extended with modules to explore various issues in e-bike research. The source code and hardware design are publicly available, under the General Public License, for non-commercial use. SEMS was implemented on 30 bikes and collected data during 10 months of real-word trials in the UK. This study details the design and implementation of the hardware and software, discusses the system use and explores features for future design iterations. The SEMS turns singular e-bikes into a networked fleet and is an example of the internet of things in the cycling context.","",""
87,"C. Ng, Mingcao Ma, T. Wong, P. Lee, John C.S. Lui","Live Deduplication Storage of Virtual Machine Images in an Open-Source Cloud",2011,"","","","",387,"2024-08-22 15:04:59","","10.1007/978-3-642-25821-3_5","","",,,,,87,6.69,17,5,13,"","",""
73,"C. Nugteren","CLBlast: A Tuned OpenCL BLAS Library",2017,"","","","",668,"2024-08-22 15:04:59","","10.1145/3204919.3204924","","",,,,,73,10.43,73,1,7,"This work introduces CLBlast, an open-source BLAS library providing optimized OpenCL routines to accelerate dense linear algebra for a wide variety of devices. It is targeted at machine learning and HPC applications and thus provides a fast matrix-multiplication routine (GEMM) to accelerate the core of many applications (e.g. deep learning, iterative solvers, astrophysics, computational fluid dynamics, quantum chemistry). CLBlast has five main advantages over other OpenCL BLAS libraries: 1) it is optimized for and tested on a large variety of OpenCL devices including less commonly used devices such as embedded and low-power GPUs, 2) it can be explicitly tuned for specific problem-sizes on specific hardware platforms, 3) it can perform operations in half-precision floating-point FP16 saving bandwidth, time and energy, 4) it has an optional CUDA back-end, 5) and it can combine multiple operations in a single batched routine, accelerating smaller problems significantly. This paper describes the library and demonstrates the advantages of CLBlast experimentally for different use-cases on a wide variety of OpenCL hardware.","",""
239,"C. O'Flynn, Z. Chen","ChipWhisperer: An Open-Source Platform for Hardware Embedded Security Research",2014,"","","","",153,"2024-08-22 15:04:59","","10.1007/978-3-319-10175-0_17","","",,,,,239,23.90,120,2,10,"","",""
305,"C. Raczy, Roman Petrovski, C. T. Saunders, I. Chorny, S. Kruglyak, E. Margulies, Han-Yu Chuang, Morten Källberg, Swathi A. Kumar, A. Liao, Kristina M. Little, Michael P. Strömberg, Stephen Tanner","Isaac: ultra-fast whole-genome secondary analysis on Illumina sequencing platforms",2013,"","","","",598,"2024-08-22 15:04:59","","10.1093/bioinformatics/btt314","","",,,,,305,27.73,31,13,11,"SUMMARY An ultrafast DNA sequence aligner (Isaac Genome Alignment Software) that takes advantage of high-memory hardware (>48 GB) and variant caller (Isaac Variant Caller) have been developed. We demonstrate that our combined pipeline (Isaac) is four to five times faster than BWA + GATK on equivalent hardware, with comparable accuracy as measured by trio conflict rates and sensitivity. We further show that Isaac is effective in the detection of disease-causing variants and can easily/economically be run on commodity hardware.   AVAILABILITY Isaac has an open source license and can be obtained at https://github.com/sequencing.","",""
49,"C. Vincent, G. Niezen, A. O'Kane, Katarzyna Stawarz","Can Standards and Regulations Keep Up With Health Technology?",2015,"","","","",731,"2024-08-22 15:04:59","","10.2196/mhealth.3918","","",,,,,49,5.44,12,4,9,"Technology is changing at a rapid rate, opening up new possibilities within the health care domain. Advances such as open source hardware, personal medical devices, and mobile phone apps are creating opportunities for custom-made medical devices and personalized care. However, they also introduce new challenges in balancing the need for regulation (ensuring safety and performance) with the need to innovate flexibly and efficiently. Compared with the emergence of new technologies, health technology design standards and regulations evolve slowly, and therefore, it can be difficult to apply these standards to the latest developments. For example, current regulations may not be suitable for approaches involving open source hardware, an increasingly popular way to create medical devices in the maker community. Medical device standards may not be flexible enough when evaluating the usability of mobile medical devices that can be used in a multitude of different ways, outside of clinical settings. Similarly, while regulatory guidance has been updated to address the proliferation of health-related mobile phone apps, it can be hard to know if and when these regulations apply. In this viewpoint, we present three examples of novel medical technologies to illustrate the types of regulatory issues that arise in the current environment. We also suggest opportunities for support, such as advances in the way we review and monitor medical technologies.","",""
158,"C. Wolf, J. Glaser, J. Kepler","Yosys-A Free Verilog Synthesis Suite",2013,"","","","",670,"2024-08-22 15:04:59","","","","",,,,,158,14.36,53,3,11,"Most of todays digital design work is done using hardware description languages such as Verilog HDL or VHDL. HDL synthesis is used to translate that HDL code to digital circuits. Yosys is the first free and open source software for Verilog HDL synthesis which supports the vast majority of synthesizable Verilog features. Yosys is built as an extensible framework so it can be used easily as basis for custom synthesis flows and as environment for the implementation and research on new synthesis algorithms. Yosys has special emphasis on support for coarsegrain logic, making it ideal for algorithms such as logic mapping to DSP cells in FPGAs or synthesis for custom coarse-grain reconfigurable hardware. Yosys has mature support for Verilog HDL and is able to synthesize complex real-world Verilog designs. Example design flows for fine-grain and coarse-grain architectures are presented and discussed. The availability of Yosys under a liberal open source license can greatly improve reproducibility of scientific publications, when Yosys is used as basis for reference implementations of new algorithms instead of closed-source alternatives.","",""
68,"C. Zhang, B. Wijnen, Joshua M. Pearce","Open-Source 3-D Platform for Low-Cost Scientific Instrument Ecosystem",2016,"","","","",289,"2024-08-22 15:04:59","","10.1177/2211068215624406","","",,,,,68,8.50,23,3,8,"The combination of open-source software and hardware provides technically feasible methods to create low-cost, highly customized scientific research equipment. Open-source 3-D printers have proven useful for fabricating scientific tools. Here the capabilities of an open-source 3-D printer are expanded to become a highly flexible scientific platform. An automated low-cost 3-D motion control platform is presented that has the capacity to perform scientific applications, including (1) 3-D printing of scientific hardware; (2) laboratory auto-stirring, measuring, and probing; (3) automated fluid handling; and (4) shaking and mixing. The open-source 3-D platform not only facilities routine research while radically reducing the cost, but also inspires the creation of a diverse array of custom instruments that can be shared and replicated digitally throughout the world to drive down the cost of research and education further.","",""
12,"Carla P. Wale","Cloudy with a Chance of Open Source: Open Source Integrated Library Systems and Cloud Computing in Academic Law Libraries",2011,"","","","",399,"2024-08-22 15:04:59","","10.1080/0270319X.2011.626324","","",,,,,12,0.92,12,1,13,"Integrated library systems (ILSs) have been fundamental to library workflow in both technical services and public services for decades. However, many of the proprietary ILSs currently on the market do not provide law libraries with the flexibility and adaptability necessary to keep pace with advances in technology. Some law libraries are considering abandoning proprietary ILSs and implementing one of the nascent open source ILSs that have sprung up in the last few years. As the lines blur between hardware and software, many organizations are trading in-house information technology infrastructure and personnel for full-service cloud hosting. This article examines these trends for those contemplating a move to an open source ILS and/or cloud computing.","",""
12,"Carlos García-Saura, J. González-Gómez","LOW COST EDUCATIONAL PLATFORM FOR ROBOTICS, USING OPEN-SOURCE 3D PRINTERS AND OPEN-SOURCE HARDWARE",2012,"","","","",139,"2024-08-22 15:04:59","","","","",,,,,12,1.00,6,2,12,"In this paper, we present a new design methodology for educational robotic platforms. Using printbots (open-source 3D-printable robots) as a starting point in our designs has allowed us to create custom robots with very little effort. Using this new methodology we have designed the ArduSkybot, a robot that has enough features for its usage at different educational levels while keeping a very reduced cost. The robot is based on Arduino and the Printshield, our new electronics platform. It provides integration of various sensors (light, distance and line sensors) and actuators (motors, lights and speaker). It is also easy to expand by students and researchers. We describe our designs, and document their performance in various workshops with college, primary and secondary students. Our methodology is described and suggestions are given regarding future printbot-based workshops.","",""
52,"Caroline Trippel, Yatin A. Manerkar, Daniel Lustig, Michael Pellauer, M. Martonosi","TriCheck: Memory Model Verification at the Trisection of Software, Hardware, and ISA",2016,"","","","",475,"2024-08-22 15:04:59","","10.1145/3037697.3037719","","",,,,,52,6.50,10,5,8,"Memory consistency models (MCMs) which govern inter-module interactions in a shared memory system, are a significant, yet often under-appreciated, aspect of system design. MCMs are defined at the various layers of the hardware-software stack, requiring thoroughly verified specifications, compilers, and implementations at the interfaces between layers. Current verification techniques evaluate segments of the system stack in isolation, such as proving compiler mappings from a high-level language (HLL) to an ISA or proving validity of a microarchitectural implementation of an ISA. This paper makes a case for full-stack MCM verification and provides a toolflow, TriCheck, capable of verifying that the HLL, compiler, ISA, and implementation collectively uphold MCM requirements. The work showcases TriCheck's ability to evaluate a proposed ISA MCM in order to ensure that each layer and each mapping is correct and complete. Specifically, we apply TriCheck to the open source RISC-V ISA [55], seeking to verify accurate, efficient, and legal compilations from C11. We uncover under-specifications and potential inefficiencies in the current RISC-V ISA documentation and identify possible solutions for each. As an example, we find that a RISC-V-compliant microarchitecture allows 144 outcomes forbidden by C11 to be observed out of 1,701 litmus tests examined. Overall, this paper demonstrates the necessity of full-stack verification for detecting MCM-related bugs in the hardware-software stack.","",""
25,"Carsten Heinz, Jaco A. Hofmann, Jens Korinth, Lukas Sommer, Lukas Weber, A. Koch","The TaPaSCo Open-Source Toolflow",2021,"","","","",162,"2024-08-22 15:04:59","","10.1007/s11265-021-01640-8","","",,,,,25,8.33,4,6,3,"","",""
33,"Carsten Heinz, Yannick Lavan, Jaco A. Hofmann, A. Koch","A Catalog and In-Hardware Evaluation of Open-Source Drop-In Compatible RISC-V Softcore Processors",2019,"","","","",118,"2024-08-22 15:04:59","","10.1109/ReConFig48160.2019.8994796","","",,,,,33,6.60,8,4,5,"With the increasing popularity of RISC-V in the academic and industrial world, an ever growing number of open-source implementations of the instruction set have become available. However, it is not an easy task to compare the cores to one another, as they employ different interconnects, build systems and so on. This work presents an open-source catalog of RISC-V cores for use on FPGAs. All of these cores have been wrapped as drop-in compatible processing elements and can be used either standalone, or integrated into the TaPaSCo SoC composition framework. By using TaPaSCo, details of the bitstream generation flow and user-space interfaces are abstracted away, allowing the user to focus on the needs of the concrete applications when exploring the RISC-V landscape. All of the catalog's cores have been synthesized for a number of hardware platforms, and are evaluated against each other using state-of-the-art embedded processor benchmarks such as Dhrystone, Embench and CoreMark. The results show that the cores have a huge degree in performance variability. The slowest cores achieve less than 100MHz on large UltraScale+ devices, while better FPGA-optimized cores run in excess of 500 MHz. Accordingly, the benchmarks show a wide spread of performance ranging from less than 0.5 CoreMark/MHz up to over 2.5 CoreMark/MHz.","",""
25,"Catherine Rooney, A. Seeam, X. Bellekens","Creation and Detection of Hardware Trojans Using Non-Invasive Off-The-Shelf Technologies",2018,"","","","",453,"2024-08-22 15:04:59","","10.3390/ELECTRONICS7070124","","",,,,,25,4.17,8,3,6,"As a result of the globalisation of the semiconductor design and fabrication processes, integrated circuits are becoming increasingly vulnerable to malicious attacks. The most concerning threats are hardware trojans. A hardware trojan is a malicious inclusion or alteration to the existing design of an integrated circuit, with the possible effects ranging from leakage of sensitive information to the complete destruction of the integrated circuit itself. While the majority of existing detection schemes focus on test-time, they all require expensive methodologies to detect hardware trojans. Off-the-shelf approaches have often been overlooked due to limited hardware resources and detection accuracy. With the advances in technologies and the democratisation of open-source hardware, however, these tools enable the detection of hardware trojans at reduced costs during or after production. In this manuscript, a hardware trojan is created and emulated on a consumer FPGA board. The experiments to detect the trojan in a dormant and active state are made using off-the-shelf technologies taking advantage of different techniques such as Power Analysis Reports, Side Channel Analysis and Thermal Measurements. Furthermore, multiple attempts to detect the trojan are demonstrated and benchmarked. Our simulations result in a state-of-the-art methodology to accurately detect the trojan in both dormant and active states using off-the-shelf hardware.","",""
13,"Cesar Vandevelde, F. Wyffels, B. Vanderborght, Jelle Saldien","Do-It-Yourself Design for Social Robots: An Open-Source Hardware Platform to Encourage Innovation",2017,"","","","",63,"2024-08-22 15:04:59","","10.1109/MRA.2016.2639059","","",,,,,13,1.86,3,4,7,"One of the chief obstacles in achieving wider acceptance of robotics is that only experienced roboticists can develop robotics applications. If we want robots in our homes and offices, we need more tools and platforms that reduce the costs in time and money of prototyping robots. The open-source paradigm offers a potential solution to these key factors. However, creating open-source robotics hardware does not mean just making the design files available online. It is essential to design the hardware in such a way that it can be built and modified by nonexpert users.","",""
38,"Changhua Sun, B. Liu, Lei Shi","Efficient and Low-Cost Hardware Defense Against DNS Amplification Attacks",2008,"","","","",655,"2024-08-22 15:04:59","","10.1109/GLOCOM.2008.ECP.397","","",,,,,38,2.38,13,3,16,"DNS amplification attacks utilize IP address spoofing and large numbers of open recursive DNS servers to perform the bandwidth consumption attack. During an attack, it ceaselessly fabricates DNS queries to the exploited open recursive DNS servers, and all the responses, often with larger size than the query messages, are reflected to the single victim due to the source IP address spoofing. While it is difficult to defend against this attack from the root causes by eliminating the open recursive DNS servers and IP spoofing for the whole Internet, in this paper, we take a different methodology to defend against it at the leaf router of victim's ISP or organization. We propose an efficient and low-cost hardware approach to first detect the DNS amplification attack accurately and responsively. Once the attack is confirmed, our approach is then activated to filter out all the illegitimate DNS responses by using a two-Bloom filter solution. We demonstrate that the memory cost of our approach is feasible for the hardware implementation even up to the OC-768 link. Through trace-driven simulations, it is shown that our approach is effective in both the detecting and filtering phases.","",""
32,"Cheng Tan, Chenhao Xie, Ang Li, K. Barker, Antonino Tumeo","OpenCGRA: An Open-Source Unified Framework for Modeling, Testing, and Evaluating CGRAs",2020,"","","","",197,"2024-08-22 15:04:59","","10.1109/ICCD50377.2020.00070","","",,,,,32,8.00,6,5,4,"Coarse-grained reconfigurable arrays (CGRAs), loosely defined as arrays of functional units (e.g., adder, subtractor, multiplier, divider, or larger multi-operation units, but smaller than a general-purpose core) interconnected through a Network-on-Chip, provide higher flexibility than domain-specific ASIC accelerators while offering increased hardware efficiency with respect to fine-grained reconfigurable devices, such as Field Programmable Gate Arrays (FPGAs). The fast evolving fields of machine learning and edge computing, which are seeing a continuous flow of novel algorithms and larger models, make CGRAs ideal architectures to allow domain specialization without losing too much generality. Designing and generating a CGRA, however, still requires to define the type and number of the specific functional units, implement their interconnect and the network topology, and perform the simulation and validation, given a variety of workloads of interest. In this paper, we propose OpenC-GRA *, the first open-source integrated framework that is able to support the full top-to-bottom design flow for specializing and implementing CGRAs: modeling at different abstraction levels (functional level, cycle level, register-transfer level) with compiler support, verification at different granularities (unit testing, integration testing, property-based testing), simulation, generation of synthesizable Verilog, and characterization (area, power, and timing). By using OpenCGRA, it only takes a few hours to build a specialized power- and area-efficient CGRA throughout the entire design flow given a set of applications of interest. OpenCGRA is available online at https://github.com/pnnl/OpenCGRA.","",""
40,"Chengfei Guo, Z. Bian, Shaowei Jiang, Michael Murphy, Jiakai Zhu, Ruihai Wang, Pengming Song, Xiaopeng Shao, Yongbing Zhang, G. Zheng","OpenWSI: a low-cost, high-throughput whole slide imaging system via single-frame autofocusing and open-source hardware",2019,"","","","",35,"2024-08-22 15:04:59","","10.1364/OL.45.000260","","",,,,,40,8.00,4,10,5,"Recent advancements in whole slide imaging (WSI) have moved pathology closer to digital practice. Existing systems require precise mechanical control and the cost is prohibitive for most individual pathologists. Here we report a low-cost and high-throughput WSI system termed OpenWSI. The reported system is built using off-the-shelf components including a programmable LED array, a photographic lens, and a low-cost computer numerical control (CNC) router. Different from conventional WSI platforms, our system performs real-time single-frame autofocusing using color-multiplexed illumination. For axial positioning control, we perform coarse adjustment using the CNC router and precise adjustment using the ultrasonic motor ring in the photographic lens. By using a 20X objective lens, we show that the OpenWSI system has a resolution of ~0.7 microns. It can acquire whole slide images of a 225-mm^2 region in ~2 mins, with throughput comparable to existing high-end platforms. The reported system offers a turnkey solution to transform the high-end WSI platforms into one that can be made broadly available and utilizable without loss of capacity.","",""
180,"Chenlong Zhang, N. C. Anzalone, Rodrigo P. Faria, Joshua M. Pearce","Open-Source 3D-Printable Optics Equipment",2013,"","","","",346,"2024-08-22 15:04:59","","10.1371/journal.pone.0059840","","",,,,,180,16.36,45,4,11,"Just as the power of the open-source design paradigm has driven down the cost of software to the point that it is accessible to most people, the rise of open-source hardware is poised to drive down the cost of doing experimental science to expand access to everyone. To assist in this aim, this paper introduces a library of open-source 3-D-printable optics components. This library operates as a flexible, low-cost public-domain tool set for developing both research and teaching optics hardware. First, the use of parametric open-source designs using an open-source computer aided design package is described to customize the optics hardware for any application. Second, details are provided on the use of open-source 3-D printers (additive layer manufacturing) to fabricate the primary mechanical components, which are then combined to construct complex optics-related devices. Third, the use of the open-source electronics prototyping platform are illustrated as control for optical experimental apparatuses. This study demonstrates an open-source optical library, which significantly reduces the costs associated with much optical equipment, while also enabling relatively easily adapted customizable designs. The cost reductions in general are over 97%, with some components representing only 1% of the current commercial investment for optical products of similar function. The results of this study make its clear that this method of scientific hardware development enables a much broader audience to participate in optical experimentation both as research and teaching platforms than previous proprietary methods.","",""
493,"Chia-che Tsai, Donald E. Porter, Mona Vij","Graphene-SGX: A Practical Library OS for Unmodified Applications on SGX",2017,"","","","",956,"2024-08-22 15:04:59","","","","",,,,,493,70.43,164,3,7,"Intel SGX hardware enables applications to protect themselves from potentially-malicious OSes or hypervisors. In cloud computing and other systems, many users and applications could benefit from SGX. Unfortunately, current applications will not work out-of-the-box on SGX. Although previous work has shown that a library OS can execute unmodified applications on SGX, a belief has developed that a library OS will be ruinous for performance and TCB size, making application code modification an implicit prerequisite to adopting SGX.    This paper demonstrates that these concerns are exaggerated, and that a fully-featured library OS can rapidly deploy unmodified applications on SGX with overheads comparable to applications modified to use ""shim"" layers. We present a port of Graphene to SGX, as well as a number of improvements to make the security benefits of SGX more usable, such as integrity support for dynamically-loaded libraries, and secure multiprocess support. Graphene-SGX supports a wide range of unmodified applications, including Apache, GCC, and the R interpreter. The performance overheads of Graphene-SGX range from matching a Linux process to less than 2× in most single-process cases; these overheads are largely attributable to current SGX hardware or missed opportunities to optimize Graphene internals, and are not necessarily fundamental to leaving the application unmodified. Graphene-SGX is open-source and has been used concurrently by other groups for SGX research.","",""
34,"Chongxiao Cao, J. Dongarra, Peng Du, Mark Gates, P. Luszczek, S. Tomov","clMAGMA: high performance dense linear algebra with OpenCL",2014,"","","","",773,"2024-08-22 15:04:59","","10.1145/2664666.2664667","","",,,,,34,3.40,6,6,10,"This paper presents the design and implementation of several fundamental dense linear algebra (DLA) algorithms in OpenCL. In particular, these are linear system solvers and eigenvalue problem solvers. Further, we give an overview of the clMAGMA library, an open source, high performance OpenCL library that incorporates various optimizations, and in general provides the DLA functionality of the popular LAPACK library on heterogeneous architectures. The LAPACK compliance and use of OpenCL simplify the use of clMAGMA in applications, while providing them with portable performance. High performance is obtained through the use of the high-performance OpenCL BLAS, hardware- and OpenCL-specific tuning, and a hybridization methodology, where we split the algorithm into computational tasks of various granularities. Execution of those tasks is efficiently scheduled over the heterogeneous hardware components by minimizing data movements and mapping algorithmic requirements to the architectural strengths of the various heterogeneous hardware components.","",""
38,"Chris Stewart, John Giannini","Inexpensive, Open Source Epifluorescence Microscopes",2016,"","","","",297,"2024-08-22 15:04:59","","10.1021/ACS.JCHEMED.5B00984","","",,,,,38,4.75,19,2,8,"In an effort to help lower the costs of fluorescence microscopy and expand the use of this valuable technique in the classroom, teaching lab, and hopefully beyond, we provide two different open source designs for inexpensive epifluorescence microscopes. First, we explain how to 3D print the parts for a simple adapter that can be mounted onto a conventional compound light microscope with a removable head to convert it for epifluorescence and bright-field viewing. Second, we describe how to build a similar microscope using supplies that are available at most hardware stores or online. We demonstrate the capabilities of our designs using Tetrahymena thermophila cells that were stained with two common fluorophores (Rhodamine B or Acridine Orange) or tagged with a fluorescent protein. We further explain how these microscopes can be used to teach basic principles of photochemistry, biochemistry, and histochemistry, as well as cellular and molecular biology. In the spirit of making these designs open and accessi...","",""
34,"Christian Menard, J. Castrillón, Matthias Jung, N. Wehn","System simulation with gem5 and SystemC: The keystone for full interoperability",2017,"","","","",746,"2024-08-22 15:04:59","","10.1109/SAMOS.2017.8344612","","",,,,,34,4.86,9,4,7,"SystemC TLM based virtual prototypes have become the main tool in industry and research for concurrent hardware and software development, as well as hardware design space exploration. However, there exists a lack of accurate, free, changeable and realistic SystemC models of modern CPUs. Therefore, many researchers use the cycle accurate open source system simulator gem5, which has been developed in parallel to the SystemC standard. In this paper we present a coupling of gem5 with SystemC that offers full interoperability between both simulation frameworks, and therefore enables a huge set of possibilities for system level design space exploration. Furthermore, we show that the coupling itself only induces a relatively small overhead to the total execution time of the simulation.","",""
44,"Christoph H. Lampert, Jan Peters","Real-time detection of colored objects in multiple camera streams with off-the-shelf hardware components",2012,"","","","",565,"2024-08-22 15:04:59","","10.1007/s11554-010-0168-3","","",,,,,44,3.67,22,2,12,"","",""
65,"Christopher Celio, B. Nikolić","BOOM v 2 an open-source out-of-order RISC-V core",2017,"","","","",253,"2024-08-22 15:04:59","","","","",,,,,65,9.29,33,2,7,"This paper presents BOOM version 2, an updated version of the Berkeley Out-of-Order Machine first presented in [3]. The design exploration was performed through synthesis, place and route using the foundry-provided standard-cell library and the memory compiler in the TSMC 28 nm HPM process (high performance mobile). BOOM is an open-source processor that implements the RV64G RISC-V Instruction Set Architecture (ISA). Like most contemporary high-performance cores, BOOM is superscalar (able to execute multiple instructions per cycle) and out-oforder (able to execute instructions as their dependencies are resolved and not restricted to their program order). BOOM is implemented as a parameterizable generator written using the Chisel hardware construction language [2] that can used to generate synthesizable implementations targeting both FPGAs and ASICs. BOOMv2 is an update in which the design effort has been informed by analysis of synthesized, placed and routed data provided by a contemporary industrial tool flow. We also had access to standard singleand dual-ported memory compilers provided by the foundry, allowing us to explore design trade-offs using different SRAM memories and comparing against synthesized flip-flop arrays. The main distinguishing features of BOOMv2 include an updated 3-stage front-end design with a bigger set-associative Branch Target Buffer (BTB); a pipelined register rename stage; split floating point and integer register files; a dedicated floating point pipeline; separate issue windows for floating point, integer, and memory micro-operations; and separate stages for issue-select and register read. Managing the complexity of the register file was the largest obstacle to improving BOOM’s clock frequency. We spent considerable effort on placing-and-routing a semi-custom 9port register file to explore the potential improvements over a fully synthesized design, in conjunction with microarchitectural techniques to reduce the size and port count of the register file. BOOMv2 has a 37 fanout-of-four (FO4) inverter delay after synthesis and 50 FO4 after place-and-route, a 24% reduction from BOOMv1’s 65 FO4 after place-and-route. Unfortunately, instruction per cycle (IPC) performance drops up to 20%, mostly due to the extra latency between load instructions and dependent instructions. However, the new BOOMv2 physical design paves the way for IPC recovery later. BOOMv1-2f3i int/idiv/fdiv","",""
2070,"Christopher Olston, B. Reed, U. Srivastava, Ravi Kumar, A. Tomkins","Pig latin: a not-so-foreign language for data processing",2008,"","","","",967,"2024-08-22 15:04:59","","10.1145/1376616.1376726","","",,,,,2070,129.38,414,5,16,"There is a growing need for ad-hoc analysis of extremely large data sets, especially at internet companies where innovation critically depends on being able to analyze terabytes of data collected every day. Parallel database products, e.g., Teradata, offer a solution, but are usually prohibitively expensive at this scale. Besides, many of the people who analyze this data are entrenched procedural programmers, who find the declarative, SQL style to be unnatural. The success of the more procedural map-reduce programming model, and its associated scalable implementations on commodity hardware, is evidence of the above. However, the map-reduce paradigm is too low-level and rigid, and leads to a great deal of custom user code that is hard to maintain, and reuse.  We describe a new language called Pig Latin that we have designed to fit in a sweet spot between the declarative style of SQL, and the low-level, procedural style of map-reduce. The accompanying system, Pig, is fully implemented, and compiles Pig Latin into physical plans that are executed over Hadoop, an open-source, map-reduce implementation. We give a few examples of how engineers at Yahoo! are using Pig to dramatically reduce the time required for the development and execution of their data analysis tasks, compared to using Hadoop directly. We also report on a novel debugging environment that comes integrated with Pig, that can lead to even higher productivity gains. Pig is an open-source, Apache-incubator project, and available for general use.","",""
46,"Cindy K. Harnett","Open source hardware for instrumentation and measurement",2011,"","","","",143,"2024-08-22 15:04:59","","10.1109/MIM.2011.5773535","","",,,,,46,3.54,46,1,13,"The term ""open source"" originally applied to software projects with publicly available source code for others to modify, improve, and compile. Modified software projects were then often required to release their source code under the terms of the ""open source"" agreement. Currently, ""open source"" is also available for hardware projects and includes printed circuit board designs, photomask layouts and mechanical assemblies. While the scientific community requests journal authors to provide enough information for other groups to replicate their work, and patent examiners hold inventors to the same test, the OSH community requires even more details and prefers that they be available online. For example, downloadable electronic design files for printed circuit boards and 3-D printable enclosures make it possible for an engineer to modify an instrument design from the desktop, order the parts from several different manufacturers, and receive a customized kit for assembly - or even have the parts assembled and shipped. The original designers may remain completely unaware of the development or may receive credit or a royalty for their work depending on the terms under which they released the design.","",""
23,"Cindy K. Harnett","Open Wireless Sensor Network Telemetry Platform for Mobile Phones",2010,"","","","",701,"2024-08-22 15:04:59","","10.1109/JSEN.2010.2040271","","",,,,,23,1.64,23,1,14,"Mobile phones are an underutilized resource for connecting low-power wireless sensor networks (WSNs) to the internet. WSNs typically expend most of their battery power on data transmission. Mobile phones carried by the public could enable a hybrid approach where data makes a low-power short distance hop to phones in the vicinity using Bluetooth or a similar short range protocol, then uses the phones' long distance connectivity to upload to the Internet. Because a large fraction of mobile phones have Bluetooth short-distance radio, this paper describes low-cost hardware for a generic WSN-to-Bluetooth gateway and open-source software that allows a wide subset of mobile phones to download and save WSN data.","",""
34,"Clifford Kelley, J. Barnes, Jingrong Cheng","OpenSource GPS Open Source Software for Learning about GPS",2002,"","","","",463,"2024-08-22 15:04:59","","","","",,,,,34,1.55,11,3,22,"Teaching the next generation of engineers about the inner workings of GPS receivers is difficult due to the expense of acquiring appropriate hardware and software. In the past few years a number of excellent books have been written about GPS (references 1 through 5). But, in the end students learn best by doing. Even with hardware available, trying to squeeze the development of software into a quarter or a semester is asking a lot. A low cost set of hardware, along with free open source software, allows students access to the inner workings of the receiver without 'breaking the bank' in terms of time or money. This article will present open source GPS receiver software and laboratory hardware that is a straightforward modification of a COTS receiver to interface it to a PC bus. The hardware and software are based on the GEC Plessey, then Mitel, now Zarlink, chipset. In the 1990’s GEC introduced a board and software called the GPS Builder TM which placed the down converter and correlator chips on an ISA card installed on a PC. Since the software ran on the PC it gave the user complete control and visibility into the operation of the receiver. Unfortunately GEC and Mitel found that they had to charge in excess of $1000 dollars for the board and software licenses. This served to limit its popularity among cash strapped universities and individuals. Given the success of Linux, it was apparent that complex software development could be done on free open source software. This paper describes the hardware and software architecture, the features added to allow debugging of the code and carrier tracking loops, and plans for improving the software, install it on other receiver hardware, use embedded ‘x86 hardware, and to run under Open Source real time operating systems. A comparison will also be made of the software using two receivers, and will show the results of its performance. This is similar to experiments that students could perform using the open source software and hardware discussed herein. An Internet website has been set up at http://www.home.earthlink.net/~cwkelley to describe the project, and to provide source code and sample input and output data. HARDWARE GPS receiver hardware is complicated by the fact that there is RF signal processing in close vicinity to digital signals, which can interfere with the RF signal chain. In 1995 a 2-sided board was designed and built based on the GP 2020 chipset, which had 6 channels per chip. While it was possible to get it to work it was obvious that it had problems resetting and limited functionality. Building high quality 4 layer surface mount component boards is expensive and requires specialized test equipment. Another alternative was needed. While working with the Canadian Marconi AllStar and SuperStar it was noticed that it used the same chipset. Since the SuperStar OEM board is relatively inexpensive and well built it suggested the idea of “hacking” into the hardware to bypass the digital processing on the board, and connect directly into a PC. A description of how to do this is provided on the website. Since the SuperStar GP2021 interface is set up as a ‘186, the hardware was easy to setup. Although it destroys a perfectly good receiver, it seems to work well. Versions of the “hacked” receiver are working at both UCR and UNSW. Now, with hardware available for less than $200, adapting the software to the GP2021 was the only missing part. Figure 1 is a photograph of the hardware with the “hacked” receiver mounted to an ISA bus experimental card. Figure 1 Photograph of “hacked” GPS receiver As shown in Figure 2, the receiver consists of an RF ""front end"" chip and a digital processing chip connected to a PC I/O interface. The front end connects directly to the 10MHz clock and sends a 40MHz signal to the correlator chip. The correlator chip appears to the PC as a set of about 100 read and/or write registers. The RF signal is first down converted to about 175MHz, is sent to a simple band pass filter, and sent back to the front end. The second down converter stage is at about 35MHz. A SAW filter is used to filter and return the signal to the front end. In the final stage the signal is down converted to 4.3MHz and a 2-bit A/D converter (sign and magnitude) is used to transmit the signal information to the GP2021 correlator chip. The correlator chip provides the sample timing, which is simply the 40MHz clock divided by 7. The PC interface consists of an ISA I/O board from JDR Electronics set up to address two 16-bit ports. One port (0x304) uses the lower 8 bits to send the register address. The other port (0x308) is used to read and write 16 bits of data. The correlator chip interface can be set up in a number of ways. As it is set up as an Intel 186 interface an indeterminate amount of time is available between latching the address and transferring the data. 7404 RF cable MCX to SMA SMA bulkhead adapter Figure 2 Receiver Hardware Interface SOFTWARE OpenSource GPS is a C program written in Borland C (version 4.5 and later) without any embedded assembly language. As shown in Figure 3 the software uses a single interrupt routine to handle the tracking loops and find the navigation message. All other functions are handled using a polling method triggered by flags from the interrupt routine. Figure 4 shows the main software block diagram while Figure 5 illustrates in more detail the interrupt processing. In order to reduce connections to the correlator chip, the PC clock timing (interrupt 0) is taken over and is modified to provide an interrupt every 500 to 900μs. Figure 3 Software Block Diagram Figure 4 Main Program Figure 5 Interrupt Routine Figure 6 is a file structure diagram of the software. The program is written in three parts. GP2021 contains functions that deal with communication with the correlator chipset. The main routine is in gpsrcvr while gpsfuncs contains the library of GPS functions such as satellite location by using the almanac, ephemeris, computing the navigation solution and decoding the navigation message. The input file used only for input is the rcvr_par.dat file which contains constants used by the receiver, such as tracking loop constants for code and carrier for pull-in and tracking along with flags for various outputs. The input/output files are read at the start of the program and updated when the program exits. The output files record data for later analysis. Main Program Interrupt Service Routine Enable PC Clock Interrupt Generator Common Variables/ Flags Input Files Output Files I/O Files 512 μs delay Disable PC Clock Interrupt Generator Initialize","",""
29,"Cristian Mattarei, Makai Mann, Clark W. Barrett, Ross G. Daly, Dillon Huff, P. Hanrahan","CoSA: Integrated Verification for Agile Hardware Design",2018,"","","","",922,"2024-08-22 15:04:59","","10.23919/FMCAD.2018.8603014","","",,,,,29,4.83,5,6,6,"Symbolic model-checking is a well-established technique used in hardware design to assess, and formally verify, functional correctness. However, most modern model-checkers encode the problem into propositional satisfiability (SAT) and do not leverage any additional information beyond the input design, which is typically provided in a hardware description language such as Verilog.In this paper, we present CoSA (CoreIR Symbolic Analyzer), a model-checking tool for CoreIR designs. CoreIR is a new intermediate representation for hardware. CoSA encodes model-checking queries into first-order formulas that can be solved by Satisfiability Modulo Theories (SMT) solvers. In particular, it natively supports encodings using the theories of bitvectors and arrays. CoSA is closely integrated with CoreIR and can thus leverage CoreIR-generated metadata in addition to user-provided lemmas to assist with formal verification. CoSA supports multiple input formats and provides a broad set of analyses including equivalence checking and safety and liveness verification. CoSA is open-source and written in Python, making it easily extendable.","",""
11,"César Llamas, Manuel Á. González, Carmen Hernández, Jesús Vegas","Open source hardware based sensor platform suitable for human gait identification",2017,"","","","",81,"2024-08-22 15:04:59","","10.1016/j.pmcj.2016.07.003","","",,,,,11,1.57,3,4,7,"","",""
44,"D. Casey Tucker, G. A. Tagliarini","Prototyping with GNU radio and the USRP - where to begin",2009,"","","","",849,"2024-08-22 15:04:59","","10.1109/SECON.2009.5174048","","",,,,,44,2.93,22,2,15,"In compliance with FCC regulations and in response to factors such as cost and consumer demand, many devices are engineered such that they can only receive or transmit in a specific mode of operation or in a fixed range of frequencies. This is the state of many radio peripherals, tuners, and television sets. It is naturally of interest to consider devices that can receive a variety of communications modes or waveforms. Fortunately, software defined radio (SDR) technology enables many waveforms to be processed by a single hardware platform by simply changing its programming. This paper discusses several applications that can be implemented using an open source software (OSS) digital signal processing (DSP) library and the universal software radio peripheral that was developed with GNU radio.","",""
34,"D. Ciliberti, F. Kloosterman","Falcon: a highly flexible open-source software for closed-loop neuroscience",2017,"","","","",277,"2024-08-22 15:04:59","","10.1088/1741-2552/aa7526","","",,,,,34,4.86,17,2,7,"Objective. Closed-loop experiments provide unique insights into brain dynamics and function. To facilitate a wide range of closed-loop experiments, we created an open-source software platform that enables high-performance real-time processing of streaming experimental data. Approach. We wrote Falcon, a C++ multi-threaded software in which the user can load and execute an arbitrary processing graph. Each node of a Falcon graph is mapped to a single thread and nodes communicate with each other through thread-safe buffers. The framework allows for easy implementation of new processing nodes and data types. Falcon was tested both on a 32-core and a 4-core workstation. Streaming data was read from either a commercial acquisition system (Neuralynx) or the open-source Open Ephys hardware, while closed-loop TTL pulses were generated with a USB module for digital output. We characterized the round-trip latency of our Falcon-based closed-loop system, as well as the specific latency contribution of the software architecture, by testing processing graphs with up to 32 parallel pipelines and eight serial stages. We finally deployed Falcon in a task of real-time detection of population bursts recorded live from the hippocampus of a freely moving rat. Main results. On Neuralynx hardware, round-trip latency was well below 1 ms and stable for at least 1 h, while on Open Ephys hardware latencies were below 15 ms. The latency contribution of the software was below 0.5 ms. Round-trip and software latencies were similar on both 32- and 4-core workstations. Falcon was used successfully to detect population bursts online with ~40 ms average latency. Significance. Falcon is a novel open-source software for closed-loop neuroscience. It has sub-millisecond intrinsic latency and gives the experimenter direct control of CPU resources. We envisage Falcon to be a useful tool to the neuroscientific community for implementing a wide variety of closed-loop experiments, including those requiring use of complex data structures and real-time execution of computationally intensive algorithms, such as population neural decoding/encoding from large cell assemblies.","",""
109,"D. Culler, U. C. Berkeley, Jason Hill, Mike Horton, Kris Pister, R. Szewczyk, Alec Woo","MICA: The Commercialization of Microsensor Motes",2002,"","","","",807,"2024-08-22 15:04:59","","","","",,,,,109,4.95,16,7,22,"New technology is changing the nature of sensors and the way they interface with data acquisition and control systems. Researchers at U.C. Berkeley have developed an open-source hardware and software platform that combines sensing, communications, and computing into a complete architecture. The first commercial generation of this platform was dubbed the Rene Mote, and several thousand of these sensors have been deployed at commercial and research institutions worldwide to promote the development and application of wireless sensor networks.","",""
5,"D. Dobrilović, Ž. Stojanov, B. Odadzic","Teaching application development for RFID/ZigBee networks using open source hardware",2014,"","","","",96,"2024-08-22 15:04:59","","10.1109/BIHTEL.2014.6987641","","",,,,,5,0.50,2,3,10,"Concepts related to Wireless Sensor Networks (WSN), Machine-to-Machine (M2M) and the Internet of Things (IoT) have recently gained significant attention in university education. According to this, the need for low-cost, modular, easy-to-use and scalable platform used for building various network systems in order to provide an environment for developing and testing software applications for WSN, IoT and related technologies is very high. This paper presents an approach in creating platform based on open source hardware designed to provide an infrastructure for teaching development of software applications for WSN, in this case applications for RFID/ZigBee networks, to be used in Computing education and profession.","",""
6,"D. Dobrilović, Ž. Stojanov, B. Odadzic, V. Sinik","Platform for teaching communication systems based on open-source hardware",2015,"","","","",83,"2024-08-22 15:04:59","","10.1109/EDUCON.2015.7096051","","",,,,,6,0.67,2,4,9,"Engineering education, in the field of Computer science and Information technology, has the greatest challenges today. These challenges are shaped by the rapid growth of communication systems usage and the appearance of new technologies. Currently, there is a variety of emerging technologies such as: Bluetooth Low Energy, IEEE 802.15.4, ZigBee, 6lowWPAN, etc. In order to enable easy and fast implementation of these technologies in University courses, the building of the low-cost, flexible and scalable platform with support of these technologies is required. This paper presents an approach in building the platform for teaching communication systems and related topics based on open source hardware. The experience with this platform is presented as well.","",""
3,"D. Dobrilović, Ž. Stojanov, Z. Čović, Janos Simon, Nikolaj Petrov","Model of data center temperature monitoring system with the use of open source hardware",2016,"","","","",85,"2024-08-22 15:04:59","","10.1109/SISY.2016.7601501","","",,,,,3,0.38,1,5,8,"This paper puts in the focus two important segments of information and communication technology. The first segment is monitoring of data centers and the second one is usage of open source hardware. The reason for combining these two segments is effort to explore the efficiency of open source hardware platforms in these environments. The advantages of open source hardware platform as a tool for rapid prototype development and combination of variety of technologies were taken as the main starting point for this research. This paper describes the model for data center temperature monitoring with the usage of open source hardware. The prototype system is partially implemented in accordance with the presented model.","",""
177,"D. Fisher, P. Gould","Open-Source Hardware Is a Low-Cost Alternative for Scientific Instrumentation and Research",2012,"","","","",117,"2024-08-22 15:04:59","","10.4236/MI.2012.12002","","",,,,,177,14.75,89,2,12,"Scientific research requires the collection of data in order to study, monitor, analyze, describe, or understand a particular process or event. Data collection efforts are often a compromise: manual measurements can be time-consuming and labor-intensive, resulting in data being collected at a low frequency, while automating the data-collection process can reduce labor requirements and increase the frequency of measurements, but at the cost of added expense of electronic data-collecting instrumentation. Rapid advances in electronic technologies have resulted in a variety of new and inexpensive sensing, monitoring, and control capabilities which offer opportunities for implementation in agricultural and natural-resource research applications. An Open Source Hardware project called Arduino consists of a programmable microcontroller development platform, expansion capability through add-on boards, and a programming development environment for creating custom microcontroller software. All circuit-board and electronic component specifications, as well as the programming software, are open-source and freely available for anyone to use or modify. Inexpensive sensors and the Arduino development platform were used to develop several inexpensive, automated sensing and datalogging systems for use in agricultural and natural-resources related research projects. Systems were developed and implemented to monitor soil-moisture status of field crops for irrigation scheduling and crop-water use studies, to measure daily evaporation-pan water levels for quantifying evaporative demand, and to monitor environmental parameters under forested conditions. These studies demonstrate the usefulness of automated measurements, and offer guidance for other researchers in developing inexpensive sensing and monitoring systems to further their research.","",""
42,"D. G. Costa, C. Duran-Faundez","Open-Source Electronics Platforms as Enabling Technologies for Smart Cities: Recent Developments and Perspectives",2018,"","","","",249,"2024-08-22 15:04:59","","10.3390/ELECTRONICS7120404","","",,,,,42,7.00,21,2,6,"With the increasing availability of affordable open-source embedded hardware platforms, the development of low-cost programmable devices for uncountable tasks has accelerated in recent years. In this sense, the large development community that is being created around popular platforms is also contributing to the construction of Internet of Things applications, which can ultimately support the maturation of the smart-cities era. Popular platforms such as Raspberry Pi, BeagleBoard and Arduino come as single-board open-source platforms that have enough computational power for different types of smart-city applications, while keeping affordable prices and encompassing many programming libraries and useful hardware extensions. As a result, smart-city solutions based on such platforms are becoming common and the surveying of recent research in this area can support a better understanding of this scenario, as presented in this article. Moreover, discussions about the continuous developments in these platforms can also indicate promising perspectives when using these boards as key elements to build smart cities.","",""
173,"D. Goodwin","An Open-Source, Extensible Software Suite for CVD Process Simulation",2002,"","","","",454,"2024-08-22 15:04:59","","","","",,,,,173,7.86,173,1,22,"Chemical vapor deposition processes involve a complex interplay of chemistry and transport, both in the vapor and on the surface. Arriving at a mechanistic understanding usually requires both experimental process diagnostics and numerical simulation. Just as appropriate tools (gas chromatographs, lasers, spectrometers) are required for diagnostics, suitable numerical tools are needed for simulation, including ones to compute chemical equilibrium, simulate stirred reactors or reacting flow problems with surface chemistry, carry out reaction path analysis, among others. To be most effective, these software tools should be open-source, so that their internal workings can be examined if necessary (as can be done with hardware), should be extensible, and should have easy-to-use interfaces.","",""
30,"D. Gratadour, M. Puech, C. Vérinaud, P. Kestener, M. Gray, C. Petit, J. Brulé, Y. Clénet, F. Ferreira, E. Gendron, M. Lainé, A. Sevin, G. Rousset, F. Hammer, I. Jégouzo, M. Paillous, S. Taburet, Y. Yang, J. Beuzit, A. Carlotti, M. Westphal, B. Épinat, M. Ferrari, T. Gautrais, J. Lambert, B. Neichel, S. Rodionov","COMPASS: an efficient, scalable and versatile numerical platform for the development of ELT AO systems",2014,"","","","",794,"2024-08-22 15:04:59","","10.1117/12.2056358","","",,,,,30,3.00,3,27,10,"The main objective of the COMPASS project is to provide a full scale end-to-end AO development platform, able to address the E-ELT scale and designed as a free, open source numerical tool with a long term maintenance plan. The development of this platform is based on a full integration of software with hardware and relies on an optimized implementation on heterogeneous hardware using GPUs as accelerators. In this paper, we present the overall platform, the various work packages of this project, the milestones to be reached, the results already obtained and the first output of the ongoing collaborations.","",""
49,"D. H. Noronha, B. Salehpour, S. Wilton","LeFlow: Enabling Flexible FPGA High-Level Synthesis of Tensorflow Deep Neural Networks",2018,"","","","",699,"2024-08-22 15:04:59","","","","",,,,,49,8.17,16,3,6,"Recent work has shown that Field-Programmable Gate Arrays (FPGAs) play an important role in the acceleration of Machine Learning applications. Initial specification of machine learning applications are often done using a high-level Python-oriented framework such as Tensorflow, followed by a manual translation to either C or RTL for synthesis using vendor tools. This manual translation step is time-consuming and requires expertise that limit the applicability of FPGAs in this important domain. In this paper, we present an open-source tool-flow that maps numerical computation models written in Tensorflow to synthesizable hardware. Unlike other tools, which are often constrained by a small number of inflexible templates, our flow uses Google's XLA compiler which emits LLVM code directly from a Tensorflow specification. This LLVM code can then be used with a high-level synthesis tool to automatically generate hardware. We show that our flow allows users to generate Deep Neural Networks with very few lines of Python code.","",""
321,"D. Honegger, Lorenz Meier, Petri Tanskanen, M. Pollefeys","An open source and open hardware embedded metric optical flow CMOS camera for indoor and outdoor applications",2013,"","","","",178,"2024-08-22 15:04:59","","10.1109/ICRA.2013.6630805","","",,,,,321,29.18,80,4,11,"Robust velocity and position estimation at high update rates is crucial for mobile robot navigation. In recent years optical flow sensors based on computer mouse hardware chips have been shown to perform well on micro air vehicles. Since they require more light than present in typical indoor and outdoor low-light conditions, their practical use is limited. We present an open source and open hardware design 1 of an optical flow sensor based on a machine vision CMOS image sensor for indoor and outdoor applications with very high light sensitivity. Optical flow is estimated on an ARM Cortex M4 microcontroller in real-time at 250 Hz update rate. Angular rate compensation with a gyroscope and distance scaling using a ultrasonic sensor are performed onboard. The system is designed for further extension and adaption and shown in-flight on a micro air vehicle.","",""
515,"D. Ince, L. Hatton, John Graham-Cumming","The case for open computer programs",2012,"","","","",501,"2024-08-22 15:04:59","","10.1038/nature10836","","",,,,,515,42.92,172,3,12,"","",""
50,"D. Jenkins, Bog Eum Lee, S. Jun, J. Reyes-De-Corcuera, E. McLamore","ABE-Stat, a Fully Open-Source and Versatile Wireless Potentiostat Project Including Electrochemical Impedance Spectroscopy",2019,"","","","",879,"2024-08-22 15:04:59","","10.1149/2.0061909jes","","",,,,,50,10.00,10,5,5,"Exciting discoveries in material science and molecular interactions are resulting in many promising electrochemical biosensor technologies. Compact, high-quality instrumentation is critical to adaptation of these new technologies especially for distributed applications in the agriculture and food industries. To this end, we have developed ABE-Stat, a fully open-source, battery-powered potentiostat project including a wireless Android interface. ABE-Stat is capable of conducting routine electrochemical analyses including cyclic voltammetry (CV), differential pulse voltammetry (DPV), high impedance potentiometric measurements, and can connect directly to the internet through WiFi or indirectly through the Android interface. Importantly it is the ﬁrst fully open-source potentiostat capable of evaluating electrochemical impedance spectroscopy (EIS) across a wide frequency spectrum (0.1 Hz to 100kHz)withuserselectableamplitudeandbias.Currentnoisewasobservedtobeoveranorderofmagnitudelargerthanthenominal resolution of the embedded 24-bit analog to digital converter (ADC), but were largely consistent with the actual ADC speciﬁcations. In this manuscript we share detailed documentation for ABE-Stat including hardware design and source code, and evaluation of the performance of all avaiable analyses. We also suggest design improvements that could improve the noise performance of ABE-Stat and consistency of EIS measurements across the spectrum.","",""
13,"D. Kera","Science Artisans and Open Science Hardware",2017,"","","","",354,"2024-08-22 15:04:59","","10.1177/0270467618774978","","",,,,,13,1.86,13,1,7,"Open science hardware (OSH) are prototypes of laboratory instruments that use open source hardware to extend the purely epistemic (improving knowledge about nature) and normative (improving society) ideals of science and emphasize the importance of technology. They remind us of Zilsel’s 1942 thesis about the artisanal origins of science and instrument making that bridged disciplinary and social barriers in the 16th century. The emphasis on making, tinkering, and design transcends research, reproducibility, and corroboration in science and pushes to the forefront educational, emancipatory, and aesthetic and exploratory uses. I will use two recent projects, OpenDrop electrowetting platform and Open Source Estrogen that make but also reflect OSH’s playful, expressive, and performative strategies and define the present practices as “artisanal science.” These hybrid and ambiguous practices bridge divides between present disciplines and skills but they also define science as an everyday activity directly connected to the private and public interests of the citizens. To describe this epistemic and normative ambiguity of artisanal science, I employ Hannah Arendt’s 1958 critique of homo laborans and homo faber and claim that science artisans (citizen scientists, geeks, makers, and hackers) offer an alternative to professionalization of science as practiced in the university and R&D laboratories. Science artisans design and build instruments to engage in civic “vita activa” over instruments but also leisurely “otium” outside of the work and science labor. OSH in this sense empowers individuals and communities to explore new connections between scientific practices, public actions, and private interests (leisure). The science artisans strive for and explore sovereignty, dignity, and freedom in an age immersed in science and technology controversies by bridging the divides between art, science, engineering, and humanities.","",""
20,"D. Laverty, D. Morrow, Alastair McKinley, M. Cregan","OpenPMU: Open source platform for Synchrophasor applications and research",2011,"","","","",404,"2024-08-22 15:04:59","","10.1109/PES.2011.6039607","","",,,,,20,1.54,5,4,13,"Synchrophasor measurement is increasingly becoming a standard tool of the electrical power systems engineer and is attracting much interest in the research community due to the novel new methods and techniques it offers for observing and controlling the power system. A common difficulty in the development of Synchrophasor based technology is the closed environment in which the measurement algorithms and processes governing the operation of Phasor Measurement Units, PMUs, are developed. While most PMUs will support the relevant IEEE standards for Synchrophasor measurement, where transient or dynamic operation is concerned it would be useful to have detailed knowledge of the mathematical transforms and indeed any limitations of the measurement hardware. This can be especially important in developing new protection systems utilizing Synchrophasors, when confidence in the system rests on consistent performance between devices over a long period of service, including device upgrades. The “OpenPMU” described in this paper intends to settle some of these concerns by defining and developing a research orientated platform for Synchrophasor algorithm and application development.","",""
25,"D. Mellis, L. Buechley","Collaboration in open-source hardware: third-party variations on the arduino duemilanove",2012,"","","","",124,"2024-08-22 15:04:59","","10.1145/2145204.2145377","","",,,,,25,2.08,13,2,12,"This paper looks at collaboration in open-source hardware: physical goods whose digital design files are shared for others to make or modify. Through research into nine variations on the Arduino Duemilanove (an electronic circuit board) and interviews with their developers, we explore the process and outcome of open-source hardware development. We find a structure that differs substantially from that of most open-source software projects, involving many small-scale collaborations rather than a centralized process. We discuss three possible reasons for this structure: differing component selections, the investment required for prototyping, and the lack of software collaboration tools.","",""
18,"D. Mellis, L. Buechley","Scaffolding creativity with open-source hardware",2011,"","","","",142,"2024-08-22 15:04:59","","10.1145/2069618.2069702","","",,,,,18,1.38,9,2,13,"In this paper we discuss the role of open-source hardware in supporting creativity. We use the case study of an open-source FM radio and explore the modes of creation that emerged from a workshop in which participants modified and produced the design: making, personalizing, designing, engineering, and experimenting. We contrast open-source hardware with other approaches to supporting creativity and explore some of its unique challenges and opportunities.","",""
58,"D. Mellis, L. Buechley","Case studies in the personal fabrication of electronic products",2012,"","","","",783,"2024-08-22 15:04:59","","10.1145/2317956.2317998","","",,,,,58,4.83,29,2,12,"This paper investigates the use of digital fabrication for the individual production and customization of electronic devices. We present two products -- a pair of speakers with laser-cut parts and a computer mouse with a 3D-printed enclosure -- and describe their making and modification by workshop participants. The speakers target a general audience, engaging a diversity of skills and backgrounds. The mouse aims at designers, exploring the application of 3D modeling skills to the production of electronic devices. We use the case studies to discuss general implications of digital fabrication for technology production and education: enabling collaboration and iteration through open-source hardware, enhancing the products of educational technologies and experiences, and increasing the diversity of and personal connections to electronic products. The case studies also suggest opportunities for further research into tools, materials, and people.","",""
67,"D. Mellis, M. Banzi","Arduino: An Open Electronics Prototyping Platform",2007,"","","","",680,"2024-08-22 15:04:59","","","","",,,,,67,3.94,34,2,17,"Arduino is a platform for prototyping interactive objects using electronics. It consists of both hardware and software: a circuit board that can be purchased at low cost or assembled from freely-available plans; and an open-source development environment and library for writing code to control the board. Arduino comes from a philosophy of learning by doing and strives to make it easy to work directly with the medium of interactivity. It extends the principles of open source to the realm of hardware, supporting a community of people working with and extending the platform. It has been used in universities around the world and in numerous works of interactive art.","",""
28,"D. Muir, B. Kampa","FocusStack and StimServer: a new open source MATLAB toolchain for visual stimulation and analysis of two-photon calcium neuronal imaging data",2015,"","","","",325,"2024-08-22 15:04:59","","10.3389/fninf.2014.00085","","",,,,,28,3.11,14,2,9,"Two-photon calcium imaging of neuronal responses is an increasingly accessible technology for probing population responses in cortex at single cell resolution, and with reasonable and improving temporal resolution. However, analysis of two-photon data is usually performed using ad-hoc solutions. To date, no publicly available software exists for straightforward analysis of stimulus-triggered two-photon imaging experiments. In addition, the increasing data rates of two-photon acquisition systems imply increasing cost of computing hardware required for in-memory analysis. Here we present a Matlab toolbox, FocusStack, for simple and efficient analysis of two-photon calcium imaging stacks on consumer-level hardware, with minimal memory footprint. We also present a Matlab toolbox, StimServer, for generation and sequencing of visual stimuli, designed to be triggered over a network link from a two-photon acquisition system. FocusStack is compatible out of the box with several existing two-photon acquisition systems, and is simple to adapt to arbitrary binary file formats. Analysis tools such as stack alignment for movement correction, automated cell detection and peri-stimulus time histograms are already provided, and further tools can be easily incorporated. Both packages are available as publicly-accessible source-code repositories1.","",""
22,"D. Piromalis, K. Arvanitis","SensoTube: A Scalable Hardware Design Architecture for Wireless Sensors and Actuators Networks Nodes in the Agricultural Domain",2016,"","","","",928,"2024-08-22 15:04:59","","10.3390/s16081227","","",,,,,22,2.75,11,2,8,"Wireless Sensor and Actuators Networks (WSANs) constitute one of the most challenging technologies with tremendous socio-economic impact for the next decade. Functionally and energy optimized hardware systems and development tools maybe is the most critical facet of this technology for the achievement of such prospects. Especially, in the area of agriculture, where the hostile operating environment comes to add to the general technological and technical issues, reliable and robust WSAN systems are mandatory. This paper focuses on the hardware design architectures of the WSANs for real-world agricultural applications. It presents the available alternatives in hardware design and identifies their difficulties and problems for real-life implementations. The paper introduces SensoTube, a new WSAN hardware architecture, which is proposed as a solution to the various existing design constraints of WSANs. The establishment of the proposed architecture is based, firstly on an abstraction approach in the functional requirements context, and secondly, on the standardization of the subsystems connectivity, in order to allow for an open, expandable, flexible, reconfigurable, energy optimized, reliable and robust hardware system. The SensoTube implementation reference model together with its encapsulation design and installation are analyzed and presented in details. Furthermore, as a proof of concept, certain use cases have been studied in order to demonstrate the benefits of migrating existing designs based on the available open-source hardware platforms to SensoTube architecture.","",""
105,"D. Quinlan, C. Liao","The ROSE Source-to-Source Compiler Infrastructure",2011,"","","","",935,"2024-08-22 15:04:59","","","","",,,,,105,8.08,53,2,13,"The development of future software for proposed new computer architectures is expected to make significant demands on compiler technologies. Significant rewriting of applications will be likely to support the use of new hardware features and preserve the current software investment. Existing compilers provide little support for the broad range of research efforts addressing exascale challenges, such as parallelism, locality, resiliency, power efficiency, etc. The economics of how new machines will change an existing code base of software, that is too expensive to manually rewrite, may well drive automated mechanisms to transform existing software to take advantage of future machine features. This approach will lessen the cost and delay of the move to new, and possibly radically different, future architectures. Source-to-source compilers provides a pragmatic vehicle to support research, development, and deployment of novel compiler technologies by compiler experts or even advanced application developers. Within a source-to-source approach the input source code is read by the compiler, an internal representation (IR) is constructed, the IR is the basis of analysis that is used to guide transformations, the transformations occur on the IR, the IR is used to regenerate new source code, which is then compiled by a backend compiler. Our source-to-source compiler, ROSE, is a project to support the requirements of DOE. Work on ROSE has focused on the development of a community based project to define source-to-source compilation for a broad range of languages especially targeted at DOE applications (addressing robustness and large scale codes as required for DOE applications). Novel research areas are most easily supported when they can leverage significant tool chains that interact and use source code while allowing the hardware vendor’s own compiler for low level optimizations. In fact, high level optimization are rarely feasible for existing low level compilers for common languages such as C, C++, and Fortran. ROSE addresses the economics of how compiler research can be moved closer to the audience with significant technical performance problems and for whom the hardware is likely to be changing significantly in the next decade. Within ROSE it is less the goal to solve all problems than to permit domain experts to better solve their own problems. This talk will focus on the design and motivation for ROSE as an open community source-to-source compiler infrastructure to support performance optimization, tools for analysis, verification and software assurance, and general cus","",""
82,"D. Rosenegger, C. Tran, J. LeDue, Ning Zhou, G. Gordon","A High Performance, Cost-Effective, Open-Source Microscope for Scanning Two-Photon Microscopy that Is Modular and Readily Adaptable",2014,"","","","",335,"2024-08-22 15:04:59","","10.1371/journal.pone.0110475","","",,,,,82,8.20,16,5,10,"Two-photon laser scanning microscopy has revolutionized the ability to delineate cellular and physiological function in acutely isolated tissue and in vivo. However, there exist barriers for many laboratories to acquire two-photon microscopes. Additionally, if owned, typical systems are difficult to modify to rapidly evolving methodologies. A potential solution to these problems is to enable scientists to build their own high-performance and adaptable system by overcoming a resource insufficiency. Here we present a detailed hardware resource and protocol for building an upright, highly modular and adaptable two-photon laser scanning fluorescence microscope that can be used for in vitro or in vivo applications. The microscope is comprised of high-end componentry on a skeleton of off-the-shelf compatible opto-mechanical parts. The dedicated design enabled imaging depths close to 1 mm into mouse brain tissue and a signal-to-noise ratio that exceeded all commercial two-photon systems tested. In addition to a detailed parts list, instructions for assembly, testing and troubleshooting, our plan includes complete three dimensional computer models that greatly reduce the knowledge base required for the non-expert user. This open-source resource lowers barriers in order to equip more laboratories with high-performance two-photon imaging and to help progress our understanding of the cellular and physiological function of living systems.","",""
29,"D. Ryu","Development of BLE Sensor Module based on Open Source for IoT Applications",2015,"","","","",308,"2024-08-22 15:04:59","","10.13067/JKIECS.2015.10.3.419","","",,,,,29,3.22,29,1,9,"The era of IoT in which all objects are intelligent and are connected to the Internet has been started. In order to establish and activate an IoT eco system, open services platform is very important. In this paper, we developed a BLE sensor module as a component of the open service platform based on the IoT and the open source hardware Blutooth4.0. To verify the functionality and performance of the developed BLE sensor module was built to evaluate the performance of the test environment.","",""
136,"D. S. Cyphers, Arjun K. Bansal, Anahita Bhiwandiwalla, J. Bobba, M. Brookhart, Avijit Chakraborty, William Constable, Christian Convey, Leona Cook, Omar Kanawi, R. Kimball, Jason Knight, Nikolay Korovaiko, V. Vijay, Yixing Lao, C. Lishka, J. Menon, Jennifer Myers, Sandeep Aswath Narayana, A. Procter, T. Webb","Intel nGraph: An Intermediate Representation, Compiler, and Executor for Deep Learning",2018,"","","","",952,"2024-08-22 15:04:59","","","","",,,,,136,22.67,14,21,6,"The Deep Learning (DL) community sees many novel topologies published each year. Achieving high performance on each new topology remains challenging, as each requires some level of manual effort. This issue is compounded by the proliferation of frameworks and hardware platforms. The current approach, which we call""direct optimization"", requires deep changes within each framework to improve the training performance for each hardware backend (CPUs, GPUs, FPGAs, ASICs) and requires $\mathcal{O}(fp)$ effort; where $f$ is the number of frameworks and $p$ is the number of platforms. While optimized kernels for deep-learning primitives are provided via libraries like Intel Math Kernel Library for Deep Neural Networks (MKL-DNN), there are several compiler-inspired ways in which performance can be further optimized. Building on our experience creating neon (a fast deep learning library on GPUs), we developed Intel nGraph, a soon to be open-sourced C++ library to simplify the realization of optimized deep learning performance across frameworks and hardware platforms. Initially-supported frameworks include TensorFlow, MXNet, and Intel neon framework. Initial backends are Intel Architecture CPUs (CPU), the Intel(R) Nervana Neural Network Processor(R) (NNP), and NVIDIA GPUs. Currently supported compiler optimizations include efficient memory management and data layout abstraction. In this paper, we describe our overall architecture and its core components. In the future, we envision extending nGraph API support to a wider range of frameworks, hardware (including FPGAs and ASICs), and compiler optimizations (training versus inference optimizations, multi-node and multi-device scaling via efficient sub-graph partitioning, and HW-specific compounding of operations).","",""
68,"D. Spinellis","Code Reading: The Open Source Perspective",2003,"","","","",912,"2024-08-22 15:04:59","","","","",,,,,68,3.24,68,1,21,"Foreword. Preface. 1. Introduction. Why and How to Read Code. Code as Literature. Code as Exemplar. Maintenance. Evolution. Reuse. Inspections. How to Read this Book. Typographical Conventions. Diagrams. Exercises. Supplementary Material. Tools. Outline. The Great Language Debate. 2. Basic Programming Elements. A Complete Program. Functions and Global Variables. While, Conditions, Blocks. Switch. For. Break, Continue. Character and Boolean Expressions. Goto. Refactoring in the Small. Do, Integer Expressions. Control Structures Revisited. 3. Advanced C Data Types. Pointers. Linked Data Structures. Dynamic Allocation of Data Structures. Call by Reference. Data Element Access. Arrays as Arguments and Results. Function Pointers. Pointer as an Alias. Pointers and Strings. Direct Memory Access. Structures. Grouping Together Data Elements. Returning Multiple Data Elements from a Function. Mapping the Organization of Data. Programming in an Object-Oriented Fashion. Unions. Efficient Use of Storage. Implementing Polymorphism. Accessing Different Internal Representations. Dynamic Memory Allocation. Managing Free Memory. Structures with Dynamically-Allocated Arrays. Typedef Declarations. 4. C Data Structures. Vector. Matrix and Table. Stack. Queue. Map. Hash Tables. Set. Linked List. Tree. Graph. Node Storage. Edge Representation. Edge Storage. Graph Properties. Hidden Structures. Other Representations. 5. Advanced Control Flow. Recursion. Exceptions. Parallelism. Hardware and Software Parallelism. Control Models. Thread Implementations. Signals. Nonlocal Jumps. Macro Substitution. 6. Tackling Large Projects. Design and Implementation Techniques. Project Organization. The Build Process and Makefiles. Configuration. Revision Control. Project-Specific Tools. Testing. 7. Coding Standards and Conventions. File Names and Organization. Indentation. Formatting. Naming Conventions. Programming Practices. Process Standards. 8. Documentation. Documentation Types. Reading Documentation. Documentation Problems. Additional Documentation Sources. Common Open-Source Documentation Formats. 9. Architecture. System Structures. Centralized Repository and Distributed Approaches. Data-Flow. Object-Oriented. Layered. Hierarchies. Slicing. Control Models. Event-Driven Systems. System Manager. State Transition. Element Packaging. Module. Namespace. Object. Generic Implementation. Abstract Data Type. Library. Process and Filter. Component. Data Repository. Architecture Reuse. Frameworks. Code Wizards. Design Patterns. Domain-Specific Architectures. 10. Code-Reading Tools. Regular Expressions. The Editor as a Code Browser. Code Searching With Grep. Locating File Differences. Roll your Own Tool. The Compiler as a Code-Reading Tool. Code Browsers and Beautifiers. Run-Time Tools. Non-software Tools. 11. A Complete Example. Overview. Attack Plan. Code Reuse. Testing and Debugging. Documentation. Observations. Appendix A. Outline of the Code Provided. Appendix B. Source Code Credits. Appendix C. Referenced Source Files. Appendix D. Source Code Licenses. BSD. X. ACE. Apache. DemoGL. OpenCL. ArgoUML. Perl. Appendix E. Maxims for Reading Code. Bibliography. Index. Author Index. 0201799405T01162003","",""
14,"D. Tavares, R. Baron, F. Cardoso, S. Marques, L. Russo, G. Kasprowicz, A. Wojeński","DEVELOPMENT OF AN OPEN-SOURCE HARDWARE PLATFORM FOR SIRIUS BPM AND ORBIT FEEDBACK",2013,"","","","",105,"2024-08-22 15:04:59","","","","",,,,,14,1.27,2,7,11,"The Brazilian Synchrotron Light Laboratory (LNLS) is developing a BPM and orbit feedback system for Sirius, the new low emmitance synchrotron light source under construction in Brazil. In that context, 3 open-source boards and accompanying low-level firmware/software were developed in cooperation with the Warsaw University of Technology (WUT) to serve as hardware platform for the BPM data acquisition and digital signal processing platform as well as orbit feedback data distributor: (i) FPGA board with 2 high-pin count ANSI/VITA FMC slots in PICMG® AMC form factor; (ii) 4-channel 16-bit 130 MS/s ADC board in FMC form factor; (iii) 4-channel 16-bit 250 MS/s ADC board in FMC form factor. The design of such boards and experience of integrating their prototypes in a COTS MicroTCA.4 crate is reported.","",""
12,"D. Torrents","Open source traffic analyzer",2010,"","","","",430,"2024-08-22 15:04:59","","","","",,,,,12,0.86,12,1,14,"Proper traffic analysis is crucial for the development of network systems, services and protocols. Traffic analysis equipment is often based on costly dedicated hardware, and uses proprietary softw ...","",""
36,"D. Valerio","Open Source Software-Defined Radio: A survey on GNUradio and its applications",2008,"","","","",440,"2024-08-22 15:04:59","","","","",,,,,36,2.25,36,1,16,"This report analyzes the feasibility of using a Software Defined Radio solution for research purposes. We focused on the open source GNUradio project and studied its suitability for reproducing and analyzing some widespread wireless protocols, such as IEEE 802.11, Bluetooth, IEEE 802.15.4, and GSM. We found that the use of GNUradio with the Universal Software Radio Peripheral can help researchers in avoiding the closed source firmwares/drivers of commercial chipsets by providing a full customizability at physical and datalink layers. On the other hand, software radios are not always capable of correctly reproducing operations previously done in the hardware domain. This leads to several limitations with widespread standards. In this report we try to provide a picture of such limitations and the current status of the GNUradio framework. This work has been supported by the Telecommunications Research Center Vienna (ftw.) project N0. Ftw is supported by the Austrian Government and by the City of Vienna within the competence center program COMET. This work would not have been possible without the precious information contained in the official GNUradio mailing list archive. A special thanks goes to all the active participants.","",""
36,"D. W. Chang, C. Jenkins, Philip C. Garcia, S. Gilani, Paula Aguilera, Aishwarya Nagarajan, Michael J. Anderson, Matthew A. Kenny, Sean Bauer, M. Schulte, Katherine Compton","ERCBench: An Open-Source Benchmark Suite for Embedded and Reconfigurable Computing",2010,"","","","",415,"2024-08-22 15:04:59","","10.1109/FPL.2010.85","","",,,,,36,2.57,4,11,14,"Researchers in embedded and reconfigurable computing are often hindered by a lack of suitable benchmarks with which to accurately evaluate their work. Without a suitable benchmark suite, researchers use either outdated, unrealistic benchmarks or spend valuable time creating their own. In this paper, we present ERCBench—a freely-available, open-source benchmark suite geared towards embedded and reconfigurable computing research. ERCBench benchmarks represent a variety of application areas, including multimedia processing, wireless communications, and cryptography. They consist of synthesizable Verilog models for hardware accelerators and hybrid hardware/software applications that combine software-based control flow with hardware-based computation tasks.","",""
164,"D. Wagenaar, T. DeMarse, Steve M. Potter","MeaBench: A toolset for multi-electrode data acquisition and on-line analysis",2005,"","","","",785,"2024-08-22 15:04:59","","10.1109/CNE.2005.1419673","","",,,,,164,8.63,55,3,19,"We present a software suite, MeaBench, for data acquisition and online analysis of multi-electrode recordings, especially from micro-electrode arrays. Besides controlling data acquisition hardware, MeaBench includes algorithms for real-time stimulation artifact suppression and spike detection, as well as programs for online display of voltage traces from 60 electrodes and continuously updated spike raster plots. MeaBench features real-time output streaming, allowing easy integration with stimulator systems. We have been able to generate stimulation sequences in response to live neuronal activity with less than 20 ms lag time. MeaBench is open-source software, and is available for free public download at http://www.its.caltech.edu/~pinelab/wagenaar/meabench.html","",""
24,"D. Werthimer","The CASPER collaboration for high-performance open source digital radio astronomy instrumentation",2011,"","","","",396,"2024-08-22 15:04:59","","10.1109/URSIGASS.2011.6051282","","",,,,,24,1.85,24,1,13,"The Collaboration for Astronomy Signal Processing and Electronics Research (CASPER) has revolutionized the cost and time scale for development of high performance radio astronomy signal processing instrumentation. We present open source designs (hardware, gateware, libraries, and software tools) for a variety of flexible high bandwidth instruments, including correlators, beamformers, spectrometers, VLBI, pulsar timing and transient search machines. The collaboration relies on a small number of modular, connectible, upgradable, hardware components and platform independent software libraries that can be reused and scaled as hardware capabilities expand.","",""
364,"D.M. Coleman, I. Sucan, Sachin Chitta, N. Correll","Reducing the Barrier to Entry of Complex Robotic Software: a MoveIt! Case Study",2014,"","","","",546,"2024-08-22 15:04:59","","10.6092/JOSER_2014_05_01_P3","","",,,,,364,36.40,91,4,10,"Developing robot agnostic software frameworks involves synthesizing the disparate fields of robotic theory and software engineering while simultaneously accounting for a large variability in hardware designs and control paradigms. As the capabilities of robotic software frameworks increase, the setup difficulty and learning curve for new users also increase. If the entry barriers for configuring and using the software on robots is too high, even the most powerful of frameworks are useless. A growing need exists in robotic software engineering to aid users in getting started with, and customizing, the software framework as necessary for particular robotic applications. In this paper a case study is presented for the best practices found for lowering the barrier of entry in the MoveIt! framework, an open-source tool for mobile manipulation in ROS, that allows users to 1) quickly get basic motion planning functionality with minimal initial setup, 2) automate its configuration and optimization, and 3) easily customize its components. A graphical interface that assists the user in configuring MoveIt! is the cornerstone of our approach, coupled with the use of an existing standardized robot model for input, automatically generated robot-specific configuration files, and a plugin-based architecture for extensibility. These best practices are summarized into a set of barrier to entry design principles applicable to other robotic software. The approaches for lowering the entry barrier are evaluated by usage statistics, a user survey, and compared against our design objectives for their effectiveness to users.","",""
129,"Da Li, Xinbo Chen, M. Becchi, Ziliang Zong","Evaluating the Energy Efficiency of Deep Convolutional Neural Networks on CPUs and GPUs",2016,"","","","",627,"2024-08-22 15:04:59","","10.1109/BDCloud-SocialCom-SustainCom.2016.76","","",,,,,129,16.13,32,4,8,"In recent years convolutional neural networks (CNNs) have been successfully applied to various applications that are appropriate for deep learning, from image and video processing to speech recognition. The advancements in both hardware (e.g. more powerful GPUs) and software (e.g. deep learning models, open-source frameworks and supporting libraries) have significantly improved the accuracy and training time of CNNs. However, the high speed and accuracy are at the cost of energy consumption, which has been largely ignored in previous CNN design. With the size of data sets grows exponentially, the energy demand for training such data sets increases rapidly. It is highly desirable to design deep learning frameworks and algorithms that are both accurate and energy efficient. In this paper, we conduct a comprehensive study on the power behavior and energy efficiency of numerous well-known CNNs and training frameworks on CPUs and GPUs, and we provide a detailed workload characterization to facilitate the design of energy efficient deep learning solutions.","",""
372,"Damian S. Steiger, Thomas Häner, M. Troyer","ProjectQ: An Open Source Software Framework for Quantum Computing",2016,"","","","",258,"2024-08-22 15:04:59","","10.22331/Q-2018-01-31-49","","",,,,,372,46.50,124,3,8,"We introduce ProjectQ, an open source software effort for quantum computing. The first release features a compiler framework capable of targeting various types of hardware, a high-performance simulator with emulation capabilities, and compiler plug-ins for circuit drawing and resource estimation. We introduce our Python-embedded domain-specific language, present the features, and provide example implementations for quantum algorithms. The framework allows testing of quantum algorithms through simulation and enables running them on actual quantum hardware using a back-end connecting to the IBM Quantum Experience cloud service. Through extension mechanisms, users can provide back-ends to further quantum hardware, and scientists working on quantum compilation can provide plug-ins for additional compilation, optimization, gate synthesis, and layout strategies.","",""
60,"Damien Cerbelaud, Shishir Garg, J. Huylebroeck","Opening the clouds: qualitative overview of the state-of-the-art open source VM-based cloud management platforms",2009,"","","","",427,"2024-08-22 15:04:59","","","","",,,,,60,4.00,20,3,15,"The last year has seen the release of several open-source software leveraging recent advances in virtualization technology. These software provide the ability to build clusters of hardware resources to host and manage several virtual machines. While the underlying hypervisors are common to all of them, the logical architecture and feature implementation tend to be different on each platform, making one or the other more appropriate for particular use cases. In this paper, we describe our experience using four of the most advanced platforms (ECP, Eucalyptus, OpenNebula and oVirt), and provide some feedback about our experience, ease of use, and targeted utilization of each one. Our goal here is to provide the reader with a comprehensive and quick qualitative overview of the state-of-the-art of these open source cloud management platforms.","",""
100,"Dan Tsafrir","The context-switch overhead inflicted by hardware interrupts (and the enigma of do-nothing loops)",2007,"","","","",953,"2024-08-22 15:04:59","","10.1145/1281700.1281704","","",,,,,100,5.88,100,1,17,"The overhead of a context switch is typically associated with multitasking, where several applications share a processor. But even if only one runnable application is present in the system and supposedly runs alone, it is still repeatedly preempted in favor of a different thread of execution, namely, the operating system that services periodic clock interrupts. We employ two complementing methodologies to measure the overhead incurred by such events and obtain contradictory results.  The first methodology systematically changes the interrupt frequency and measures by how much this prolongs the duration of a program that sorts an array. The overall overhead is found to be 0.5-1.5% at 1000 Hz, linearly proportional to the tick rate, and steadily declining as the speed of processors increases. If the kernel is configured such that each tick is slowed down by an access to an external time source, then the direct overhead dominates. Otherwise, the relative weight of the indirect portion is steadily growing with processors' speed, accounting for up to 85% of the total.  The second methodology repeatedly executes a simplistic loop (calibrated to take 1ms), measures the actual execution time, and analyzes the perturbations. Some loop implementations yield results similar to the above, but others indicate that the overhead is actually an order of magnitude bigger, or worse. The phenomenon was observed on IA32, IA64, and Power processors, the latter being part of the ASC Purple supercomputer. Importantly, the effect is greatly amplified for parallel jobs, where one late thread holds up all its peers, causing a slowdown that is dominated by the per-node latency (numerator) and the job granularity (denominator). We trace the bizarre effect to an unexplained interrupt/loop interaction; the question of whether this hardware mis-feature is experienced by real applications remains open.","",""
57,"Danica Porobic, Erietta Liarou, Pınar Tözün, A. Ailamaki","ATraPos: Adaptive transaction processing on hardware Islands",2014,"","","","",933,"2024-08-22 15:04:59","","10.1109/ICDE.2014.6816692","","",,,,,57,5.70,14,4,10,"Nowadays, high-performance transaction processing applications increasingly run on multisocket multicore servers. Such architectures exhibit non-uniform memory access latency as well as non-uniform thread communication costs. Unfortunately, traditional shared-everything database management systems are designed for uniform inter-core communication speeds. This causes unpredictable access latencies in the critical path. While lack of data locality may be a minor nuisance on systems with fewer than 4 processors, it becomes a serious scalability limitation on larger systems due to accesses to centralized data structures. In this paper, we propose ATraPos, a storage manager design that is aware of the non-uniform access latencies of multisocket systems. ATraPos achieves good data locality by carefully partitioning the data as well as internal data structures (e.g., state information) to the available processors and by assigning threads to specific partitions. Furthermore, ATraPos dynamically adapts to the workload characteristics, i.e., when the workload changes, ATraPos detects the change and automatically revises the data partitioning and thread placement to fit the current access patterns and hardware topology. We prototype ATraPos on top of an open-source storage manager Shore-MT and we present a detailed experimental analysis with both synthetic and standard (TPC-C and TATP) benchmarks. We show that ATraPos exhibits performance improvements of a factor ranging from 1.4 to 6.7x for a wide collection of transactional workloads. In addition, we show that the adaptive monitoring and partitioning scheme of ATraPos poses a negligible cost, while it allows the system to dynamically and gracefully adapt when the workload changes.","",""
70,"Daniel A. Cantu, Bo Wang, Michael W. Gongwer, Cynthia X. He, Anubhuti Goel, Anand Suresh, Nazim Kourdougli, Erica D. Arroyo, W. Zeiger, C. Portera-Cailliau","EZcalcium: Open-Source Toolbox for Analysis of Calcium Imaging Data",2020,"","","","",877,"2024-08-22 15:04:59","","10.3389/fncir.2020.00025","","",,,,,70,17.50,7,10,4,"Fluorescence calcium imaging using a range of microscopy approaches, such as 2-photon excitation or head-mounted ‘miniscopes’, is one of the preferred methods to record neuronal activity and glial signals in various experimental settings, including acute brain slices, brain organoids, and behaving animals. Because changes in the fluorescence intensity of genetically encoded or chemical calcium indicators correlate with action potential firing in neurons, data analysis is based on inferring such spiking from changes in pixel intensity values across time within different regions of interest. However, the algorithms necessary to extract biologically relevant information from these fluorescent signals are complex and require significant expertise in programming to develop robust analysis pipelines. For decades, the only way to perform these analyses was for individual laboratories to write their own custom code. These routines were typically not well annotated and lacked intuitive graphical user interfaces (GUIs), which made it difficult for scientists in other laboratories to adopt them. Although the panorama is changing with recent tools like CaImAn, Suite2P and others, there is still a barrier for many laboratories to adopt these packages, especially for potential users without sophisticated programming skills. As 2-photon microscopes are becoming increasingly affordable, the bottleneck is no longer the hardware, but the software used to analyze the calcium data in an optimal manner and consistently across different groups. We addressed this unmet need by incorporating recent software solutions for motion correction, segmentation, signal extraction and deconvolution of calcium imaging data into an open-source, easy to use, GUI-based, intuitive and automated data analysis software, which we named EZcalcium.","",""
20,"Daniel A. Duecker, Nathalie Bauschmann, Tim Hansen, E. Kreuzer, R. Seifried","HippoCampusX – A Hydrobatic Open-source Micro AUV for Confined Environments",2020,"","","","",214,"2024-08-22 15:04:59","","10.1109/AUV50043.2020.9267949","","",,,,,20,5.00,4,5,4,"Monitoring missions in confined underwater environments such as nuclear storage ponds or industry tanks call for highly maneuverable fully autonomous micro underwater robots. In this work, we target this challenging scenario with the new low-cost open-source HippoCampusX platform. We present a modular software and hardware architecture which is easily adaptable to mission specific requirements. Our system is part of the PX4-environment [1] and constitutes PX4’s first underwater extension including a SITL simulation. We conduct a series of experiments to demonstrate HippoCampus’ agile maneuvering capabilities and validate the derived dynamic model.","",""
12,"Daniel de Oliveira, T. Gomes, Sandro Pinto","uTango: An Open-Source TEE for IoT Devices",2021,"","","","",180,"2024-08-22 15:04:59","","10.1109/ACCESS.2022.3152781","","",,,,,12,4.00,4,3,3,"Security is one of the main challenges of the Internet of Things (IoT). IoT devices are mainly powered by low-cost microcontrollers (MCUs) that typically lack basic hardware security mechanisms to separate security-critical applications from less critical components. Recently, Arm has started to release Cortex-M MCUs enhanced with TrustZone technology (i.e., TrustZone-M), a system-wide security solution aiming at providing robust protection for IoT devices. Trusted Execution Environments (TEEs) relying on TrustZone hardware have been perceived as safe havens for securing mobile devices. However, for the past few years, considerable effort has gone into unveiling hundreds of vulnerabilities and proposing a collection of relevant defense techniques to address several issues. While new TEE solutions built on TrustZone-M start flourishing, the lessons gathered from the research community appear to be falling short, as these new systems are trapping into the same pitfalls of the past. In this paper, we present uTango, the first multi-world TEE for modern IoT devices. uTango proposes a novel architecture aiming at tackling the major architectural deficiencies currently affecting TrustZone(-M)-assisted TEEs. In particular, we leverage the very same TrustZone hardware primitives used by dual-world implementations to create multiple and equally secure execution environments within the normal world. We demonstrate the benefits of uTango by conducting an extensive evaluation on a real TrustZone-M hardware platform, i.e., Arm Musca-B1. uTango will be open-sourced and freely available on GitHub in hopes of engaging academia and industry on securing the foreseeable trillion IoT devices.","",""
557,"Daniel L. Ayres, A. Darling, Derrick J. Zwickl, Peter Beerli, M. Holder, P. Lewis, J. Huelsenbeck, F. Ronquist, D. Swofford, M. P. Cummings, A. Rambaut, M. Suchard","BEAGLE: An Application Programming Interface and High-Performance Computing Library for Statistical Phylogenetics",2011,"","","","",981,"2024-08-22 15:04:59","","10.1093/sysbio/syr100","","",,,,,557,42.85,56,12,13,"Abstract Phylogenetic inference is fundamental to our understanding of most aspects of the origin and evolution of life, and in recent years, there has been a concentration of interest in statistical approaches such as Bayesian inference and maximum likelihood estimation. Yet, for large data sets and realistic or interesting models of evolution, these approaches remain computationally demanding. High-throughput sequencing can yield data for thousands of taxa, but scaling to such problems using serial computing often necessitates the use of nonstatistical or approximate approaches. The recent emergence of graphics processing units (GPUs) provides an opportunity to leverage their excellent floating-point computational performance to accelerate statistical phylogenetic inference. A specialized library for phylogenetic calculation would allow existing software packages to make more effective use of available computer hardware, including GPUs. Adoption of a common library would also make it easier for other emerging computing architectures, such as field programmable gate arrays, to be used in the future. We present BEAGLE, an application programming interface (API) and library for high-performance statistical phylogenetic inference. The API provides a uniform interface for performing phylogenetic likelihood calculations on a variety of compute hardware platforms. The library includes a set of efficient implementations and can currently exploit hardware including GPUs using NVIDIA CUDA, central processing units (CPUs) with Streaming SIMD Extensions and related processor supplementary instruction sets, and multicore CPUs via OpenMP. To demonstrate the advantages of a common API, we have incorporated the library into several popular phylogenetic software packages. The BEAGLE library is free open source software licensed under the Lesser GPL and available from http://beagle-lib.googlecode.com. An example client program is available as public domain software.","",""
140,"Daniel L. Ayres, Michael P Cummings, G. Baele, Aaron E Darling, Paul O Lewis, D. Swofford, J. Huelsenbeck, P. Lemey, A. Rambaut, M. Suchard","BEAGLE 3: Improved Performance, Scaling, and Usability for a High-Performance Computing Library for Statistical Phylogenetics",2019,"","","","",973,"2024-08-22 15:04:59","","10.1093/sysbio/syz020","","",,,,,140,28.00,14,10,5,"Abstract BEAGLE is a high-performance likelihood-calculation library for phylogenetic inference. The BEAGLE library defines a simple, but flexible, application programming interface (API), and includes a collection of efficient implementations for calculation under a variety of evolutionary models on different hardware devices. The library has been integrated into recent versions of popular phylogenetics software packages including BEAST and MrBayes and has been widely used across a diverse range of evolutionary studies. Here, we present BEAGLE 3 with new parallel implementations, increased performance for challenging data sets, improved scalability, and better usability. We have added new OpenCL and central processing unit-threaded implementations to the library, allowing the effective utilization of a wider range of modern hardware. Further, we have extended the API and library to support concurrent computation of independent partial likelihood arrays, for increased performance of nucleotide-model analyses with greater flexibility of data partitioning. For better scalability and usability, we have improved how phylogenetic software packages use BEAGLE in multi-GPU (graphics processing unit) and cluster environments, and introduced an automated method to select the fastest device given the data set, evolutionary model, and hardware. For application developers who wish to integrate the library, we also have developed an online tutorial. To evaluate the effect of the improvements, we ran a variety of benchmarks on state-of-the-art hardware. For a partitioned exemplar analysis, we observe run-time performance improvements as high as 5.9-fold over our previous GPU implementation. BEAGLE 3 is free, open-source software licensed under the Lesser GPL and available at https://beagle-dev.github.io.","",""
174,"Daniel Leithinger, H. Ishii","Relief: a scalable actuated shape display",2010,"","","","",727,"2024-08-22 15:04:59","","10.1145/1709886.1709928","","",,,,,174,12.43,87,2,14,"Relief is an actuated tabletop display, which is able to render and animate three-dimensional shapes with a malleable surface. It allows users to experience and form digital models like geographical terrain in an intuitive manner. The tabletop surface is actuated by an array of 120 motorized pins, which are controlled with a low-cost, scalable platform built upon open-source hardware and software tools. Each pin can be addressed individually and senses user input like pulling and pushing.","",""
48,"Daniel Petrisko, Farzam Gilani, Mark Wyse, Dai Cheol Jung, S. Davidson, Paul Gao, Chun Zhao, Zahra Azad, Sadullah Canakci, Bandhav Veluri, Tavio Guarino, A. Joshi, M. Oskin, M. Taylor","BlackParrot: An Agile Open-Source RISC-V Multicore for Accelerator SoCs",2020,"","","","",191,"2024-08-22 15:04:59","","10.1109/MM.2020.2996145","","",,,,,48,12.00,5,14,4,"This article introduces BlackParrot, which aims to be the default open-source, Linux-capable, cache-coherent, 64-bit RISC-V multicore used by the world. In executing this goal, our research aims to advance the world's knowledge about the “software engineering of hardware.” Although originally bootstrapped by the University of Washington and Boston University via DARPA funding, BlackParrot strives to be community driven and infrastructure agnostic; a multicore which is Pareto optimal in terms of power, performance, area, and complexity. In order to ensure BlackParrot is easy to use, extend, and, most importantly, trust, development is guided by three core principles: Be Tiny, Be Modular, and Be Friendly. Development efforts have prioritized the use of intentional interfaces and modularity and silicon validation as first-order design metrics, so that users can quickly get started and trust that their design will perform as expected when deployed. BlackParrot has been validated in a GlobalFoundries 12-nm FinFET tapeout. BlackParrot is ideal as a standalone Linux processor or as a malleable fabric for an agile accelerator SoC design flow.","",""
41,"Daniele Palossi, Francesco Conti, L. Benini","An Open Source and Open Hardware Deep Learning-Powered Visual Navigation Engine for Autonomous Nano-UAVs",2019,"","","","",120,"2024-08-22 15:04:59","","10.1109/DCOSS.2019.00111","","",,,,,41,8.20,14,3,5,"Nano-size unmanned aerial vehicles (UAVs), with few centimeters of diameter and sub-10 Watts of total power budget, have so far been considered incapable of running sophisticated visual-based autonomous navigation software without external aid from base-stations, ad-hoc local positioning infrastructure, and powerful external computation servers. In this work, we present what is, to the best of our knowledge, the first 27g nano-UAV system able to run aboard an end-to-end, closed-loop visual pipeline for autonomous navigation based on a state-of-the-art deep-learning algorithm, built upon the open-source CrazyFlie 2.0 nano-quadrotor. Our visual navigation engine is enabled by the combination of an ultra-low power computing device (the GAP8 system-on-chip) with a novel methodology for the deployment of deep convolutional neural networks (CNNs). We enable onboard real-time execution of a state-of-the-art deep CNN at up to 18Hz. Field experiments demonstrate that the system's high responsiveness prevents collisions with unexpected dynamic obstacles up to a flight speed of 1.5m/s. In addition, we also demonstrate the capability of our visual navigation engine of fully autonomous indoor navigation on a 113m previously unseen path. To share our key findings with the embedded and robotics communities and foster further developments in autonomous nano-UAVs, we publicly release all our code, datasets, and trained networks.","",""
31,"David A. Cock, Abishek Ramdas, D. Schwyn, Michael J. Giardino, A. Turowski, Zhenhao He, Nora Hossle, Dario Korolija, Melissa Licciardello, K. Martšenko, Reto Achermann, G. Alonso, Timothy Roscoe","Enzian: an open, general, CPU/FPGA platform for systems software research",2022,"","","","",896,"2024-08-22 15:04:59","","10.1145/3503222.3507742","","",,,,,31,15.50,3,13,2,"Hybrid computing platforms, comprising CPU cores and FPGA logic, are increasingly used for accelerating data-intensive workloads in cloud deployments, and are a growing topic of interest in systems research. However, from a research perspective, existing hardware platforms are limited: they are often optimized for concrete, narrow use-cases and, therefore lack the flexibility needed to explore other applications and configurations. We show that a research group can design and build a more general, open, and affordable hardware platform for hybrid systems research. The platform, Enzian, is capable of duplicating the functionality of existing CPU/FPGA systems with comparable performance but in an open, flexible system. It couples a large FPGA with a server-class CPU in an asymmetric cache-coherent NUMA system. Enzian also enables research not possible with existing hybrid platforms, through explicit access to coherence messages, extensive thermal and power instrumentation, and an open, programmable baseboard management processor. Enzian is already being used in multiple projects, is open source (both hardware and software), and available for remote use. We present the design principles of Enzian, the challenges in building it, and evaluate it with a range of existing research use-cases alongside other, more specialized platforms, as well as demonstrating research not possible on existing platforms.","",""
28,"David Mallasén, Raul Murillo, Alberto A. Del Barrio, G. Botella, L. Piñuel, Manuel Prieto-Matias","PERCIVAL: Open-Source Posit RISC-V Core With Quire Capability",2021,"","","","",170,"2024-08-22 15:04:59","","10.1109/TETC.2022.3187199","","",,,,,28,9.33,5,6,3,"The posit representation for real numbers is an alternative to the ubiquitous IEEE 754 floating-point standard. In this work, we present PERCIVAL, an application-level posit RISC-V core based on CVA6 that can execute all posit instructions, including the quire fused operations. This solves the obstacle encountered by previous works, which only included partial posit support or which had to emulate posits in software. In addition, Xposit, a RISC-V extension for posit instructions is incorporated into LLVM. Therefore, PERCIVAL is the first work that integrates the complete posit instruction set in hardware. These elements allow for the native execution of posit instructions as well as the standard floating-point ones, further permitting the comparison of these representations. FPGA and ASIC synthesis show the hardware cost of implementing 32-bit posits and highlight the significant overhead of including a quire accumulator. However, results show that the quire enables a more accurate execution of dot products. In general matrix multiplications, the accuracy error is reduced up to 4 orders of magnitude. Furthermore, performance comparisons show that these accuracy improvements do not hinder their execution, as posits run as fast as single-precision floats and exhibit better timing than double-precision floats, thus potentially providing an alternative representation.","",""
11,"David Miguel Susano Pinto, M. Phillips, N. Hall, Julio Mateos-Langerak, Danail Stoychev, Tiago Susano Pinto, M. Booth, I. Davis, I. Dobbie","Python-Microscope – a new open-source Python library for the control of microscopes",2021,"","","","",177,"2024-08-22 15:04:59","","10.1101/2021.01.18.427171","","",,,,,11,3.67,1,9,3,"Custom built microscopes often require control of multiple hardware devices and precise hardware coordination. It is also desirable to have a control solution that is scalable to more complex systems and translatable between components from different manufacturers. Here we report Python-Microscope, a free and open source Python library for high performance control of arbitrarily complex and scalable custom microscope systems. Python-Microscope offers simple to use Python-based tools to control microscopes, abstracting differences between physical devices by providing a defined interface for different device types. These include cameras, filter wheels, light sources, deformable mirrors, and stages. Concrete implementations are provided for a range of specific hardware and a framework is in place for further expansion. Python-Microscope supports the distribution of devices over multiple computers while maintaining synchronisation via highly precise hardware triggers. We discuss the architecture choices of Python-Microscope that overcome the performance problems often raised against Python and demonstrate the different use cases that drove its design: its integration in user facing projects, namely in the Microscope-Cockpit project; in controlling complex microscopes at high speed while using the Python programming language; and as a microscope simulation tool for software development.","",""
71,"David Schrammel, Samuel Weiser, Stefan Steinegger, Martin Schwarzl, Michael Schwarz, S. Mangard, D. Gruss","Donky: Domain Keys - Efficient In-Process Isolation for RISC-V and x86",2020,"","","","",603,"2024-08-22 15:04:59","","","","",,,,,71,17.75,10,7,4,"Efﬁcient and secure in-process isolation is in great demand, as evidenced in the shift towards JavaScript and the recent re-vival of memory protection keys. Yet, state-of-the-art systems do not offer strong security or struggle with frequent domain crossings and oftentimes intrusive kernel modiﬁcations. We propose Donky, an efﬁcient hardware-software co-design for strong in-process isolation based on dynamic memory protection domains. The two components of our design are a secure software framework and a non-intrusive hardware extension. We facilitate domain switches entirely in userspace, thus minimizing switching overhead as well as kernel complexity. We show the versatility of Donky in three realistic use cases, secure V8 sandboxing, software vaults, and untrusted third-party libraries. We provide an open-source implementation on a RISC-V Ariane CPU and an Intel-MPK-based emulation mode for x86. We evaluate the security and performance of our implementation for RISC-V synthesized on an FPGA. We also evaluate the performance on x86 and show why our new design is more secure than Intel MPK. Donky does not impede the runtime of in-domain computation. Cross-domain switches are 16–116x faster than regular process context switches. Fully protecting the mbedTLS cryptographic operations has a 4 % overhead.","",""
70,"David Shah, Eddie Hung, C. Wolf, Serge Bazanski, D. Gisselquist, Miodrag Milanovic","Yosys+nextpnr: An Open Source Framework from Verilog to Bitstream for Commercial FPGAs",2019,"","","","",215,"2024-08-22 15:04:59","","10.1109/FCCM.2019.00010","","",,,,,70,14.00,12,6,5,"This paper introduces a fully free and open source software (FOSS) architecture-neutral FPGA framework comprising of Yosys for Verilog synthesis, and nextpnr for placement, routing, and bitstream generation. Currently, this flow supports two commercially available FPGA families, Lattice iCE40 (up to 8K logic elements) and Lattice ECP5 (up to 85K elements) and has been hardware-proven for custom-computing machines including a low-power neural-network accelerator and an OpenRISC system-on-chip capable of booting Linux. Both Yosys and nextpnr have been engineered in a highly flexible manner to support many of the features present in modern FPGAs by separating architecture-specific details from the common mapping algorithms.This framework is demonstrated on a longest-path case study to find an atypical single source-sink path occupying up to 45% of all on-chip wiring.","",""
79,"David Whitney, Eric Rosen, D. Ullman, Elizabeth Phillips, Stefanie Tellex","ROS Reality: A Virtual Reality Framework Using Consumer-Grade Hardware for ROS-Enabled Robots",2018,"","","","",416,"2024-08-22 15:04:59","","10.1109/IROS.2018.8593513","","",,,,,79,13.17,16,5,6,"Virtual reality (VR)systems let users intuitively interact with 3D environments and have been used extensively for robotic teleoperation tasks. While more immersive than their 2D counterparts, early VR systems were expensive and required specialized hardware. Fortunately, there has been a recent proliferation of consumer-grade VR systems at affordable price points. These systems are inexpensive, relatively portable, and can be integrated into existing robotic frameworks. Our group has designed a VR teleoperation package for the Robot Operating System (ROS), ROS Reality, that can be easily integrated into such frameworks. ROS Reality is an open-source, over-the-Internet teleoperation interface between any ROS-enabled robot and any Unity-compatible VR headset. We completed a pilot study to test the efficacy of our system, with expert human users controlling a Baxter robot via ROS Reality to complete 24 dexterous manipulation tasks, compared to the same users controlling the robot via direct kinesthetic handling. This study provides insight into the feasibility of robotic teleoperation tasks in VR with current consumer-grade resources and exposes issues that need to be addressed in these VR systems. In addition, this paper presents a description of ROS Reality, its components, and architecture. We hope this system will be adopted by other research groups to allow for easy integration of VR teleoperated robots into future experiments.","",""
38,"David Y. Hancock, Jeremy Fischer, John Michael Lowe, Winona Snapp-Childs, Marlon Pierce, Suresh Marru, J. E. Coulter, Matthew W. Vaughn, Brian Beck, Nirav Merchant, Edwin Skidmore, Gwen Jacobs","Jetstream2: Accelerating cloud computing via Jetstream",2021,"","","","",591,"2024-08-22 15:04:59","","10.1145/3437359.3465565","","",,,,,38,12.67,4,12,3,"Jetstream2 will be a category I production cloud resource that is part of the National Science Foundation’s Innovative HPC Program. The project’s aim is to accelerate science and engineering by providing “on-demand” programmable infrastructure built around a core system at Indiana University and four regional sites. Jetstream2 is an evolution of the Jetstream platform, which functions primarily as an Infrastructure-as-a-Service cloud. The lessons learned in cloud architecture, distributed storage, and container orchestration have inspired changes in both hardware and software for Jetstream2. These lessons have wide implications as institutions converge HPC and cloud technology while building on prior work when deploying their own cloud environments. Jetstream2’s next-generation hardware, robust open-source software, and enhanced virtualization will provide a significant platform to further cloud adoption within the US research and education communities.","",""
38,"Davide Giri, Kuan-Lin Chiu, G. D. Guglielmo, Paolo Mantovani, L. Carloni","ESP4ML: Platform-Based Design of Systems-on-Chip for Embedded Machine Learning",2020,"","","","",632,"2024-08-22 15:04:59","","10.23919/DATE48585.2020.9116317","","",,,,,38,9.50,8,5,4,"We present ESP4ML, an open-source system-level design flow to build and program SoC architectures for embedded applications that require the hardware acceleration of machine learning and signal processing algorithms. We realized ESP4ML by combining two established open-source projects (ESP and HLS4ML) into a new, fully-automated design flow. For the SoC integration of accelerators generated by HLS4ML, we designed a set of new parameterized interface circuits synthesizable with high-level synthesis. For accelerator configuration and management, we developed an embedded software runtime system on top of Linux. With this HW/SW layer, we addressed the challenge of dynamically shaping the data traffic on a network-on-chip to activate and support the reconfigurable pipelines of accelerators that are needed by the application workloads currently running on the SoC. We demonstrate our vertically-integrated contributions with the FPGA-based implementations of complete SoC instances booting Linux and executing computer-vision applications that process images taken from the Google Street View database","",""
15,"Davide Giri, Kuan-Lin Chiu, Guy Eichler, Paolo Mantovani, L. Carloni","Accelerator Integration for Open-Source SoC Design",2021,"","","","",163,"2024-08-22 15:04:59","","10.1109/MM.2021.3073893","","",,,,,15,5.00,3,5,3,"The open-source hardware community contributes a variety of processors and accelerators, but combining them effectively into a complete System-on-Chip (SoC) remains a difficult task. We present a design flow for the seamless hardware and software integration of accelerators into a complete SoC and for its evaluation through rapid FPGA-based prototyping. By leveraging ESP, our open-source platform for agile heterogeneous SoC design, we demonstrate FPGA prototypes of various SoC designs, featuring the NVIDIA Deep Learning Accelerator and the Ariane RISC-V 64-bit processor core.","",""
31,"Dayeol Lee, David Kohlbrenner, Shweta Shinde, D. Song, K. Asanović","Keystone: An Open Framework for Architecting TEEs",2019,"","","","",486,"2024-08-22 15:04:59","","","","",,,,,31,6.20,6,5,5,"Trusted execution environments (TEEs) are being used in all the devices from embedded sensors to cloud servers and encompass a range of cost, power constraints, and security threat model choices. On the other hand, each of the current vendor-specific TEEs makes a fixed set of trade-offs with little room for customization. We present Keystone -- the first open-source framework for building customized TEEs. Keystone uses simple abstractions provided by the hardware such as memory isolation and a programmable layer underneath untrusted components (e.g., OS). We build reusable TEE core primitives from these abstractions while allowing platform-specific modifications and application features. We showcase how Keystone-based TEEs run on unmodified RISC-V hardware and demonstrate the strengths of our design in terms of security, TCB size, execution of a range of benchmarks, applications, kernels, and deployment models.","",""
340,"Dayeol Lee, David Kohlbrenner, Shweta Shinde, K. Asanović, D. Song","Keystone: an open framework for architecting trusted execution environments",2020,"","","","",356,"2024-08-22 15:04:59","","10.1145/3342195.3387532","","",,,,,340,85.00,68,5,4,"Trusted execution environments (TEEs) see rising use in devices from embedded sensors to cloud servers and encompass a range of cost, power constraints, and security threat model choices. On the other hand, each of the current vendor-specific TEEs makes a fixed set of trade-offs with little room for customization. We present Keystone---the first open-source framework for building customized TEEs. Keystone uses simple abstractions provided by the hardware such as memory isolation and a programmable layer underneath untrusted components (e.g., OS). We build reusable TEE core primitives from these abstractions while allowing platform-specific modifications and flexible feature choices. We showcase how Keystone-based TEEs run on unmodified RISC-V hardware and demonstrate the strengths of our design in terms of security, TCB size, execution of a range of benchmarks, applications, kernels, and deployment models.","",""
16,"Deeksha Dangwal, Georgios Tzimpragos, T. Sherwood","Agile Hardware Development and Instrumentation With PyRTL",2020,"","","","",410,"2024-08-22 15:04:59","","10.1109/MM.2020.2997704","","",,,,,16,4.00,5,3,4,"Domain-specific architectures have emerged as a promising solution to meet growing technology demands but with this comes an urgent need to improve hardware methodologies which often have long design cycles, rely on closed source and expensive tools, and have high nonrecurring engineering costs. In this article, we describe how our work developing PyRTL, an open source Python-based Hardware Development Toolkit, has proven to be a powerful agile hardware development and analysis tool with the features to improve current methodologies. We describe how this toolkit-driven approach encourages hardware reuse using modern object-oriented programming features and present an examination of its custom intermediate representation for hardware debugging, analysis, and instrumentation. This approach has proven useful in supporting fast design iteration in a variety of domains including cryptography and machine learning.","",""
106,"Delmer Nagy, Areej M. Yassin, Anol Bhattacherjee","Organizational adoption of open source software: barriers and remedies",2010,"","","","",902,"2024-08-22 15:04:59","","10.1145/1666420.1666457","","",,,,,106,7.57,35,3,14,"Introduction  Perhaps the business case for adopting open source software is an easy sell. After all, the software is free, and can be simply downloaded from the Internet and installed or customized as needed. Organizations interested in reducing the licensing fees of proprietary software, while also avoiding the penalties and legal liabilities associated with their illegal use, can definitely consider open source software a plausible alternative. However, less obvious than the cost savings but equally important are the barriers (""hidden costs"") of adopting open source software.  Open source software has created considerable excitement in the business world over the last decade. These applications, designed by groups of volunteer software developers, have the potential to break the current dominance of proprietary software and restrictive licenses for many business applications, reduce software development time and improve software quality, and most importantly, bring much needed software applications within the reach of individuals and small businesses, who cannot otherwise afford such software. Further, unlike proprietary software, open source software applications make their source code available for free, which can be customized to fit the unique needs of specific organizations.  Many organizations have caught on to open source software and realized significant cost savings in technology expenditure as a result. For instance, Cendant Travel Distribution Services replaced a $100 million mainframe system with a $2.5 million system running on 144 Linux servers. Amazon.com cut its technology expenditure from $71 million to $54 million by switching to open source applications. Sabre Holdings saved tens of millions of dollars by adopting MySQL, an open source database product. Though the basic open source software is free, the prospect of paid ancillary products and services such as hardware and consulting has motivated many erstwhile proprietary technology vendors such as Hewlett-Packard, IBM, and Sun Microsystems to embrace open source software and offer value-added services based on such software.  Table 1 shows an estimated range of the current global market share of several of today's open source software applications. This table shows that though the open source market is large and growing for some application domains such as Web server (such as Apache), server operating systems (such as Linux Server), database server (such as MySQL), electronic mail client (such as Sendmail), and Internet browser (such as Firefox), it is lagging behind its proprietary counterparts in other domains such as client operating systems (such as Linux Workstation), office productivity software (such as OpenOffice), and enterprise resource planning (ERP) systems. This pattern suggests that there may be significant barriers to open source software adoption among some sectors of the user populations.  It is widely believed that proprietary software vendors often use fear, uncertainty and doubt to undermine and cut the market potential of their open source competitors. The objective of this paper is to reduce that uncertainty via a candid discussion of the barriers confronting open source software adoption and potential remedies to those barriers. These barriers and their remedies, summarized in Table 2, are discussed in detail.","",""
65,"Denis Foo Kune, John Kölndorfer, Nicholas Hopper, Yongdae Kim","Location leaks over the GSM air interface",2012,"","","","",775,"2024-08-22 15:04:59","","","","",,,,,65,5.42,16,4,12,"Cellular phones have become a ubiquitous means of communications with over 5 billion users worldwide in 2010, of which 80% are GSM subscribers. Due to their use of the wireless medium and their mobile nature, those phones listen to broadcast communications that could reveal their physical location to a passive adversary. In this paper, we investigate techniques to test if a user is present within a small area, or absent from a large area by simply listening on the broadcast GSM channels. With a combination of readily available hardware and open source software, we demonstrate practical location test attacks that include circumventing the temporary identifier designed to protect the identity of the end user. Finally we propose solutions that would improve the location privacy of users with low system impact.","",""
51,"Dennis Edler, Adalbert Husar, Julian Keil, M. Vetter, F. Dickmann","Virtual Reality (VR) and Open Source Software: A Workflow for Constructing an Interactive Cartographic VR Environment to Explore Urban Landscapes",2018,"","","","",248,"2024-08-22 15:04:59","","10.1007/BF03545339","","",,,,,51,8.50,10,5,6,"","",""
19,"Dhwani Trivedi, Joshua M. Pearce","Open source 3-D printed nutating mixer",2017,"","","","",285,"2024-08-22 15:04:59","","10.3390/APP7090942","","",,,,,19,2.71,10,2,7,"As the open source development of additive manufacturing has led to low-cost desktop three-dimensional (3-D) printing, a number of scientists throughout the world have begun to share digital designs of free and open source scientific hardware. Open source scientific hardware enables custom experimentation, laboratory control, rapid upgrading, transparent maintenance, and lower costs in general. To aid in this trend, this study describes the development, design, assembly, and operation of a 3-D printable open source desktop nutating mixer, which provides a fixed 20° platform tilt angle for a gentle three-dimensional (gyrating) agitation of chemical or biological samples (e.g., DNA or blood samples) without foam formation. The custom components for the nutating mixer are designed using open source FreeCAD software to enable customization. All of the non-readily available components can be fabricated with a low-cost RepRap 3-D printer using an open source software tool chain from common thermoplastics. All of the designs are open sourced and can be configured to add more functionality to the equipment in the future. It is relatively easy to assemble and is accessible to both the science education of younger students as well as state-of-the-art research laboratories. Overall, the open source nutating mixer can be fabricated with US$37 in parts, which is 1/10th of the cost of proprietary nutating mixers with similar capabilities. The open source nature of the device allow it to be easily repaired or upgraded with digital files, as well as to accommodate custom sample sizes and mixing velocities with minimal additional costs.","",""
48,"Dimitri Fichou, G. Morlock","Open-Source-Based 3D Printing of Thin Silica Gel Layers in Planar Chromatography.",2017,"","","","",271,"2024-08-22 15:04:59","","10.1021/acs.analchem.6b04813","","",,,,,48,6.86,24,2,7,"On the basis of open-source packages, 3D printing of thin silica gel layers is demonstrated as proof-of-principle for use in planar chromatography. A slurry doser was designed to replace the plastic extruder of an open-source Prusa i3 printer. The optimal parameters for 3D printing of layers were studied, and the planar chromatographic separations on these printed layers were successfully demonstrated with a mixture of dyes. The layer printing process was fast. For printing a 0.2 mm layer on a 10 cm × 10 cm format, it took less than 5 min. It was affordable, i.e., the running costs for producing such a plate were less than 0.25 Euro and the investment costs for the modified hardware were 630 Euro. This approach demonstrated not only the potential of the 3D printing environment in planar chromatography but also opened new avenues and new perspectives for tailor-made plates, not only with regard to layer materials and their combinations (gradient plates) but also with regard to different layer shapes and patterns. As such an example, separations on a printed plane layer were compared with those obtained from a printed channeled layer. For the latter, 40 channels were printed in parallel on a 10 cm × 10 cm format for the separation of 40 samples. For producing such a channeled plate, the running costs were below 0.04 Euro and the printing process took only 2 min. All modifications of the device and software were released open-source to encourage reuse and improvements and to stimulate the users to contribute to this technology. By this proof-of-principle, another asset was demonstrated to be integrated into the Office Chromatography concept, in which all relevant steps for online miniaturized planar chromatography are performed by a single device.","",""
66,"Dimitrios Amaxilatis, O. Akrivopoulos, Georgios Mylonas, I. Chatzigiannakis","An IoT-Based Solution for Monitoring a Fleet of Educational Buildings Focusing on Energy Efficiency",2017,"","","","",695,"2024-08-22 15:04:59","","10.3390/s17102296","","",,,,,66,9.43,17,4,7,"Raising awareness among young people and changing their behaviour and habits concerning energy usage is key to achieving sustained energy saving. Additionally, young people are very sensitive to environmental protection so raising awareness among children is much easier than with any other group of citizens. This work examines ways to create an innovative Information & Communication Technologies (ICT) ecosystem (including web-based, mobile, social and sensing elements) tailored specifically for school environments, taking into account both the users (faculty, staff, students, parents) and school buildings, thus motivating and supporting young citizens’ behavioural change to achieve greater energy efficiency. A mixture of open-source IoT hardware and proprietary platforms on the infrastructure level, are currently being utilized for monitoring a fleet of 18 educational buildings across 3 countries, comprising over 700 IoT monitoring points. Hereon presented is the system’s high-level architecture, as well as several aspects of its implementation, related to the application domain of educational building monitoring and energy efficiency. The system is developed based on open-source technologies and services in order to make it capable of providing open IT-infrastructure and support from different commercial hardware/sensor vendors as well as open-source solutions. The system presented can be used to develop and offer new app-based solutions that can be used either for educational purposes or for managing the energy efficiency of the building. The system is replicable and adaptable to settings that may be different than the scenarios envisioned here (e.g., targeting different climate zones), different IT infrastructures and can be easily extended to accommodate integration with other systems. The overall performance of the system is evaluated in real-world environment in terms of scalability, responsiveness and simplicity.","",""
175,"Dimitrios Lymberopoulos, A. Savvides","XYZ: a motion-enabled, power aware sensor node platform for distributed sensor network applications",2005,"","","","",778,"2024-08-22 15:04:59","","10.1109/IPSN.2005.1440970","","",,,,,175,9.21,88,2,19,"This paper describes the XYZ, a new open-source sensing platform specifically designed to support our experimental research in mobile sensor networks. The XYZ node is designed around the OKI ML67Q500x ARM THUMB Microprocessor and the IEEE 802.15.4 compliant CC2420 radio from Chipcon. Its new features include support for two different CPU sleep modes and a long-term ultra low power sleep mode for the entire node. This allows the XYZ and its peripheral boards to transition into deep sleep for extended time intervals. To support mobility hardware control and computations, XYZ supports a wide dynamic range and power options. In low power configuration the node resembles existing small low power nodes. When needed, the node can scale up its resources to perform more powerful computations. Mobility is enabled with an additional accessory board that allows the node to move along a horizontal string. In this paper we provide an overview of the XYZ architecture and provide an insightful power characterization of the different operational modes to allow the users to optimize their platforms for power.","",""
267,"Dimitrios Stamoulis, Ruizhou Ding, Di Wang, Dimitrios Lymberopoulos, B. Priyantha, Jie Liu, Diana Marculescu","Single-Path NAS: Designing Hardware-Efficient ConvNets in less than 4 Hours",2019,"","","","",910,"2024-08-22 15:04:59","","10.1007/978-3-030-46147-8_29","","",,,,,267,53.40,38,7,5,"","",""
61,"Dong Wang, Ke Xu, Diankun Jiang","PipeCNN: An OpenCL-based open-source FPGA accelerator for convolution neural networks",2017,"","","","",266,"2024-08-22 15:04:59","","10.1109/FPT.2017.8280160","","",,,,,61,8.71,20,3,7,"Convolutional neural networks (CNNs) have been employed in many applications, such as image classification, video analysis and speech recognition. Being compute-intensive, CNNs are widely accelerated by GPUs with high power dissipations. Recently, studies were carried out exploiting FPGA as CNN accelerator because of its reconfigurability and advantage on energy efficiency over GPU, especially when OpenCL-based high-level synthesis tools are now available providing fast verification and implementation flows. In this paper, we demonstrate PipeCNN — an efficient FPGA accelerator that can be implemented on a variety of FPGA platforms with reconfigurable performance and cost. The PipeCNN project is openly accessible, and thus can be used either by researchers as a generic framework to explore new hardware architectures or by teachers as a off-the-self design example for any academic courses related to FPGAs.","",""
18,"Dongheng Li, Derrick J. Parkhurst","openEyes: an open-hardware open-source system for low-cost eye tracking",2006,"","","","",334,"2024-08-22 15:04:59","","10.1080/09500340600619072","","",,,,,18,1.00,9,2,18,"Eye tracking has long held the promise of being a useful methodology for human computer interaction. However, a number of barriers have stood in the way of the integration of eye tracking into everyday applications, including the intrusiveness, robustness, availability and price of eye-tracking systems. To lower these barriers, we have developed the openEyes system. The system consists of an open-hardware design for a digital eye tracker that can be built from low-cost off-the-shelf components, and a set of open-source software tools for digital image capture, manipulation, and analysis in eye-tracking applications. We expect that the availability of this system will facilitate the development of eye-tracking applications and the eventual integration of eye tracking into the next generation of everyday human computer interfaces. We discuss the methods and technical challenges of low-cost eye tracking as well as the design decisions that produced our current system.","",""
272,"Dongheng Li, J. Babcock, Derrick J. Parkhurst","openEyes: a low-cost head-mounted eye-tracking solution",2006,"","","","",726,"2024-08-22 15:04:59","","10.1145/1117309.1117350","","",,,,,272,15.11,91,3,18,"Eye tracking has long held the promise of being a useful methodology for human computer interaction. However, a number of barriers have stood in the way of the integration of eye tracking into everyday applications, including the intrusiveness, robustness, availability, and price of eye-tracking systems. To lower these barriers, we have developed the openEyes system. The system consists of an open-hardware design for a digital eye tracker that can be built from low-cost off-the-shelf components, and a set of open-source software tools for digital image capture, manipulation, and analysis in eye-tracking applications. We expect that the availability of this system will facilitate the development of eye-tracking applications and the eventual integration of eye tracking into the next generation of everyday human computer interfaces. We discuss the methods and technical challenges of low-cost eye tracking as well as the design decisions that produced our current system.","",""
58,"Donglin Zhuang, Xingyao Zhang, S. Song, Sara Hooker","Randomness In Neural Network Training: Characterizing The Impact of Tooling",2021,"","","","",576,"2024-08-22 15:04:59","","","","",,,,,58,19.33,15,4,3,"The quest for determinism in machine learning has disproportionately focused on characterizing the impact of noise introduced by algorithmic design choices. In this work, we address a less well understood and studied question: how does our choice of tooling introduce randomness to deep neural network training. We conduct large scale experiments across different types of hardware, accelerators, state of art networks, and open-source datasets, to characterize how tooling choices contribute to the level of non-determinism in a system, the impact of said non-determinism, and the cost of eliminating different sources of noise. Our findings are surprising, and suggest that the impact of non-determinism in nuanced. While top-line metrics such as top-1 accuracy are not noticeably impacted, model performance on certain parts of the data distribution is far more sensitive to the introduction of randomness. Our results suggest that deterministic tooling is critical for AI safety. However, we also find that the cost of ensuring determinism varies dramatically between neural network architectures and hardware types, e.g., with overhead up to $746\%$, $241\%$, and $196\%$ on a spectrum of widely used GPU accelerator architectures, relative to non-deterministic training. The source code used in this paper is available at https://github.com/usyd-fsalab/NeuralNetworkRandomness.","",""
14,"Dragan Mlakić, S. Nikolovski, Emir Alibašić","Designing Automatic Meter Reading System Using Open Source Hardware and Software",2017,"","","","",62,"2024-08-22 15:04:59","","10.11591/IJECE.V7I6.PP3282-3291","","",,,,,14,2.00,5,3,7,"The importance of quality of the measured values is very dependent on the device that measures these values: the size of the sample, the time of measurement, periods of measurement, the mobility and the robustness of the device, etc. Contemporary devices intended for the measurement of physical quantities that are on the market vary in price, as well as and the quality of the measured values. The rule ""the more expensive the better"" is not necessarily always a rule that is valid because it all depends on the characteristics and capabilities of the device, and the customer’s needs. In this paper, a device based on ""Open Source"" components of hardware and software will be presented. Device was used to measure voltages and currents on low voltage networks, on which a virtually unlimited number of sensors can be added, and the device is assembled of components available on electronic components Internet.","",""
183,"E. Baccelli, Cenk Gündoğan, O. Hahm, Peter Kietzmann, Martine S. Lenders, Hauke Petersen, K. Schleiser, T. Schmidt, Matthias Wählisch","RIOT: An Open Source Operating System for Low-End Embedded Devices in the IoT",2018,"","","","",236,"2024-08-22 15:04:59","","10.1109/JIOT.2018.2815038","","",,,,,183,30.50,20,9,6,"As the Internet of Things (IoT) emerges, compact operating systems (OSs) are required on low-end devices to ease development and portability of IoT applications. RIOT is a prominent free and open source OS in this space. In this paper, we provide the first comprehensive overview of RIOT. We cover the key components of interest to potential developers and users: the kernel, hardware abstraction, and software modularity, both conceptually and in practice for various example configurations. We explain operational aspects like system boot-up, timers, power management, and the use of networking. Finally, the relevant APIs as exposed by the OS are discussed along with the larger ecosystem around RIOT, including development and open source community aspects.","",""
22,"E. Berdahl, Alexandros Kontogeorgakopoulos","The FireFader: Simple, Open-Source, and Reconfigurable Haptic Force Feedback for Musicians",2013,"","","","",361,"2024-08-22 15:04:59","","10.1162/COMJ_a_00166","","",,,,,22,2.00,11,2,11,"The FireFader is a simple haptic force-feedback device that is optimized for introducing musicians to haptics. It is based upon a single-degree-of-freedom potentiometer fader coupled to a DC motor, also known as a “motorized fader.” A light is connected in parallel with the motor to help communicate the force's strength visually. The FireFader consists of only open-source hardware and open-source software elements. Consequently, it is relatively easy for users to repurpose it into new projects involving varying kinds and numbers of motors and sensors. An open-source device driver for the FireFader allows it to be linked to a computer via USB so that the computer can perform the feedback control calculations. For example, the computer can simulate the acoustics of a virtual musical instrument to concurrently synthesize sound and calculate the motor force as a function of the fader position. The serial connection over USB increases the latency of the control signal compared to embedded implementations, but the serial connection facilitates easier programming via the computer, and the force feedback can be automatically disabled when the user is not touching the fader. Some new devices derived from the FireFader design are presented.","",""
19,"E. Berdahl, Spencer Salazar, Myles Borins","Embedded Networking and Hardware-Accelerated Graphics with Satellite CCRMA",2013,"","","","",568,"2024-08-22 15:04:59","","10.5281/zenodo.1178476","","",,,,,19,1.73,6,3,11,"Satellite CCRMA is a platform for making embedded musical instruments and embedded installations. The project aims to help prototypes live longer by providing a complete prototyping platform in a single, small, and stand-alone embedded form factor. A set of scripts makes it easier for artists and beginning technical students to access powerful features, while advanced users enjoy the flexibility of the open-source software and open-source hardware platform. This paper focuses primarily on networking capabilities of Satellite CCRMA and new software for enabling interactive control of the hardware-accelerated graphical output. In addition, new results are presented showing that the Satellite CCRMA distribution allows the lifespan of the flash memory to be greatly increased in comparison with other embedded Linux distributions. Consequently, we believe that embedded instrument and installation designers will prefer using Satellite CCRMA for enhanced long-term reliability.","",""
51,"E. D. Bruijn","On the viability of the open source development model for the design of physical objects Lessons learned from the RepRap project",2010,"","","","",904,"2024-08-22 15:04:59","","","","",,,,,51,3.64,51,1,14,"While open source software development has been studied extensively, relatively little is known about the viability of the same development model for a physical object’s design. This thesis addresses this deficit by exploring the extent to which this model is viable for the development of physical objects. It starts with a review of the relevant literature on open source and user innovation communities followed by a case study and survey of the RepRap community. This community develops a digital fabrication system that can 3D print a large share of its own parts. This allows for a decentralized community to independently produce physical parts based on digital designs that are shared via the internet. Apart from improving the device, dedicated infrastructure was developed by user innovators. The survey reveals substantial adoption and development of 3D printer technology, comparable to the larger vendors in the industry. RepRap community members are spending between 145 and 182 full-time equivalents and have spent between 382,000 and 478,000 dollars on innovation alone. At the RepRap project’s 6 month doubling interval, it is entirely feasible that its adoption and disruptive levels of innovation will exceed that of the incumbent industry. Within the community there is a higher incidence in modifications of hardware than in software, and, surprisingly, hardware modifications are expected to be relatively easier for others to replicate. The level of collaboration is also higher for hardware than for software. Through Thingiverse, a web-based sharing platform originating from the RepRap project, 1,486 designs of physical objects in the last 6 months. Also, more than 10,000 objects were independently manufactured by its members’ machines. While already substantial, this level activity exhibits similar exponential growth characteristics. Many RepRap community members possess a fabrication capability that the average person does not have access to. While this does limit the present day generality of the case study findings, there are many reasons to expect a high likelihood of personal access to digital fabrication in the near future. The rapid development and adoption of increasingly affordable, yet more powerful and valuable fabrication technologies and the anti-rival logic of open design allow user-dominant collaborative development to have significant implications for the provisioning of goods in society. Finally, I provide a discussion of the implications and make suggestions for further research.","",""
49,"E. Damiani, C. Ardagna, Nabil El Ioini","Open Source Systems Security Certification",2008,"","","","",907,"2024-08-22 15:04:59","","10.1007/978-0-387-77324-7","","",,,,,49,3.06,16,3,16,"","",""
69,"E. Drezen, Guillaume Rizk, R. Chikhi, C. Deltel, C. Lemaitre, P. Peterlongo, D. Lavenier","GATB: Genome Assembly & Analysis Tool Box",2014,"","","","",713,"2024-08-22 15:04:59","","10.1093/bioinformatics/btu406","","",,,,,69,6.90,10,7,10,"Motivation: Efficient and fast next-generation sequencing (NGS) algorithms are essential to analyze the terabytes of data generated by the NGS machines. A serious bottleneck can be the design of such algorithms, as they require sophisticated data structures and advanced hardware implementation. Results: We propose an open-source library dedicated to genome assembly and analysis to fasten the process of developing efficient software. The library is based on a recent optimized de-Bruijn graph implementation allowing complex genomes to be processed on desktop computers using fast algorithms with low memory footprints. Availability and implementation: The GATB library is written in C++ and is available at the following Web site http://gatb.inria.fr under the A-GPL license. Contact: lavenier@irisa.fr Supplementary information: Supplementary data are available at Bioinformatics online.","",""
49,"E. Ebeid, Martin Skriver, Jie Jin","A Survey on Open-Source Flight Control Platforms of Unmanned Aerial Vehicle",2017,"","","","",259,"2024-08-22 15:04:59","","10.1109/DSD.2017.30","","",,,,,49,7.00,16,3,7,"Recently, Unmanned Aerial Vehicles (UAVs), socalled drones, have gotten a lot of attention in academic research and commercial applications due to their simple structure, ease of operations and low-cost hardware components. Flight controller, embedded electronic component, represents the core part of the drone. It aims at performing the main operations of the drone (e.g., autonomous control and navigation). There are various types of flight controllers and each of them has its own characteristics and features.This paper presents an extensive survey on the publicly available open-source flight controllers that can be used for academic research. The paper introduces the basics of UAV system with its components. The survey fully covers both hardware and software open-source flight controller platforms and compares their main features.","",""
32,"E. J. Davis, Michael Jones, D. Thiel, Steve Pauls","Using Open-Source, 3D Printable Optical Hardware To Enhance Student Learning in the Instrumental Analysis Laboratory",2018,"","","","",144,"2024-08-22 15:04:59","","10.1021/ACS.JCHEMED.7B00480","","",,,,,32,5.33,8,4,6,"Additive manufacturing (3D printing) is a technology with near-unlimited potential for the chemical educator. However, its adoption into higher education has been limited by the dual requirements of expertise in 3D printing and 3D computer-aided design (CAD). Thus, its reported utilization in the chemistry curriculum has been within the creation of 3D models for the macroscopic visualization of molecular models and processes. With the commercialization of inexpensive 3D printers, we seek to provide a series of optical mounts and tools for use in chemical research or education by designing systems which may be mounted on a breadboard and used to construct chemical instrumentation. These designs include mounts for cylindrical lenses or mirrors with 0.5, 1, and 2 in. diameters, 0.5 in. diffraction gratings, an adjustable optical slit, cuvette holders, stepper motor (NEMA 17) adapters, and a modular, 3D printed breadboard. All designs were created using Solidworks CAD, and have been provided in Supporting Inf...","",""
20,"E. Papatheofanous, D. Reisis, K. Nikitopoulos","LDPC Hardware Acceleration in 5G Open Radio Access Network Platforms",2021,"","","","",254,"2024-08-22 15:04:59","","10.1109/ACCESS.2021.3127039","","",,,,,20,6.67,7,3,3,"The Open Radio Access Network (RAN) concept has been gaining wide acceptance in recent network architectures, including 5G New Radio (NR) network deployments. Current Open RAN radio implementation efforts, aim at integrating several white-box hardware elements and executing digital processing on open-source software. When building such a software-based, 5G Open RAN platform, challenges include achieving real-time execution times for demanding computational blocks of the 5G NR physical layer processing, such as Low Density Parity Check (LDPC) decoding. In this context, having already identified both the capabilities as well as the challenges that Field-programmable Gate Arrays (FPGAs) offer for accelerating LDPC, we present our novel LDPC FPGA accelerator system. In this paper, we contribute the implementation details of our FPGA accelerator design as well as the process of integrating the accelerator with OpenAirInterface (OAI), the basis for our 5G NR platform. For the first time in the literature, we show an FPGA-based LDPC accelerator fully integrated with a complete software platform, that is able to achieve more than 1.6Gbps decoding throughput and up to 13 times faster execution times compared to single core software implementations. Finally, in our results, we show that LDPC encoding is more challenging to accelerate due to lower computational complexity.","",""
63,"E. Plaku, Kostas E. Bekris, L. Kavraki","OOPS for Motion Planning: An Online, Open-source, Programming System",2007,"","","","",909,"2024-08-22 15:04:59","","10.1109/ROBOT.2007.364047","","",,,,,63,3.71,21,3,17,"The success of sampling-based motion planners has resulted in a plethora of methods for improving planning components, such as sampling and connection strategies, local planners and collision checking primitives. Although this rapid progress indicates the importance of the motion planning problem and the maturity of the field, it also makes the evaluation of new methods time consuming. We propose that a systems approach is needed for the development and the experimental validation of new motion planners and/or components in existing motion planners. In this paper, we present the online, open-source, programming system for motion planning (OOPSMP), a programming infrastructure that provides implementations of various existing algorithms in a modular, object-oriented fashion that is easily extendible. The system is open-source, since a community-based effort better facilitates the development of a common infrastructure and is less prone to errors. We hope that researchers will contribute their optimized implementations of their methods and thus improve the quality of the code available for use. A dynamic Web interface and a dynamic linking architecture at the programming level allows users to easily add new planning components, algorithms, benchmarks, and experiment with different parameters. The system allows the direct comparison of new contributions with existing approaches on the same hardware and programming infrastructure","",""
51,"E. T. Costa, M. Mora, P. Willis, Claudimir L. Lago, H. Jiao, Carlos D. Garcia","Getting started with open‐hardware: Development and control of microfluidic devices",2014,"","","","",369,"2024-08-22 15:04:59","","10.1002/elps.201400128","","",,,,,51,5.10,9,6,10,"Understanding basic concepts of electronics and computer programming allows researchers to get the most out of the equipment found in their laboratories. Although a number of platforms have been specifically designed for the general public and are supported by a vast array of on‐line tutorials, this subject is not normally included in university chemistry curricula. Aiming to provide the basic concepts of hardware and software, this article is focused on the design and use of a simple module to control a series of PDMS‐based valves. The module is based on a low‐cost microprocessor (Teensy) and open‐source software (Arduino). The microvalves were fabricated using thin sheets of PDMS and patterned using CO2 laser engraving, providing a simple and efficient way to fabricate devices without the traditional photolithographic process or facilities. Synchronization of valve control enabled the development of two simple devices to perform injection (1.6 ± 0.4 μL/stroke) and mixing of different solutions. Furthermore, a practical demonstration of the utility of this system for microscale chemical sample handling and analysis was achieved performing an on‐chip acid–base titration, followed by conductivity detection with an open‐source low‐cost detection system. Overall, the system provided a very reproducible (98%) platform to perform fluid delivery at the microfluidic scale.","",""
43,"Eduardo Viciana, A. Alcayde, F. G. Montoya, R. Baños, F. Arrabal-Campos, F. Manzano-Agugliaro","An Open Hardware Design for Internet of Things Power Quality and Energy Saving Solutions",2019,"","","","",306,"2024-08-22 15:04:59","","10.3390/s19030627","","",,,,,43,8.60,7,6,5,"An important challenge for our society is the transformation of traditional power systems to a decentralized model based on renewable energy sources. In this new scenario, advanced devices are needed for real-time monitoring and control of the energy flow and power quality (PQ). Ideally, the data collected by Internet of Thing (IoT) sensors should be shared to central cloud systems for online and off-line analysis. In this paper openZmeter (oZm) is presented as an advanced low-cost and open-source hardware device for high-precision energy and power quality measurement in low-voltage power systems. An analog front end (AFE) stage is designed and developed for the acquisition, conditioning, and processing of power signals. This AFE can be stacked on available quadcore embedded ARM boards. The proposed hardware is capable of adapting voltage signals up to 800 V AC/DC and currents up to thousands of amperes using different probes. The oZm device is described as a fully autonomous open-source system for the computation and visualization of PQ events and consumed/generated energy, along with full details of its hardware implementation. It also has the ability to send data to central cloud management systems. Given the small size of the hardware design and considering that it allows measurements under a wide range of operating conditions, oZm can be used both as bulk metering or as metering/submetering device for individual appliances. The design is released as open hardware and therefore is presented to the community as a powerful tool for general usage.","",""
285,"Edwin S. Dalmaijer, S. Mathôt, S. Stigchel","PyGaze: An open-source, cross-platform toolbox for minimal-effort programming of eyetracking experiments",2014,"","","","",314,"2024-08-22 15:04:59","","10.3758/s13428-013-0422-2","","",,,,,285,28.50,95,3,10,"","",""
41,"Emma J. Chory, Dana W Gretton, Erika A. DeBenedictis, K. Esvelt","Enabling high‐throughput biology with flexible open‐source automation",2021,"","","","",874,"2024-08-22 15:04:59","","10.15252/msb.20209942","","",,,,,41,13.67,10,4,3,"Our understanding of complex living systems is limited by our capacity to perform experiments in high throughput. While robotic systems have automated many traditional hand‐pipetting protocols, software limitations have precluded more advanced maneuvers required to manipulate, maintain, and monitor hundreds of experiments in parallel. Here, we present Pyhamilton, an open‐source Python platform that can execute complex pipetting patterns required for custom high‐throughput experiments such as the simulation of metapopulation dynamics. With an integrated plate reader, we maintain nearly 500 remotely monitored bacterial cultures in log‐phase growth for days without user intervention by taking regular density measurements to adjust the robotic method in real‐time. Using these capabilities, we systematically optimize bioreactor protein production by monitoring the fluorescent protein expression and growth rates of a hundred different continuous culture conditions in triplicate to comprehensively sample the carbon, nitrogen, and phosphorus fitness landscape. Our results demonstrate that flexible software can empower existing hardware to enable new types and scales of experiments, empowering areas from biomanufacturing to fundamental biology.","",""
30,"Evan Pezent, Brandon Cambio, M. O'Malley","Syntacts: Open-Source Software and Hardware for Audio-Controlled Haptics",2020,"","","","",109,"2024-08-22 15:04:59","","10.1109/TOH.2020.3002696","","",,,,,30,7.50,10,3,4,"As vibrotactile feedback systems become increasingly commonplace, their application scenarios are becoming more complex. In this article, we present a method of vibrotactor control that accommodates emerging design requirements, namely large vibrotactor arrays that are capable of displaying complex waveforms. Our approach is based on control through digital audio interfaces. We describe a new open-source software and hardware package, Syntacts, that lowers the technical barrier to rendering vibrations with audio. We also present a tutorial on common control schemes with a discussion of their advantages and shortcomings. Our software is purpose-built to control arrays of vibrotactors with extremely low latency. In addition, Syntacts includes means to synthesize and sequence cues, and spatialize them on tactile arrays. The Syntacts Amplifier integrates with the audio hardware to provide high-quality analog signals to the tactors without adding excess noise to the system. Finally, we present results from a benchmarking study with Syntacts compared to commercially available systems.","",""
50,"F. A. Endo, Damien Couroussé, H. Charles","Micro-architectural simulation of embedded core heterogeneity with gem5 and McPAT",2015,"","","","",720,"2024-08-22 15:04:59","","10.1145/2693433.2693440","","",,,,,50,5.56,17,3,9,"Energy consumption is the major factor limiting performance in embedded systems. In addition, in the next generations of ICs, heat or energy constraints will not allow to power all transistors simultaneously. Heterogeneous multicore systems represent a possible solution to this problem: the diversity of cores provides energy and performance trade-offs.  Micro-architectural simulators allow a fast evaluation of such new hardware implementations. Currently, there is no open-source simulator that can estimate the energy and performance trade-offs of asymmetric ARM cores at the micro-architectural level.  This article presents a micro-architectural simulator of ARM Cortex-A cores, capable of estimating the performance, power and area of core asymmetry. Our simulation framework is based on the open-source gem5 and McPAT simulators. The main contribution is to report our experience with both simulators. We detail how we simulated the CPUs of a big.LITTLE system and validate area estimations and energy/performance trade-offs against published information.","",""
50,"F. A. Endo, Damien Couroussé, H. Charles","Micro-architectural simulation of in-order and out-of-order ARM microprocessors with gem5",2014,"","","","",734,"2024-08-22 15:04:59","","10.1109/SAMOS.2014.6893220","","",,,,,50,5.00,17,3,10,"Heterogeneous multicore systems have gained momentum, specially for embedded applications, thanks to the performance and energy consumption trade-offs provided by inorder and out-of-order cores. Micro-architectural simulation models the behavior of pipeline structures and caches with configurable parameters. This level of abstraction is well known for being flexible enough to quickly evaluate the performance of new hardware implementations, such as future heterogeneous multicore platforms. However, currently, there is no open-source micro-architectural simulator supporting both in-order and out-of-order ARM cores. This article describes the implementation and accuracy evaluation of a micro-architectural simulator of Cortex-A cores, supporting in-order and out-of-order pipelines and based on the open-source gem5 simulator. We explain how to simulate CortexA8 and Cortex-A9 cores in gem5, and compare the execution time of ten benchmarks with real hardware. Both models, with average absolute errors of only 7 %, are more accurate than similar microarchitectural simulators, which show average absolute errors greater than 15 %.","",""
25,"F. Abtahi, Jonatan Snäll, Benjamin Aslamy, S. Abtahi, F. Seoane, K. Lindecrantz","Biosignal PI, an Affordable Open-Source ECG and Respiration Measurement System",2014,"","","","",338,"2024-08-22 15:04:59","","10.3390/s150100093","","",,,,,25,2.50,4,6,10,"Bioimedical pilot projects e.g., telemedicine, homecare, animal and human trials usually involve several physiological measurements. Technical development of these projects is time consuming and in particular costly. A versatile but affordable biosignal measurement platform can help to reduce time and risk while keeping the focus on the important goal and making an efficient use of resources. In this work, an affordable and open source platform for development of physiological signals is proposed. As a first step an 8–12 leads electrocardiogram (ECG) and respiration monitoring system is developed. Chips based on iCoupler technology have been used to achieve electrical isolation as required by IEC 60601 for patient safety. The result shows the potential of this platform as a base for prototyping compact, affordable, and medically safe measurement systems. Further work involves both hardware and software development to develop modules. These modules may require development of front-ends for other biosignals or just collect data wirelessly from different devices e.g., blood pressure, weight, bioimpedance spectrum, blood glucose, e.g., through Bluetooth. All design and development documents, files and source codes will be available for non-commercial use through project website, BiosignalPI.org.","",""
118,"F. Arvin, Jose Espinosa, Benjamin Bird, A. West, S. Watson, B. Lennox","Mona: an Affordable Open-Source Mobile Robot for Education and Research",2018,"","","","",240,"2024-08-22 15:04:59","","10.1007/s10846-018-0866-9","","",,,,,118,19.67,20,6,6,"","",""
137,"F. Berryman, P. Pynsent, J. Fairbank, S. Disney","A new system for measuring three-dimensional back shape in scoliosis",2008,"","","","",764,"2024-08-22 15:04:59","","10.1007/s00586-007-0581-x","","",,,,,137,8.56,34,4,16,"","",""
54,"F. Bouquet, J. Bobroff, M. Fuchs-Gallezot, L. Maurines","Project-based physics labs using low-cost open-source hardware",2016,"","","","",72,"2024-08-22 15:04:59","","10.1119/1.4972043","","",,,,,54,6.75,14,4,8,"We describe a project-based physics lab, which we proposed to third-year university students. These labs are based on new open-source low-cost equipment (Arduino microcontrollers and compatible sensors). Students are given complete autonomy: they develop their own experimental setup and study the physics topic of their choice. The goal of these projects is to let students to discover the reality of experimental physics. Technical specifications of the acquisition material and case studies are presented for practical implementation in other universities.","",""
36,"F. Coyle, M. Thornton","From UML to HDL : a Model Driven Architectural Approach to Hardware-Software Co-Design",2005,"","","","",686,"2024-08-22 15:04:59","","","","",,,,,36,1.89,18,2,19,"The SMU Co-Design Project is an effort to target the problem of hardware/software co-design via an open source laboratory for studying hardware-software integration. The project focuses on the use of Model Driven Architectures (MDA) to define high-level modelbased system descriptions that can be implemented in either hardware or software. Utilizing component and state diagrams based on the Unified Modeling Language (UML), we demonstrate MODCO, a transformation tool which takes a UML state diagram as input and generates HDL output suitable for use in Field Programmable Gate Array (FPGA) circuit design. With this tool as a first step, we plan to continue to bridge the gap between hardware and software design taking advantage of trends in both areas to work with higher level description languages and use software transformation tools to manage lower-level hardware or software implementation details. This project also serves as the basis for a new generation of software and computer engineers who understand each other’s problems and issues and are able to leverage the capabilities of modelbased system description languages.","",""
29,"F. D. Dinechin, Matei Iştoan","Hardware Implementations of Fixed-Point Atan2",2015,"","","","",494,"2024-08-22 15:04:59","","10.1109/ARITH.2015.23","","",,,,,29,3.22,15,2,9,"The atan2 function computes the polar angle arctan(y/x) of a point given by its cartesian coordinates. It is widely used in digital signal processing to recover the phase of a signal. This article studies for this context the implementation of atan2 with fixed-point inputs and outputs. It compares the prevalent CORDIC shift-and-add algorithm to two multiplier-based techniques. The first one computes the bivariate atan2 function as the composition of two univariate functions: the reciprocal, and the arctangent, each evaluated using bipartite or polynomial approximation methods. The second technique directly uses piecewise bivariate polynomial approximations of degree 1 or 2. Each of these approaches requires a relevant argument reduction, which is also discussed. All the algorithms are last-bit accurate, and implemented with similar care in the open-source FloPoCo framework. Based on synthesis results on FPGAs, their relevance domains are discussed.","",""
95,"F. Fahim, B. Hawks, C. Herwig, J. Hirschauer, S. Jindariani, N. Tran, L. Carloni, G. D. Guglielmo, P. Harris, J. Krupa, D. Rankin, M. Valentín, Josiah D. Hester, Yingyi Luo, John Mamish, Seda Orgrenci-Memik, T. Aarrestad, Hamza Javed, V. Loncar, M. Pierini, Adrian Alan Pol, S. Summers, Javier Mauricio Duarte, S. Hauck, Shih-Chieh Hsu, J. Ngadiuba, Miaoyuan Liu, Duc Hoang, E. Kreinar, Zhenbin Wu","hls4ml: An Open-Source Codesign Workflow to Empower Scientific Low-Power Machine Learning Devices",2021,"","","","",154,"2024-08-22 15:04:59","","","","",,,,,95,31.67,10,30,3,"Accessible machine learning algorithms, software, and diagnostic tools for energy-efficient devices and systems are extremely valuable across a broad range of application domains. In scientific domains, real-time near-sensor processing can drastically improve experimental design and accelerate scientific discoveries. To support domain scientists, we have developed hls4ml, an open-source software-hardware codesign workflow to interpret and translate machine learning algorithms for implementation with both FPGA and ASIC technologies. We expand on previous hls4ml work by extending capabilities and techniques towards low-power implementations and increased usability: new Python APIs, quantization-aware pruning, end-to-end FPGA workflows, long pipeline kernels for low power, and new device backends include an ASIC workflow. Taken together, these and continued efforts in hls4ml will arm a new generation of domain scientists with accessible, efficient, and powerful tools for machine-learning-accelerated discovery.","",""
19,"F. Kaltenberger","OpenAirInterface: Open-source software radio solutions for 5G",2015,"","","","",892,"2024-08-22 15:04:59","","","","",,,,,19,2.11,19,1,9,"LTE 4G cellular networks are gradually being adopted by all major operators in the world and are expected to rule the cellular landscape at least for the current decade. They will also form the starting point for further progress beyond the current generation of mobile cellular networks to chalk a path towards fifth generation mobile networks. Several new approaches and technologies are being considered as potential elements making up such a future mobile network, including cloudification of radio network, radio network programability and APIs following SDN principles, native support of machinetype communication, and massive MIMO. Research on these technologies requires realistic and flexible experimentation platforms that offer a wide range of experimentation modes from real-world experimentation to controlled and scalable evaluations while at the same time retaining backward compatibility with current generation systems. In this work, we present OpenAirInterface (OAI) as a suitably flexible platform towards open LTE ecosystem and playground. We will demonstrate an example of the use of OAI to deploy a low-cost open LTE network using commodity hardware with standard LTE-compatible devices. We will further show the feasibility of using OpenAirInterface to implement some features of 5G, such as cloud-RAN centralized processing, massive MIMO, and alternative waveforms for low-latency communications.","",""
34,"F. Kaltenberger, Rizwan Ghaffar, R. Knopp, H. Anouar, C. Bonnet","Design and Implementation of a Single-Frequency Mesh Network Using OpenAirInterface",2010,"","","","",853,"2024-08-22 15:04:59","","10.1155/2010/719523","","",,,,,34,2.43,7,5,14,"OpenAirInterface is an experimental open-source real-time hardware and software platform for experimentation in wireless communications and signal processing. With the help of OpenAirInterface, researchers can demonstrate novel ideas quickly and verify them in a realistic environment. Its current implementation provides a full open-source software modem comprising physical and link layer functionalities for cellular and mesh network topologies. The physical (PHY) layer of the platform targets fourth generation wireless networks and thus uses orthogonal frequency division multiple access (OFDMA) together with multiple-input multiple-output (MIMO) techniques. The current hardware supports 5 MHz bandwidth and two transmit/receive antennas. The media access (MAC) layer of the platform supports an abundant two-way signaling for enabling collaboration, scheduling protocols, as well as traffic and channel measurements. In this paper, we focus on the mesh topology and show how to implement a single-frequency mesh network with OpenAirInterface. The key ingredients to enable such a network are a dual-stream MIMO receiver structure and a distributed network synchronization algorithm. We show how to implement these two algorithms in real-time on the OpenAirInterface platform. Further more, we provide results from field trials and compare them to the simulation results.","",""
27,"F. Machado, N. Malpica, S. Borromeo","Parametric CAD modeling for open source scientific hardware: Comparing OpenSCAD and FreeCAD Python scripts",2019,"","","","",116,"2024-08-22 15:04:59","","10.1371/journal.pone.0225795","","",,,,,27,5.40,9,3,5,"Open source hardware for scientific equipment needs to provide source files and enough documentation to allow the study, replication and modification of the design. In addition, parametric modeling is encouraged in order to facilitate customization for other experiments. Parametric design using a solid modeling programming language allows customization and provides a source file for the design. OpenSCAD is the most widely used scripting tool for parametric modeling of open source labware. However, OpenSCAD lacks the ability to export to standard parametric formats; thus, the parametric dimensional information of the model is lost. This is an important deficiency because it is key to share the design in the most accessible formats with no information loss. In this work we analyze OpenSCAD and compare it with FreeCAD Python scripts. We have created a parametric open source hardware design to compare these tools. Our findings show that although Python for FreeCAD is more arduous to learn, its advantages counterbalance the initial difficulties. The main benefits are being able to export to standard parametric models; using Python language with its libraries; and the ability to use and integrate the models in its graphical interface. Thus, making it more appropriate to design open source hardware for scientific equipment.","",""
53,"F. Maia, T. Ekeberg, D. Spoel, J. Hajdu","Hawk: the image reconstruction package for coherent X‐ray diffractive imaging",2010,"","","","",830,"2024-08-22 15:04:59","","10.1107/S0021889810036083","","",,,,,53,3.79,13,4,14,"The past few years have seen a tremendous growth in the field of coherent X-ray diffractive imaging, in large part due to X-ray free-electron lasers which provide a peak brilliance billions of times higher than that of synchrotrons. However, this rapid development in terms of hardware has not been matched on the software side. The release of Hawk is intended to close this gap. To the authors' knowledge Hawk is the first publicly available and fully open source software program for reconstructing images from continuous diffraction patterns. The software handles all steps leading from a raw diffraction pattern to a reconstructed two-dimensional image including geometry determination, background correction, masking and phasing. It also includes preliminary three-dimensional support and support for graphics processing units using the Compute Unified Device Architecture, which speeds up processing by orders of magnitude compared to a single central processing unit. Hawk implements numerous algorithms and is easily extended. This, in combination with its open-source licence, provides a platform for other groups to test, develop and distribute their own algorithms. Hawk is available under the GNU General Public License from http://xray.bmc.uu.se/hawk.","",""
95,"F. Mesas-Carrascosa, D. Santano, J. E. Meroño, M. S. L. Orden, A. García-Ferrer","Open source hardware to monitor environmental parameters in precision agriculture",2015,"","","","",74,"2024-08-22 15:04:59","","10.1016/J.BIOSYSTEMSENG.2015.07.005","","",,,,,95,10.56,19,5,9,"","",""
47,"F. Mesas-Carrascosa, D. Santano, José Emilio Meroño de Larriva, R. Cordero, R. H. Fernández, A. García-Ferrer","Monitoring Heritage Buildings with Open Source Hardware Sensors: A Case Study of the Mosque-Cathedral of Córdoba",2016,"","","","",66,"2024-08-22 15:04:59","","10.3390/s16101620","","",,,,,47,5.88,8,6,8,"A number of physical factors can adversely affect cultural heritage. Therefore, monitoring parameters involved in the deterioration process, principally temperature and relative humidity, is useful for preventive conservation. In this study, a total of 15 microclimate stations using open source hardware were developed and stationed at the Mosque-Cathedral of Córdoba, which is registered with UNESCO for its outstanding universal value, to assess the behavior of interior temperature and relative humidity in relation to exterior weather conditions, public hours and interior design. Long-term monitoring of these parameters is of interest in terms of preservation and reducing the costs of future conservation strategies. Results from monitoring are presented to demonstrate the usefulness of this system.","",""
86,"F. Mondada, M. Bonani, Fanny Riedo, Manon Briod, Léa Pereyre, P. Rétornaz, Stéphane Magnenat","Bringing Robotics to Formal Education: The Thymio Open-Source Hardware Robot",2017,"","","","",48,"2024-08-22 15:04:59","","10.1109/MRA.2016.2636372","","",,,,,86,12.29,12,7,7,"Mobile robots are valuable tools for education because of both the enthusiasm they raise and the multidisciplinary nature of robotics technology. Mobile robots give access to a wide range of fields, such as complex mechanics, sensors, wireless transmission, mathematics, and computer science. However, despite their potential as educational tools, robots are still not as widespread in schools as they could be. In this article, we identify five key reasons: lack of diversity, high cost, noninclusive design, lack of educational material, and lack of stability over time. Then, we describe our answers to these problems, as we implemented them in the Thymio project: a mature mass-produced open-hardware robot, at a low price, with a multiage and gender-neutral feature set, and with a design promoting creativity, facilitating learning, and providing a wide range of interaction possibilities from built-in behaviors to text programming, passing through different visual programming environments. We highlight some neglected key issues that differentiate open-source hardware from open-source software, for instance the legal uncertainty of designing open hardware using professional computer-aided design (CAD) tools and the difficulty to distribute the development. Our solution to these being to increase the awareness of CAD editors to open-source hardware and to provide a two-layer development model for hardware.","",""
58,"F. Salamone, L. Belussi, L. Danza, M. Ghellere, I. Meroni","Design and Development of nEMoS, an All-in-One, Low-Cost, Web-Connected and 3D-Printed Device for Environmental Analysis",2015,"","","","",707,"2024-08-22 15:04:59","","10.3390/s150613012","","",,,,,58,6.44,12,5,9,"The Indoor Environmental Quality (IEQ) refers to the quality of the environment in relation to the health and well-being of the occupants. It is a holistic concept, which considers several categories, each related to a specific environmental parameter. This article describes a low-cost and open-source hardware architecture able to detect the indoor variables necessary for the IEQ calculation as an alternative to the traditional hardware used for this purpose. The system consists of some sensors and an Arduino board. One of the key strengths of Arduino is the possibility it affords of loading the script into the board’s memory and letting it run without interfacing with computers, thus granting complete independence, portability and accuracy. Recent works have demonstrated that the cost of scientific equipment can be reduced by applying open-source principles to their design using a combination of the Arduino platform and a 3D printer. The evolution of the 3D printer has provided a new means of open design capable of accelerating self-directed development. The proposed nano Environmental Monitoring System (nEMoS) instrument is shown to have good reliability and it provides the foundation for a more critical approach to the use of professional sensors as well as for conceiving new scenarios and potential applications.","",""
47,"F. Sánchez-Sutil, A. Cano-Ortega, J. Hernandez, C. Rus-Casas","Development and Calibration of an Open Source, Low-Cost Power Smart Meter Prototype for PV Household-Prosumers",2019,"","","","",219,"2024-08-22 15:04:59","","10.3390/ELECTRONICS8080878","","",,,,,47,9.40,12,4,5,"Smart meter roll-out in photovoltaic (PV) household-prosumers provides easy access to granular meter measurements, which enables advanced energy services. The design of these services is based on the training and validation of models. However, this requires temporal high-resolution data for generation/load profiles collected in real-world household facilities. For this purpose, this research developed and successfully calibrated a new prototype for an accurate low-cost On-time Single-Phase Power Smart Meter (OSPPSM), which corresponded to these profiles. This OSPPSM is based on the Arduino open-source electronic platform. Not only can it locally store information, but can also wirelessly send these data to cloud storage in real-time. This paper describes the hardware and software design and its implementation. The experimental results are presented and discussed. The OSPPSM demonstrated that it was capable of in situ real-time processing. Moreover, the OSPPSM was able to meet all of the calibration standard tests in terms of accuracy class 1 (measurement error ≤1%) included in the International Electrotechnical Commission (IEC) standards for smart meters. In addition, the evaluation of the uncertainty of electrical variables is provided within the context of the law of propagation of uncertainty. The approximate cost of the prototype was 60 € from eBay stores.","",""
186,"F. Voigt, Daniel Kirschenbaum, Evgenia Platonova, S. Pagès, Robert A. A. Campbell, Rahel Kastli, Martina Schaettin, Ladan Egolf, Alexander van der Bourg, P. Bethge, Karen Haenraets, N. Frézel, T. Topilko, P. Perin, D. Hillier, Sven Hildebrand, Anna Schueth, A. Roebroeck, B. Roska, E. Stoeckli, R. Pizzala, N. Renier, H. Zeilhofer, T. Karayannis, U. Ziegler, L. Batti, A. Holtmaat, C. Lüscher, A. Aguzzi, F. Helmchen","The mesoSPIM initiative – open-source light-sheet microscopes for imaging cleared tissue",2019,"","","","",213,"2024-08-22 15:04:59","","10.1038/s41592-019-0554-0","","",,,,,186,37.20,19,30,5,"","",""
69,"F. Zöllner, G. Weisser, Marcel Reich, Sven Kaiser, S. Schönberg, S. Sourbron, L. Schad","UMMPerfusion: an Open Source Software Tool Towards Quantitative MRI Perfusion Analysis in Clinical Routine",2013,"","","","",895,"2024-08-22 15:04:59","","10.1007/s10278-012-9510-6","","",,,,,69,6.27,10,7,11,"","",""
213,"Fabian Isensee, Paul F. Jager, Simon A. A. Kohl, Jens Petersen, Klaus Maier-Hein","Automated Design of Deep Learning Methods for Biomedical Image Segmentation",2019,"","","","",550,"2024-08-22 15:04:59","","","","",,,,,213,42.60,43,5,5,"Biomedical imaging is a driver of scientific discovery and core component of medical care, currently stimulated by the field of deep learning. While semantic segmentation algorithms enable 3D image analysis and quantification in many applications, the design of respective specialised solutions is non-trivial and highly dependent on dataset properties and hardware conditions. We propose nnU-Net, a deep learning framework that condenses the current domain knowledge and autonomously takes the key decisions required to transfer a basic architecture to different datasets and segmentation tasks. Without manual tuning, nnU-Net surpasses most specialised deep learning pipelines in 19 public international competitions and sets a new state of the art in the majority of the 49 tasks. The results demonstrate a vast hidden potential in the systematic adaptation of deep learning methods to different datasets. We make nnU-Net publicly available as an open-source tool that can effectively be used out-of-the-box, rendering state of the art segmentation accessible to non-experts and catalyzing scientific progress as a framework for automated method design.","",""
54,"Fabrizio Ferrandi, Vito Giovanni Castellana, S. Curzel, Pietro Fezzardi, M. Fiorito, M. Lattuada, Marco Minutoli, C. Pilato, Antonino Tumeo","Invited: Bambu: an Open-Source Research Framework for the High-Level Synthesis of Complex Applications",2021,"","","","",155,"2024-08-22 15:04:59","","10.1109/dac18074.2021.9586110","","",,,,,54,18.00,6,9,3,"This paper presents the open-source high-level synthesis (HLS) research framework Bambu. Bambu provides a research environment to experiment with new ideas across HLS, high-level verification and debugging, FPGA/ASIC design, design flow space exploration, and parallel hardware accelerator design. The tool accepts as input standard C/C++ specifications and compiler intermediate representations (IRs) coming from the well-known Clang/LLVM and GCC compilers. The broad spectrum and flexibility of input formats allow the electronic design automation (EDA) research community to explore and integrate new transformations and optimizations. The easily extendable modular framework already includes many optimizations and HLS benchmarks used to evaluate the QoR of the tool against existing approaches [1]. The integration with synthesis and verification backends (commercial and open-source) allows researchers to quickly test any new finding and easily obtain performance and resource usage metrics for a given application. Different FPGA devices are supported from several different vendors: AMD/Xilinx, Intel/Altera, Lattice Semiconductor, and NanoXplore. Finally, integration with the OpenRoad open-source end-to-end silicon compiler perfectly fits with the recent push towards open-source EDA.","",""
143,"Fan Lai, Yinwei Dai, Sanjay Sri Vallabh Singapuram, Jiachen Liu, Xiangfeng Zhu, H. Madhyastha, Mosharaf Chowdhury","FedScale: Benchmarking Model and System Performance of Federated Learning at Scale",2021,"","","","",528,"2024-08-22 15:04:59","","","","",,,,,143,47.67,20,7,3,"We present FedScale, a federated learning (FL) benchmarking suite with realistic datasets and a scalable runtime to enable reproducible FL research. FedScale datasets encompass a wide range of critical FL tasks, ranging from image classification and object detection to language modeling and speech recognition. Each dataset comes with a unified evaluation protocol using real-world data splits and evaluation metrics. To reproduce realistic FL behavior, FedScale contains a scalable and extensible runtime. It provides high-level APIs to implement FL algorithms, deploy them at scale across diverse hardware and software backends, and evaluate them at scale, all with minimal developer efforts. We combine the two to perform systematic benchmarking experiments and highlight potential opportunities for heterogeneity-aware co-optimizations in FL. FedScale is open-source and actively maintained by contributors from different institutions at http://fedscale.ai. We welcome feedback and contributions from the community.","",""
244,"Flavio P. Ribeiro, D. Florêncio, Cha Zhang, M. Seltzer","CROWDMOS: An approach for crowdsourcing mean opinion score studies",2011,"","","","",637,"2024-08-22 15:04:59","","10.1109/ICASSP.2011.5946971","","",,,,,244,18.77,61,4,13,"MOS (mean opinion score) subjective quality studies are used to evaluate many signal processing methods. Since laboratory quality studies are time consuming and expensive, researchers often run small studies with less statistical significance or use objective measures which only approximate human perception. We propose a cost-effective and convenient measure called crowdMOS, obtained by having internet users participate in a MOS-like listening study. Workers listen and rate sentences at their leisure, using their own hardware, in an environment of their choice. Since these individuals cannot be supervised, we propose methods for detecting and discarding inaccurate scores. To automate crowdMOS testing, we offer a set of freely distributable, open-source tools for Amazon Mechanical Turk, a platform designed to facilitate crowdsourcing. These tools implement the MOS testing methodology described in this paper, providing researchers with a user-friendly means of performing subjective quality evaluations without the overhead associated with laboratory studies. Finally, we demonstrate the use of crowdMOS using data from the Blizzard text-to-speech competition, showing that it delivers accurate and repeatable results.","",""
28,"Florian Tschopp, Michael Riner, M. Fehr, Lukas Bernreiter, Fadri Furrer, Tonci Novkovic, Andreas Pfrunder, César Cadena, R. Siegwart, Juan I. Nieto","VersaVIS—An Open Versatile Multi-Camera Visual-Inertial Sensor Suite",2019,"","","","",485,"2024-08-22 15:04:59","","10.3390/s20051439","","",,,,,28,5.60,3,10,5,"Robust and accurate pose estimation is crucial for many applications in mobile robotics. Extending visual Simultaneous Localization and Mapping (SLAM) with other modalities such as an inertial measurement unit (IMU) can boost robustness and accuracy. However, for a tight sensor fusion, accurate time synchronization of the sensors is often crucial. Changing exposure times, internal sensor filtering, multiple clock sources and unpredictable delays from operation system scheduling and data transfer can make sensor synchronization challenging. In this paper, we present VersaVIS, an Open Versatile Multi-Camera Visual-Inertial Sensor Suite aimed to be an efficient research platform for easy deployment, integration and extension for many mobile robotic applications. VersaVIS provides a complete, open-source hardware, firmware and software bundle to perform time synchronization of multiple cameras with an IMU featuring exposure compensation, host clock translation and independent and stereo camera triggering. The sensor suite supports a wide range of cameras and IMUs to match the requirements of the application. The synchronization accuracy of the framework is evaluated on multiple experiments achieving timing accuracy of less than 1 ms. Furthermore, the applicability and versatility of the sensor suite is demonstrated in multiple applications including visual-inertial SLAM, multi-camera applications, multi-modal mapping, reconstruction and object based mapping.","",""
12,"Francisco J. Parada, Dean Wyatte, Chen Yu, R. Akavipat, Brandi Emerick, T. Busey","ExpertEyes: Open-source, high-definition eyetracking",2014,"","","","",342,"2024-08-22 15:04:59","","10.3758/s13428-014-0465-z","","",,,,,12,1.20,2,6,10,"","",""
19,"Frank Hannig, J&#252;rgen Teich","Open Source Hardware",2021,"","","","",1,"2024-08-22 15:04:59","","10.1109/mc.2021.3099046","","",,,,,19,6.33,10,2,3,"The advantages of open source knowledge production of physical products have become particularly evident in challenging times, and Open Source Hardware (OSH) is seen as a way to cope with the COVID-19 crisis. For example, innovative products like respiratory equipment could be developed in a collaborative way with a worldwide community of experts and companies (Pearce, 2020). The knowledge, construction plans and instructions thus produced have been in turn made available as a public good and can be produced by anyone who needs it in a decentral and more sustainable way (see also the OxyVita: Emergency Ventilator).","",""
71,"François Grondin, D. Létourneau, François Ferland, V. Rousseau, F. Michaud","The ManyEars open framework",2013,"","","","",563,"2024-08-22 15:04:59","","10.1007/s10514-012-9316-x","","",,,,,71,6.45,14,5,11,"","",""
32,"G. A. Alonso-Silverio, F. Pérez-Escamirosa, Raúl Bruno-Sanchez, J. L. Ortiz-Simón, R. Muñoz-Guerrero, A. Minor-Martínez, A. Alarcón-Paredes","Development of a Laparoscopic Box Trainer Based on Open Source Hardware and Artificial Intelligence for Objective Assessment of Surgical Psychomotor Skills",2018,"","","","",57,"2024-08-22 15:04:59","","10.1177/1553350618777045","","",,,,,32,5.33,5,7,6,"Background. A trainer for online laparoscopic surgical skills assessment based on the performance of experts and nonexperts is presented. The system uses computer vision, augmented reality, and artificial intelligence algorithms, implemented into a Raspberry Pi board with Python programming language. Methods. Two training tasks were evaluated by the laparoscopic system: transferring and pattern cutting. Computer vision libraries were used to obtain the number of transferred points and simulated pattern cutting trace by means of tracking of the laparoscopic instrument. An artificial neural network (ANN) was trained to learn from experts and nonexperts’ behavior for pattern cutting task, whereas the assessment of transferring task was performed using a preestablished threshold. Four expert surgeons in laparoscopic surgery, from hospital “Raymundo Abarca Alarcón,” constituted the experienced class for the ANN. Sixteen trainees (10 medical students and 6 residents) without laparoscopic surgical skills and limited experience in minimal invasive techniques from School of Medicine at Universidad Autónoma de Guerrero constituted the nonexperienced class. Data from participants performing 5 daily repetitions for each task during 5 days were used to build the ANN. Results. The participants tend to improve their learning curve and dexterity with this laparoscopic training system. The classifier shows mean accuracy and receiver operating characteristic curve of 90.98% and 0.93, respectively. Moreover, the ANN was able to evaluate the psychomotor skills of users into 2 classes: experienced or nonexperienced. Conclusion. We constructed and evaluated an affordable laparoscopic trainer system using computer vision, augmented reality, and an artificial intelligence algorithm. The proposed trainer has the potential to increase the self-confidence of trainees and to be applied to programs with limited resources.","",""
89,"G. A. Covington, Glen Gibb, J. Lockwood, N. McKeown","A Packet Generator on the NetFPGA Platform",2009,"","","","",799,"2024-08-22 15:04:59","","10.1109/FCCM.2009.29","","",,,,,89,5.93,22,4,15,"A packet generator and network traffic capture system has been implemented on the NetFPGA. The NetFPGA is an open networking platform accelerator that enables rapid development of hardware-accelerated packet processing applications. The packet generator application allows Internet packets to be transmitted at line rate on up to four Gigabit Ethernet ports simultaneously. Data transmitted is specified in a standard PCAP file, transferred to local memory on the NetFPGA card, then sent on the Gigabit links using a precise data rate, inter-packet delay, and number of iterations specified by the user. The hardware circuit also simultaneously operates as a packet capture system, allowing traffic to be captured from up to all four of the Gigabit Ethernet ports. Timestamps are recorded and traffic can be transferred back to the host and stored using the same PCAP format. The project has been implemented as a fully open-source project and serves as an exemplar project on how to build and distribute NetFPGA applications. All of the code (Verilog hardware, system software, verification scripts, makefiles, and support tools) can be freely downloaded from the NetFPGA.org website. Benchmarks comparing this hardware-accelerated application to the fastest available PC with a PCIe NIC shows that the FPGA-based hardware-accelerator far exceeds the performance possible using TCP-reply software.","",""
21,"G. Antichi, S. Giordano, David J. Miller, A. Moore","Enabling open-source high speed network monitoring on NetFPGA",2012,"","","","",386,"2024-08-22 15:04:59","","10.1109/NOMS.2012.6212025","","",,,,,21,1.75,5,4,12,"Network measurement both as diagnostic and within measurement-based techniques of traffic engineering and management, alongside network measurement for security has maintained the needs of researchers and network operators for the ongoing development of measurement tools for traffic monitoring/characterisation and to support Intrusion Detection Systems (IDSs). Many such tools capitalise on the pricing of commodity hardware by operating on general purpose architectures. Many are based on the well known libpcap API, a de facto standard in this area. Despite the many improvements that have been applied to packet capturing, packet-monitoring implementations still suffer from either: performance flaws on commodity hardware due mainly to unresolvable hardware bottlenecks, or costly and inflexible niche systems. To address such issues, the paper proposes a system architecture based on the cooperation of NetFPGA and a general purpose host PC. The NetFPGA is an open networking platform accelerator that enables rapid development of hardware-accelerated packet processing applications. The objective is to combine the high performance of a hardware-oriented solution with the flexibility of general purpose PCs.","",""
24,"G. Anzalone, A. G. Glover, Joshua M. Pearce","Open-Source Colorimeter",2013,"","","","",360,"2024-08-22 15:04:59","","10.3390/s130405338","","",,,,,24,2.18,8,3,11,"The high cost of what have historically been sophisticated research-related sensors and tools has limited their adoption to a relatively small group of well-funded researchers. This paper provides a methodology for applying an open-source approach to design and development of a colorimeter. A 3-D printable, open-source colorimeter utilizing only open-source hardware and software solutions and readily available discrete components is discussed and its performance compared to a commercial portable colorimeter. Performance is evaluated with commercial vials prepared for the closed reflux chemical oxygen demand (COD) method. This approach reduced the cost of reliable closed reflux COD by two orders of magnitude making it an economic alternative for the vast majority of potential users. The open-source colorimeter demonstrated good reproducibility and serves as a platform for further development and derivation of the design for other, similar purposes such as nephelometry. This approach promises unprecedented access to sophisticated instrumentation based on low-cost sensors by those most in need of it, under-developed and developing world laboratories.","",""
83,"G. Bitella, R. Rossi, R. Bochicchio, M. Perniola, M. Amato","A Novel Low-Cost Open-Hardware Platform for Monitoring Soil Water Content and Multiple Soil-Air-Vegetation Parameters",2014,"","","","",359,"2024-08-22 15:04:59","","10.3390/s141019639","","",,,,,83,8.30,17,5,10,"Monitoring soil water content at high spatio-temporal resolution and coupled to other sensor data is crucial for applications oriented towards water sustainability in agriculture, such as precision irrigation or phenotyping root traits for drought tolerance. The cost of instrumentation, however, limits measurement frequency and number of sensors. The objective of this work was to design a low cost “open hardware” platform for multi-sensor measurements including water content at different depths, air and soil temperatures. The system is based on an open-source ARDUINO microcontroller-board, programmed in a simple integrated development environment (IDE). Low cost high-frequency dielectric probes were used in the platform and lab tested on three non-saline soils (ECe1: 2.5 < 0.1 mS/cm). Empirical calibration curves were subjected to cross-validation (leave-one-out method), and normalized root mean square error (NRMSE) were respectively 0.09 for the overall model, 0.09 for the sandy soil, 0.07 for the clay loam and 0.08 for the sandy loam. The overall model (pooled soil data) fitted the data very well (R2 = 0.89) showing a high stability, being able to generate very similar RMSEs during training and validation (RMSEtraining = 2.63; RMSEvalidation = 2.61). Data recorded on the card were automatically sent to a remote server allowing repeated field-data quality checks. This work provides a framework for the replication and upgrading of a customized low cost platform, consistent with the open source approach whereby sharing information on equipment design and software facilitates the adoption and continuous improvement of existing technologies.","",""
46,"G. Felice, Alexis Toumi, B. Coecke","DisCoPy: Monoidal Categories in Python",2020,"","","","",625,"2024-08-22 15:04:59","","10.4204/EPTCS.333.13","","",,,,,46,11.50,15,3,4,"We introduce DisCoPy, an open source toolbox for computing with monoidal categories. The library provides an intuitive syntax for defining string diagrams and monoidal functors. Its modularity allows the efficient implementation of computational experiments in the various applications of category theory where diagrams have become a lingua franca. As an example, we used DisCoPy to perform natural language processing on quantum hardware for the first time.","",""
380,"G. Fortino, Roberta Giannantonio, Raffaele Gravina, P. Kuryloski, R. Jafari","Enabling Effective Programming and Flexible Management of Efficient Body Sensor Network Applications",2013,"","","","",592,"2024-08-22 15:04:59","","10.1109/TSMCC.2012.2215852","","",,,,,380,34.55,76,5,11,"Wireless body sensor networks (BSNs) possess enormous potential for changing people's daily lives. They can enhance many human-centered application domains such as m-Health, sport and wellness, and human-centered applications that involve physical/virtual social interactions. However, there are still challenging issues that limit their wide diffusion in real life: primarily, the programming complexity of these systems, due to the lack of high-level software abstractions, and the hardware constraints of wearable devices. In contrast with low-level programming and general-purpose middleware, domain-specific frameworks are an emerging programming paradigm designed to fulfill the lack of suitable BSN programming support with proper abstraction layers. This paper analyzes the most important requirements for an effective BSN-specific software framework, enabling efficient signal-processing applications. Specifically, we present signal processing in node environment (SPINE), an open-source programming framework, designed to support rapid and flexible prototyping and management of BSN applications. We describe how SPINE efficiently addresses the identified requirements while providing performance analysis on the most common hardware/software sensor platforms. We also report a few high-impact BSN applications that have been entirely implemented using SPINE to demonstrate practical examples of its effectiveness and flexibility. This development experience has notably led to the definition of a SPINE-based design methodology for BSN applications. Finally, lessons learned from the development of such applications and from feedback received by the SPINE community are discussed.","",""
244,"G. Fursin, Yuriy Kashnikov, Abdul Wahid Memon, Z. Chamski, O. Temam, Mircea Namolaru, E. Yom-Tov, Bilha Mendelson, A. Zaks, E. Courtois, F. Bodin, Phil Barnard, Elton Ashton, Edwin V. Bonilla, John Thomson, Christopher K. I. Williams, M. O’Boyle","Milepost GCC: Machine Learning Enabled Self-tuning Compiler",2011,"","","","",636,"2024-08-22 15:04:59","","10.1007/s10766-010-0161-2","","",,,,,244,18.77,24,17,13,"","",""
38,"G. Grandi, P. Sanjeevikumar, D. Casadei","Preliminary hardware implementation of a six-phase quad-inverter induction motor drive",2011,"","","","",597,"2024-08-22 15:04:59","","","","",,,,,38,2.92,13,3,13,"A hardware implementation of a quad-inverter configuration for multi-phase multi-level induction motor drives is presented in this paper. The scheme is based on four conventional 2-level three-phase voltage source inverters, able to supply the open-end windings of a dual three-phase motor (asymmetric six-phase machine), quadrupling the power capability of a single VSI with given voltage and current ratings. By a proper control algorithm the proposed converter is able to generate multi-level voltage waveforms, equivalent to the ones of a 3-level inverter, and to share the total motor power among the four dc sources within each switching period. A full-scale prototype of the whole power system has been realized utilizing six balanced impedances as six-phase load. A complete set of experimental results is given with reference to both balanced and unbalanced operating conditions.","",""
104,"G. Hattenberger, M. Bronz, Michel Gorraz","Using the Paparazzi UAV System for Scientific Research",2014,"","","","",671,"2024-08-22 15:04:59","","10.4233/UUID:B38FBDB7-E6BD-440D-93BE-F7DD1457BE60","","",,,,,104,10.40,35,3,10,"This paper presents an overview of the Paparazzi UAV system and its recent use in scientific research. Paparazzi is an open-source project that aims at providing a complete solution to fly fixedwing aircraft and rotorcrafts. Several hardware boards and sensors are also developed within the project. Since several years, it has been used by various institutes for scientific research. The recent use on scientific research for meteorological studies is presented as an example.","",""
51,"G. James, D. Cohen, R. Dodier, G. Platt, Doug Palmer","A deployed multi-agent framework for distributed energy applications",2006,"","","","",861,"2024-08-22 15:04:59","","10.1145/1160633.1160752","","",,,,,51,2.83,10,5,18,"In this paper, we describe the adaptation of an open-source multi-agent platform for distributed energy applications and the trial deployment of resource-controller agents. The platform provides real-time, two-way communication and decision making between distributed energy resources --- loads and generators --- in electricity distribution networks. Such a decentralized architecture improves grid reliability, allows consumers to play a more active role in their energy usage, benefits the network by alleviating the effects of peak wholesale prices and network constraints, and creates new business opportunities in a deregulated market. Agents have been deployed to control hardware at trial locations in Australia, providing a realistic test environment for the platform, and medium-scale trials are anticipated in the near future.","",""
21,"G. Marcus, Wenxue Gao, A. Kugel, R. Manner","The MPRACE framework: An open source stack for communication with custom FPGA-based accelerators",2011,"","","","",397,"2024-08-22 15:04:59","","10.1109/SPL.2011.5782641","","",,,,,21,1.62,5,4,13,"We present an open source stack for the development of custom FPGA boards, primarily but not limited to PCI Express interconnects. Supporting current Linux distributions, the stack consists of a PCI driver, an IP core for a DMA engine, a hardware abstraction library for IO operations, and a buffer management library for efficient handling of data transfers between an application and a FPGA design. The stack has been validated in diverse hardware and software platforms and provides several building blocks that facilitate the use of accelerators in applications. The DMA Engine IP provides high performance data transfers in PCIe 4-lane boards with Xilinx PCIe cores, with 380 MB/s read and 700 MB/s write maximum measured performance. The buffer management library allows the utilization of 80–95% of this bandwidth with reduced resource consumption and minimal effort.","",""
429,"G. Metta, G. Sandini, D. Vernon, L. Natale, F. Nori","The iCub humanoid robot: an open platform for research in embodied cognition",2008,"","","","",569,"2024-08-22 15:04:59","","10.1145/1774674.1774683","","",,,,,429,26.81,86,5,16,"We report about the iCub, a humanoid robot for research in embodied cognition. At 104 cm tall, the iCub has the size of a three and half year old child. It will be able to crawl on all fours and sit up to manipulate objects. Its hands have been designed to support sophisticate manipulation skills. The iCub is distributed as Open Source following the GPL/FDL licenses. The entire design is available for download from the project homepage and repository (http://www.robotcub.org). In the following, we will concentrate on the description of the hardware and software systems. The scientific objectives of the project and its philosophical underpinning are described extensively elsewhere [1].","",""
233,"G. Metta, G. Sandini, David Vernon, L. Natale, F. Nori","The iCub humanoid robot : an open platform for research in embodied cognition",2009,"","","","",611,"2024-08-22 15:04:59","","","","",,,,,233,15.53,47,5,15,"We report about the iCub, a humanoid robot for research in embodied cognition. At 104 cm tall, the iCub has the size of a three and half year old child. It will be able to crawl on all fours and sit up to manipulate objects. Its hands have been designed to support sophisticate manipulation skills. The iCub is distributed as Open Source following the GPL/FDL licenses. The entire design is available for download from the project homepage and repository (http://www.robotcub.org). In the following, we will concentrate on the description of the hardware and software systems. The scientific objectives of the project and its philosophical underpinning are described extensively elsewhere [1].","",""
684,"G. Metta, P. Fitzpatrick, L. Natale","YARP: Yet Another Robot Platform",2006,"","","","",556,"2024-08-22 15:04:59","","10.5772/5761","","",,,,,684,38.00,228,3,18,"We describe YARP, Yet Another Robot Platform, an open-source project that encapsulates lessons from our experience in building humanoid robots. The goal of YARP is to minimize the effort devoted to infrastructure-level software development by facilitating code reuse, modularity and so maximize research-level development and collaboration. Humanoid robotics is a “bleeding edge” field of research, with constant flux in sensors, actuators, and processors. Code reuse and maintenance is therefore a significant challenge. We describe the main problems we faced and the solutions we adopted. In short, the main features of YARP include support for inter-process communication, image processing as well as a class hierarchy to ease code reuse across different hardware platforms. YARP is currently used and tested on Windows, Linux and QNX6 which are common operating systems used in robotics.","",""
81,"G. Niezen, Parisa Eslambolchilar, H. Thimbleby","Open-source hardware for medical devices",2016,"","","","",47,"2024-08-22 15:04:59","","10.1136/bmjinnov-2015-000080","","",,,,,81,10.13,27,3,8,"Open-source hardware is hardware whose design is made publicly available so anyone can study, modify, distribute, make and sell the design or the hardware based on that design. Some open-source hardware projects can potentially be used as active medical devices. The open-source approach offers a unique combination of advantages, including reducing costs and faster innovation. This article compares 10 of open-source healthcare projects in terms of how easy it is to obtain the required components and build the device.","",""
34,"G. Organtini","Arduino as a tool for physics experiments",2018,"","","","",723,"2024-08-22 15:04:59","","10.1088/1742-6596/1076/1/012026","","",,,,,34,5.67,34,1,6,"Arduino is a widely used open-source platform composed of both hardware and software tools that can be very useful in a physics laboratory. Its low price, the large availability of sensors and transducers, its ease of use and its open nature makes it a perfect tool to involve students in active and cooperative learning. In this paper we show a few examples of what can be done using an Arduino and some sensor, and propose a template for documenting activities.","",""
14,"G. R Karpagam, J. Parkavi","Setting up of an Open Source based Private Cloud",2011,"","","","",398,"2024-08-22 15:04:59","","","","",,,,,14,1.08,7,2,13,"Cloud Computing is an attractive concept in IT field, since it allows the resources to be provisioned according to the user needs[11]. It provides services on virtual machines whereby the user can share resources, software and other devices on demand. Cloud services are supported both by Proprietary and Open Source Systems. As Proprietary products are very expensive, customers are not allowed to experiment on their product and security is a major issue in it, Open source systems helps in solving out these problems. Cloud Computing motivated many academic and non academic members to develop Open Source Cloud Setup, here the users are allowed to study the source code and experiment it. This paper describes the configuration of a private cloud using Eucalyptus. Eucalyptus an open source system has been used to implement a private cloud using the hardware and software without making any modification to it and provide various types of services to the cloud computing environment.","",""
81,"G. Riva, A. Gaggioli, D. Villani, A. Preziosa, F. Morganti, Riccardo Corsi, Gianluca Faletti, L. Vezzadini","NeuroVR: An Open Source Virtual Reality Platform for Clinical Psychology and Behavioral Neurosciences",2007,"","","","",908,"2024-08-22 15:04:59","","","","",,,,,81,4.76,10,8,17,"In the past decade, the use of virtual reality for clinical and research applications has become more widespread. However, the diffusion of this approach is still limited by three main issues: poor usability, lack of technical expertise among clinical professionals, and high costs. To address these challenges, we introduce NeuroVR (http://www.neurovr.org--http://www.neurotiv.org), a cost-free virtual reality platform based on open-source software, that allows non-expert users to adapt the content of a pre-designed virtual environment to meet the specific needs of the clinical or experimental setting. Using the NeuroVR Editor, the user can choose the appropriate psychological stimuli/stressors from a database of objects (both 2D and 3D) and videos, and easily place them into the virtual environment. The edited scene can then be visualized in the NeuroVR Player using either immersive or non-immersive displays. Currently, the NeuroVR library includes different virtual scenes (apartment, office, square, supermarket, park, classroom, etc.), covering two of the most studied clinical applications of VR: specific phobias and eating disorders. The NeuroVR Editor is based on Blender (http://www.blender.org), the open source, cross-platform suite of tools for 3D creation, and is available as a completely free resource. An interesting feature of the NeuroVR Editor is the possibility to add new objects to the database. This feature allows the therapist to enhance the patient's feeling of familiarity and intimacy with the virtual scene, i.e., by using photos or movies of objects/people that are part of the patient's daily life, thereby improving the efficacy of the exposure. The NeuroVR platform runs on standard personal computers with Microsoft Windows; the only requirement for the hardware is related to the graphics card, which must support OpenGL.","",""
600,"G. Stoet","PsyToolkit: A software package for programming psychological experiments using Linux",2010,"","","","",534,"2024-08-22 15:04:59","","10.3758/BRM.42.4.1096","","",,,,,600,42.86,600,1,14,"","",""
72,"G. Tavares, M. Martins, J. Correia, V. Sardinha, S. Guerra-Gomes, S. P. das Neves, F. Marques, N. Sousa, J. Oliveira","Employing an open-source tool to assess astrocyte tridimensional structure",2016,"","","","",287,"2024-08-22 15:04:59","","10.1007/s00429-016-1316-8","","",,,,,72,9.00,8,9,8,"","",""
61,"G. Tristo, G. Bissacco, A. Lebar, J. Valentinčič","Real time power consumption monitoring for energy efficiency analysis in micro EDM milling",2015,"","","","",721,"2024-08-22 15:04:59","","10.1007/S00170-014-6725-3","","",,,,,61,6.78,15,4,9,"","",""
40,"Gabriele Valentini, Anthony Antoun, Marco Trabattoni, Bernát Wiandt, Yasumasa Tamura, Etienne Hocquard, V. Trianni, M. Dorigo","Kilogrid: a novel experimental environment for the Kilobot robot",2018,"","","","",719,"2024-08-22 15:04:59","","10.1007/s11721-018-0155-z","","",,,,,40,6.67,5,8,6,"","",""
20,"Gagan Gupta, Tony Nowatzki, Vinay Gangadhar, Karthikeyan Sankaralingam","Kickstarting Semiconductor Innovation with Open Source Hardware",2017,"","","","",58,"2024-08-22 15:04:59","","10.1109/MC.2017.162","","",,,,,20,2.86,5,4,7,"Hardware innovation is slowing, yet software innovation is flourishing, in large part because of a thriving open source ecosystem. Open source can similarly boost hardware development, but the way forward will require industry, academia, and hardware enthusiasts to address five significant issues.","",""
6,"Gagan Gupta, Tony Nowatzki, Vinay Gangadhar, Karthikeyan Sankaralingam","Open-source Hardware: Opportunities and Challenges",2016,"","","","",77,"2024-08-22 15:04:59","","","","",,,,,6,0.75,2,4,8,"Innovation in hardware is slowing due to rising costs of chip design and diminishing benefits from Moore's law and Dennard scaling. Software innovation, on the other hand, is flourishing, helped in good measure by a thriving open-source ecosystem. We believe that open source can similarly help hardware innovation, but has not yet due to several reasons. We identify these reasons and how the industry, academia, and the hardware community at large can come together to address them.","",""
34,"Ganapati Bhat, Ranadeep Deb, U. Ogras","OpenHealth: Open-Source Platform for Wearable Health Monitoring",2019,"","","","",226,"2024-08-22 15:04:59","","10.1109/MDAT.2019.2906110","","",,,,,34,6.80,11,3,5,"Editor’s note: This article presents an open-source platform for wearable health monitoring. It aims to design a standard set of hardware/software and wearable devices that can enable autonomous collection of clinically relevant data. It provides reference implementations of human activity and gesture recognition applications within this platform. –Jana, Doppa, Washington State University","",""
17,"Gaurav D. Rajurkar, R. Goudar","Notice of Violation of IEEE Publication PrinciplesA Speedy Data Uploading Approach for Twitter Trend and Sentiment Analysis Using HADOOP",2015,"","","","",806,"2024-08-22 15:04:59","","10.1109/ICCUBEA.2015.119","","",,,,,17,1.89,9,2,9,"The current Analytics tools and models that are available in the market are very costly, unable to handle Big Data and less secure. The traditional Analytics systems takes a long time to come up with results, so it is not beneficial to use for Real Time Analytics. So, the proposed work resolves all these problems by combining the Apache Open Source platform which solves the issues of Real Time Analytics using HADOOP. It also provides scalability and reduced cost over analytics by using open Source Software. The work proposes to combine the Apache Open Source Modules and configure them to get the required result. This system also provide solution for speedy data downloading on HDFS by using source and sink (data ingestion) mechanism. The Hadoop is flexible and scalable architecture. The proposed work is based upon the phenomenon of combination of open source software along with commodity hardware that will increase the profit of IT Industry.","",""
17,"Gaurav Pandey, Ankit Vora","Open Electronics for Medical Devices: State-of-Art and Unique Advantages",2019,"","","","",502,"2024-08-22 15:04:59","","10.3390/electronics8111256","","",,,,,17,3.40,9,2,5,"A wide range of medical devices have significant electronic components. Compared to open-source medical software, open (and open-source) electronic hardware has been less published in peer-reviewed literature. In this review, we explore the developments, significance, and advantages of using open platform electronic hardware for medical devices. Open hardware electronics platforms offer not just shorter development times, reduced costs, and customization; they also offer a key potential advantage which current commercial medical devices lack—seamless data sharing for machine learning and artificial intelligence. We explore how various electronic platforms such as microcontrollers, single board computers, field programmable gate arrays, development boards, and integrated circuits have been used by researchers to design medical devices. Researchers interested in designing low cost, customizable, and innovative medical devices can find references to various easily available electronic components as well as design methodologies to integrate those components for a successful design.","",""
71,"Geraldo F. Oliveira, Juan Gómez-Luna, Lois Orosa, Saugata Ghose, Nandita Vijaykumar, Ivan Fernandez, Mohammad Sadrosadati, O. Mutlu","DAMOV: A New Methodology and Benchmark Suite for Evaluating Data Movement Bottlenecks",2021,"","","","",954,"2024-08-22 15:04:59","","10.1109/ACCESS.2021.3110993","","",,,,,71,23.67,9,8,3,"Data movement between the CPU and main memory is a first-order obstacle against improv ing performance, scalability, and energy efficiency in modern systems. Computer systems employ a range of techniques to reduce overheads tied to data movement, spanning from traditional mechanisms (e.g., deep multi-level cache hierarch ies, aggressive hardware prefetcher s) to emerging techniques such as Near-Data Processing (NDP), where some computation is moved close to memory. Prior NDP works investigate the root causes of data movement bottlenecks using different profiling methodologies and tools. However, there is still a lack of understanding about the key metrics that can identify different data movement bottlenecks and their relation to traditional and emerging data movement mitigation mechanisms. Our goal is to methodically identify potential sources of data movement over a broad set of applications and to comprehensively compare traditional compute-centric data movement mitigation techniques (e.g., cach ing and prefetch ing) to more memory-centric techniques (e.g., NDP), thereby developing a rigorous understanding of the best techniques to mitigate each source of data movement. With this goal in mind, we perform the first large-scale characterization of a wide variety of applications, across a wide range of application domains, to identify fundamental program properties that lead to data movement to/from main memory. We develop the first systematic methodology to classify applications based on the sources contributing to data movement bottlenecks. From our large-scale characterization of 77K functions across 345 applications, we select 144 functions to form the first open-source benchmark suite (DAMOV) for main memory data movement studies. We select a diverse range of functions that (1) represent different types of data movement bottlenecks, and (2) come from a wide range of application domains. Using NDP as a case study, we identify new insights about the different data movement bottlenecks and use these insights to determine the most suitable data movement mitigation mechanism for a particular application. We open-source DAMOV and the complete source code for our new characterization methodology at https://github.com/CMU-SAFARI/DAMOV.","",""
140,"Gerhard Reitmayr, D. Schmalstieg","An open software architecture for virtual reality interaction",2001,"","","","",966,"2024-08-22 15:04:59","","10.1145/505008.505018","","",,,,,140,6.09,70,2,23,"This article describes OpenTracker, an open software architecture that provides a framework for the different tasks involved in tracking input devices and processing multi-modal input data in virtual environments and augmented reality application. The OpenTracker framework eases the development and maintenance of hardware setups in a more flexible manner than what is typically offered by virtual reality development packages. This goal is achieved by using an object-oriented design based on XML, taking full advantage of this new technology by allowing to use standard XML tools for development, configuration and documentation. The OpenTracker engine is based on a data flow concept for multi-modal events. A multi-threaded execution model takes care of tunable performance. Transparent network access allows easy development of decoupled simulation models. Finally, the application developer's interface features both a time-based and an event based model, that can be used simultaneously, to serve a large range of applications. OpenTracker is a first attempt towards a ""'write once, input anywhere""' approach to virtual reality application development. To support these claims, integration into an existing augmented reality system is demonstrated. We also show how a prototype tracking equipment for mobile augmented reality can be assembled from consumer input devices with the aid of OpenTracker. Once development is sufficiently mature, it is planned to make Open-Tracker available to the public under an open source software license.","",""
26,"Gerwin Hoogsteen, J. Hurink, G. Smit","DEMKit: a Decentralized Energy Management Simulation and Demonstration Toolkit",2019,"","","","",715,"2024-08-22 15:04:59","","10.1109/ISGTEurope.2019.8905439","","",,,,,26,5.20,9,3,5,"The energy transition requires simulators that aid the research on and validation of energy management systems. Hereby, these systems not solely focus on electricity, but involve the optimization of multiple energy carriers in a multi-energy system. This paper presents DEMKit, an open-source toolkit with device, grid and control components for such a multi-energy management solution. The modular design allows DEMKit to test different optimization algorithms on the same scenario. Device components can be replaced by adapters to control real hardware in a deployment or hardware-in-the-loop simulation. Results of a demonstration setup of DEMKit in a smart home show the potential of using DEMKit to bridge the gap between scientific research and test new solutions in practice.","",""
37,"Gines Garcia-Aviles, M. Gramaglia, P. Serrano, A. Banchs","POSENS: A Practical Open Source Solution for End-to-End Network Slicing",2018,"","","","",250,"2024-08-22 15:04:59","","10.1109/MWC.2018.1800050","","",,,,,37,6.17,9,4,6,"Network slicing represents a new paradigm to operate mobile networks. With network slicing, the underlying infrastructure is ""sliced"" into logically separate networks that can be customized to the specific needs of their tenant. Hands-on experiments on this technology are essential to understand its benefits and limits, and to validate the design and deployment choices. While some network slicing prototypes have been built for RANs, leveraging on the wide availability of radio hardware and open source software, there is currently no open source suite for end-to-end network slicing available to the research community. In this article we fill this gap by developing an end-to-end network slicing protocol stack, POSENS, which relies on a slice-aware shared RAN solution. We design the required algorithms and protocols, and provide a full implementation leveraging on state-of-the-art software components. We validate the effectiveness of POSENS in achieving tenant isolation and network slices customization, showing that no price in performance is paid toward this end. We believe that our tool will prove very useful to researchers and practitioners working on this novel architectural paradigm.","",""
15,"Giovane Ronei Sylvestrin, H. Scherer, Oswaldo Hideo Ando Junior","Hardware and Software Development of an Open Source Battery Management System",2020,"","","","",115,"2024-08-22 15:04:59","","10.1109/TLA.2021.9461844","","",,,,,15,3.75,5,3,4,"In order to guarantee adequate operating conditions in an energy storage system (SAE), extending its useful life, and offering safety to the user, a device known as the battery management system (BMS) is used. Most devices currently sold are restricted to operating characteristics of lithium battery technologies, which are different in different ways from the operation of other types of batteries that are studied and developed in laboratories. The restriction of use in other technologies could be circumvented through open platforms, allowing modifications in the BMS in order to adapt to the application technology. This adaptive characteristic is rarely found in commercialized devices, being fundamental when the objective of the BMS is linked to academic research that requires experimental steps. Therefore, this work proposes a low cost adaptive open source BMS prototype, capable of monitoring the variables of voltage, current, temperature and state of charge for a battery with up to 10 cells in series. The development includes hardware and software for the basic functioning of BMS functions. The proposed BMS was developed based on two cell technologies with: 18650 lithium ions, and sodium nickel chloride. The versatility of BMS in operating on these two technologies aims to demonstrate the adaptive capacity of the system. For remote monitoring, an interface was developed using the Node-RED and IBM Watson tools.","",""
0,"Girish Maiya","Introduction to Open Source Hardware",2015,"","","","",108,"2024-08-22 15:04:59","","","","",,,,,0,0.00,0,1,9,"","",""
136,"Glen Gibb, J. Lockwood, Jad Naous, P. Hartke, N. McKeown","NetFPGA—An Open Platform for Teaching How to Build Gigabit-Rate Network Switches and Routers",2008,"","","","",644,"2024-08-22 15:04:59","","10.1109/TE.2008.919664","","",,,,,136,8.50,27,5,16,"The NetFPGA platform enables students and researchers to build high-performance networking systems using field-programmable gate array (FPGA) hardware. A new version of the NetFPGA platform has been developed and is available for use by the academic community. The NetFPGA platform has modular interfaces that enable development of complex hardware designs by integration of simple building blocks. FPGA logic is used to implement the core data processing functions while software running on an attached host computer or embedded cores within the device implement control functions. Reference designs and component libraries have been developed for the CS344 course at Stanford University, Stanford, CA, and taught at a series of tutorials held in the United States, United Kingdom, India, China, Australia, and Europe. The open-source Verilog, C, Perl, and Java reference design is available for download from the project website.","",""
399,"Gonçalo Lopes, N. Bonacchi, João Frazão, J. P. Neto, B. V. Atallah, S. Soares, Luís Moreira, Sara Matias, P. Itskov, Patrícia A. Correia, Roberto E. Medina, Lorenza Calcaterra, Elena Dreosti, Joseph J. Paton, A. R. Kampff","Bonsai: an event-based framework for processing and controlling data streams",2014,"","","","",543,"2024-08-22 15:04:59","","10.3389/fninf.2015.00007","","",,,,,399,39.90,40,15,10,"The design of modern scientific experiments requires the control and monitoring of many parallel data streams. However, the serial execution of programming instructions in a computer makes it a challenge to develop software that can deal with the asynchronous, parallel nature of scientific data. Here we present Bonsai, a modular, high-performance, open-source visual programming framework for the acquisition and online processing of data streams. We describe Bonsai’s core principles and architecture and demonstrate how it allows for flexible and rapid prototyping of integrated experimental designs in neuroscience. We specifically highlight different possible applications which require the combination of many different hardware and software components, i0ncluding behaviour video tracking, electrophysiology and closed-loop control of stimulation parameters.","",""
295,"Guido Appenzeller","Software-Defined Networking",2019,"","","","",960,"2024-08-22 15:04:59","","10.1201/9780429020247-6","","",,,,,295,59.00,295,1,5,"Software-defined networking (SDN) is a modern technology for the flexible configuration of communication networks consisting of switches that recently caught a lot of attention and support from academia and industry (e. The basic concept of SDN is the separation of control plane (network configuration) and data plane (forwarding). The control plane is implemented by a dedicated controller running on an external host. This controller implements the control logic like route calculation and topology discovery and configures the forwarding tables of switches accordingly; the switches are responsible for packet forwarding. The control logic is implemented in software using high-level programming languages like C, C++, Java, or Python and can be easily modified (software instead of firmware). Therefore, this concept combines flexibility and ease of implementation with high forwarding performance (line rate forwarding, low latency). With OpenFlow, a first standard protocol for SDN is available that is implemented by hardware switches from several vendors already and software switches like Open vSwitch as typically used in data centers to connect virtual machines on hosts. Moreover, several open source controller implementations exist. In this lab course, we will introduce the basic principles of SDN, and students will gain practical knowledge and experience in programming software-defined networks using realistic examples. In detail, this course covers the following aspects:  Introduction to the OpenFlow standard  SDN controller concepts and interfaces using the OpenDaylight controller (Java-based implementation; REST interface, OSGI module interface)  Topology discovery and statistics (counters)  Implementation of centralized static and dynamic routing protocols  Control plane distribution for increased availability and scalability  Testing and performance evaluation using software switches (Open vSwitch), hardware switches, and network emulation (Mininet) Recommended prerequisites: Basic knowledge of computer networks and Java. If you have any further questions about this seminar, please contact","",""
1233,"Guido Socher","Conclusions References",2005,"","","","",974,"2024-08-22 15:04:59","","10.1201/9781498709453-97","","",,,,,1233,64.89,1233,1,19,"This is a re-design of the popular avrusb500 programmer. The second version of avrusb500: avrusb500v2. When I started to develop the original avrusb500 during spring 2005 I had a modern programmer in mind. It should have a USB interface but have no ""chicken and egg problem"". That is: you should be able to build it from scratch without the need of another programmer to load the initial firmware. It should also be device independent. That is: should be possible to program Content: What is stk500 version 2? How to use this USB AVR programmer Solving the chicken and egg problem The hardware The avrusb500v2 software Soldering SMD chips Testing the hardware The bridge connector (CONN6) BitBang loading of the final firmware Using the USB AVR programmer Conclusions References By Guido Socher  current and future AVR microcontrollers without the need to modify the programmer for every new chip. The result was avrusb500. The new avrusb500v2 has all the functionallity of the previous version and contains a number of new features based on suggestions from readers and customers: The led indicates now if the programmer is correctly connected to the target. This is a very useful feature as it is often not so obvious which way round the connector should fit onto the target board. A 1MHz emergency clock signal is provided. This can be used to recover a chip which was accidentally programmed with the wrong fuses. Explanation: Atmel calls their configuration bits ""Fuses"". They have however nothing in common with traditional fuses. They are bit patterns which can be used to configure the startup behavior of the microcontroller similar to the BIOS in a PC. They can be modified as needed at any time (they don’t burn like a real fuse) but within limits: If you accidentally program the AVR fuses for an external crystal but the hardware does not have such a crystal or the wrong crystal type then your hardware will be ""dead"". It is possible to recover such ""dead"" hardware by connecting the 1MHz clock output to the XTAL1 pin of the AVR and then re-program the fuses to the correct value. The firmware for avrusb500v2 is again open source and programmed in C. A link to the older (version 1) avrusb500 can be found at the end of this article. The avrusb500v2 is available as a kit from the online shop: http://shop.tuxgraphics.org _________________ _________________ _________________ What is stk500 version 2? Until not so long ago many programmers had specific knowledge about the possible target micrcocontrollers burned into the programmer. stk500 is a development board from atmel but it works also as programmer and the communication protocol between your PC and that programmer is therefore often called just stk500. stk500 version 1 was such a device dependent protocol. It needed updates for every new programmer that came out. At last Atmel had a good idea and developed a protocol which had some more generic procedures. This was then called stk500 version 2 and the exact specification is AVR068. There is also a more recent variant called AVR069. The stk500 AVR068 specification needs no longer device dependent data structures in the programmer hardware. All device dependent logic is now in the programmer software running on the PC. As of today avrstudio (for windows) and avrdude (for multiple OSs including Linux) support this version 2 of the stk500 protocol. The physical hardware interface to the PC is USB. This way we can build a fast and modern programmer which can be used under Linux, BSD, Windows, MacOS X and others. How to use this USB AVR programmer The avrusb500v2 programmer is an In System Programmer. That is: you do not have to remove the microcontroller from the circuit. Almost all Atmel microcontrollers have for this purpose an interface called SPI (Serial Peripheral Interface). The microcontrollers can be either spi master or spi slave. A spi slave is the microcontroller which is programmed and the programmer is the master. The master is controlling the clock (pin SCK) on the SPI interface. The purpose of the programmer is therefore to ""convert"" the stk500 protocol to spi commands. To run spi directly over usb would be too slow for normal programming and development. The spi protocol is implemented in the microcontroller hardware. The corresponding pins can used as output (master) when it has to function as a programmer or as input (slave) when you load software into the chip. Since we need the input pins needed for ""solving the chicken and egg problem"" and the atmega8 has a limited amount of clock speeds for the hardware spi we will use some generic IO pins as output and avrusb500v2 will therefore implement spi in software. The stk500 protocol defines a message format and appropriate commands such as CMD_SET_PARAMETER, CMD_LOAD_ADDRESS, CMD_PROGRAM_FLASH_ISP etc... The protocol sends chunks of data and this is very suitable for USB. The whole protocol is documented in the application note AVR068 (stk500 V2) from Atmel. This stk500 v2 protocol must not be confused with AVR061, which is version 1 of the stk500 protocol. Atmel has done a complete re-design. (Side note: avrusb500v2 and the older avrusb500 implement both the stk500 V2 protocol). Solving the chicken and egg problem Since this programmer contains already a microcontroller we must find a way to initially program it. For this we need a programmer ... the thing that we are about to build... A common solution is to sell microcontrollers with a pre-loaded boot loaded. The problem here is that those special microcontrollers are then specific to one vendor. They are not off the shelf microcontrollers. For the usb interface we use a FT232rl chip. This chip has an interesting mode called ""bit-bang"" mode. I have written a source code library called ftdibb (only 2 files .c and .h, available from http://tuxgraphics.org/~guido/) which implements this bitbang mode on top of the libUSB library. LibUSB (http://libusb.sourceforge.net) uses the /proc file system to send and receive custom usb messages to any usb device on the usb bus. A slight drawback is that this requires root permissions under Linux it is a slow process as we will send very short messages. Initially (when there is no firmware on loaded in the microcontroller) we have absolutely no storage place and no logic in the programmer. We must send all the commands directly from the PC, bit by bit. USB is fast when you send long chunks of data but it is very slow when you send only 1 bit at a time. This is however acceptable because: The initial firmware needs to be loaded only once. It saves us from having to get first a different programmer to load the initial firmware into this programmer There is no customer lock-in with special AVR chips. Any of the shelf atmega8/atmega88 will work. In other words the avrusb500v2 consists really of two programmers: One slow internal for the initial loading of the firmware and the actual avrusb500v2 programmer which is a very fast and stk500 V2 based programmer for every day use. I called the bitbang programmer for the initial loading ""bbpg"". I have modified the uisp programmer software for this purpose. You need to download uisp-20050207.tar.gz and then apply the uisp-20050207-usb-bbpg-patch.txt patch (cd uisp-20050207;patch -p1 < uisp-20050207-usb-bbpg-patch.txt ) or you can take the already patched sources (uisp-20050207-usb-bbpg.tar.gz, download at the end). Libusb needs to be installed before you compile the bbpg programmer. The avrusb500v2-X.Y.tar.gz package contains also a patched and pre-compiled binary. If you want to save some compile time then try this one first. You must name this version of uisp ""uisp_bbpg"". This is what the makefiles and scripts expect. The CD which is sold from http://shop.tuxgraphics.org together with the parts for this programmer can also be used for the initial loading of the firmware. It has the additional advantage that you can do this from the CD without root permissions.","",""
18,"Guohe Zhang, K. Zhao, Bin Wu, Yiqun Sun, Li Sun, F. Liang","A RISC-V based hardware accelerator designed for Yolo object detection system",2019,"","","","",443,"2024-08-22 15:04:59","","10.1109/ICIASE45644.2019.9074051","","",,,,,18,3.60,3,6,5,"You only look once (YOLO) is a state-of-the-art, real-time object detection system. A hardware accelerator of YOLO is presented using the open source RISC-V core ROCKET as its controller. Extended customized instructions based on RISC-V were proposed for this accelerator. The hardware design was verified using Xilinx Virtex-7 FPGA VC709 and the results show that the accelerator costs about 400ms to finish the Yolo algorithm and is supposed to have higher speed with more computation modules.","",""
30,"H. A. Jaeger, A. Franz, Kilian O'Donoghue, A. Seitel, Fabian Trauzettel, L. Maier-Hein, P. Cantillon-Murphy","Anser EMT: the first open-source electromagnetic tracking platform for image-guided interventions",2017,"","","","",279,"2024-08-22 15:04:59","","10.1007/s11548-017-1568-7","","",,,,,30,4.29,4,7,7,"","",""
67,"H. Balakrishnan, Roshan Baliga, Dorothy W. Curtis, Michel Goraczko, Allen K. L. Miu, B. Priyantha, Adam Smith, Kenneth M. Steele, S. Teller, Kevin Q. Wang","Lessons from Developing and Deploying the Cricket Indoor Location System",2003,"","","","",838,"2024-08-22 15:04:59","","","","",,,,,67,3.19,7,10,21,"The Cricket indoor location project has been active for four years. We have developed three different versions of the system. The first version was an early proofof-concept (Cricket v0), which led to the first prototype (Cricket v1). Cricket v1 has seen extensive use by us and by a few other research groups in the community. During this time, we have learned a number of lessons from application designers, users, and system maintainers. We break these lessons into platform flexibility, where we discuss the Cricket API, embedded software platform, and hardware interfaces; location accuracy, where we discuss Cricket v1’s performance and limitations, and deployment issues, where we discuss energy consumption and system management. We discuss how these lessons have helped improve the design of the next generation of Cricket, Cricket v2, whose key features we detail. Like Cricket v1, the Cricket v2 hardware design and software will be released as open-source; v2 units will also be commercially available by early 2004. We believe that the lessons described in this paper will be useful to people interested in building or using indoor location systems.","",""
93,"H. Boehm, Brian Demsky","Outlawing ghosts: avoiding out-of-thin-air results",2014,"","","","",971,"2024-08-22 15:04:59","","10.1145/2618128.2618134","","",,,,,93,9.30,47,2,10,"It is very difficult to define a programming language memory model for shared variables that both • allows programmers to take full advantage of weakly-ordered memory operations, but still • correctly disallows so-called ""out-of-thin-air"" results, i.e. results that can be justified only via reasoning that is in some sense circular. Real programming language implementations do not produce out-of-thin-air results. Architectural specifications successfully disallow them. Nonetheless, the difficulty of disallowing them in language specifications causes real, and serious, problems. In the absence of such a specification, essentially all precise reasoning about non-trivial programs becomes impractical. This remains a critical open problem in the specifications of Java, C, and C++, among others. We argue that there are plausible and relatively straight-forward solutions, but their performance impact requires further study. In the long run, they are likely to require strengthening of some hardware guarantees, so that they translate properly to guarantees at the programming language source level.","",""
46,"H. Cölfen, T. Laue, W. Wohlleben, K. Schilling, Engin Karabudak, B. Langhorst, E. Brookes, Bruce Dubbs, Dan Zollars, M. Rocco, B. Demeler","The Open AUC Project",2009,"","","","",691,"2024-08-22 15:04:59","","10.1007/s00249-009-0438-9","","",,,,,46,3.07,5,11,15,"","",""
19,"H. Esmaeilzadeh, Soroush Ghodrati, Jie Gu, Shi-ze Guo, A. Kahng, J. Kim, Sean Kinzer, R. Mahapatra, Susmita Dey Manasi, Edwin Mascarenhas, S. Sapatnekar, R. Varadarajan, Zhiang Wang, Hanyang Xu, B. Yatham, Ziqing Zeng","VeriGOOD-ML: An Open-Source Flow for Automated ML Hardware Synthesis",2021,"","","","",98,"2024-08-22 15:04:59","","10.1109/ICCAD51958.2021.9643449","","",,,,,19,6.33,2,16,3,"This paper introduces VeriGOOD-ML, an automated methodology for generating Verilog with no human in the loop, starting from a high-level description of a machine learning (ML) algorithm in a standard format such as ONNX. The Verilog RTL is then translated through a back-end design flow to GDSII, driven by a design planning approach that is well tailored to the macro-intensive nature of ML platforms. VeriGOOD-ML uses three approaches to build ML hardware: the TABLA platform uses a dataflow architecture that is well suited to non-DNN ML algorithms; the GeneSys platform, with a systolic array and a SIMD array, is optimized for implementing DNNs; and the Axiline approach synthesizes small ML algorithms by hardcoding the structure of the algorithm into hardware, thus trading off flexibility for performance and power. The overall approach explores the design space of platform configurations and Pareto-optimal-PPA back-end implementations to yield designs that represent different tradeoffs at the algorithmic level between area, power, performance, and execution time. The overall methodology, from architecture to back-end design to hardware implementation, is described in this paper, and the results of VeriGOOD-ML are demonstrated on a set of ML benchmarks.","",""
93,"H. Pinkard, Z. Phillips, A. Babakhani, D. Fletcher, L. Waller","Deep learning for single-shot autofocus microscopy",2019,"","","","",616,"2024-08-22 15:04:59","","10.1364/OPTICA.6.000794","","",,,,,93,18.60,19,5,5,"Maintaining an in-focus image over long time scales is an essential and nontrivial task for a variety of microscopy applications. Here, we describe a fast, robust autofocusing method compatible with a wide range of existing microscopes. It requires only the addition of one or a few off-axis illumination sources (e.g., LEDs), and can predict the focus correction from a single image with this illumination. We designed a neural network architecture, the fully connected Fourier neural network (FCFNN), that exploits an understanding of the physics of the illumination to make accurate predictions with 2–3 orders of magnitude fewer learned parameters and less memory usage than existing state-of-the-art architectures, allowing it to be trained without any specialized hardware. We provide an open-source implementation of our method, to enable fast, inexpensive autofocus compatible with a variety of microscopes.","",""
113,"H. Pirk, Oscar Moll, M. Zaharia, S. Madden","Voodoo - A Vector Algebra for Portable Database Performance on Modern Hardware",2016,"","","","",920,"2024-08-22 15:04:59","","10.14778/3007328.3007336","","",,,,,113,14.13,28,4,8,"In-memory databases require careful tuning and many engineering tricks to achieve good performance. Such database performance engineering is hard: a plethora of data and hardware-dependent optimization techniques form a design space that is difficult to navigate for a skilled engineer --- even more so for a query compiler. To facilitate performance-oriented design exploration and query plan compilation, we present Voodoo, a declarative intermediate algebra that abstracts the detailed architectural properties of the hardware, such as multi- or many-core architectures, caches and SIMD registers, without losing the ability to generate highly tuned code. Because it consists of a collection of declarative, vector-oriented operations, Voodoo is easier to reason about and tune than low-level C and related hardware-focused extensions (Intrinsics, OpenCL, CUDA, etc.). This enables our Voodoo compiler to produce (OpenCL) code that rivals and even outperforms the fastest state-of-the-art in memory databases for both GPUs and CPUs. In addition, Voodoo makes it possible to express techniques as diverse as cache-conscious processing, predication and vectorization (again on both GPUs and CPUs) with just a few lines of code. Central to our approach is a novel idea we termed control vectors, which allows a code generating frontend to expose parallelism to the Voodoo compiler in a abstract manner, enabling portable performance across hardware platforms.    We used Voodoo to build an alternative backend for MonetDB, a popular open-source in-memory database. Our backend allows MonetDB to perform at the same level as highly tuned in-memory databases, including HyPeR and Ocelot. We also demonstrate Voodoo's usefulness when investigating hardware conscious tuning techniques, assessing their performance on different queries, devices and data.","",""
36,"H. Simhadri, G. Williams, Martin Aumüller, Matthijs Douze, Artem Babenko, Dmitry Baranchuk, Qi Chen, Lucas Hosseini, Ravishankar Krishnaswamy, Gopal Srinivasa, Suhas Jayaram Subramanya, Jingdong Wang","Results of the NeurIPS'21 Challenge on Billion-Scale Approximate Nearest Neighbor Search",2022,"","","","",538,"2024-08-22 15:04:59","","10.48550/arXiv.2205.03763","","",,,,,36,18.00,4,12,2,"Despite the broad range of algorithms for Approximate Nearest Neighbor Search, most empirical evaluations of algorithms have focused on smaller datasets, typically of 1 million points~\citep{Benchmark}. However, deploying recent advances in embedding based techniques for search, recommendation and ranking at scale require ANNS indices at billion, trillion or larger scale. Barring a few recent papers, there is limited consensus on which algorithms are effective at this scale vis-\`a-vis their hardware cost. This competition compares ANNS algorithms at billion-scale by hardware cost, accuracy and performance. We set up an open source evaluation framework and leaderboards for both standardized and specialized hardware. The competition involves three tracks. The standard hardware track T1 evaluates algorithms on an Azure VM with limited DRAM, often the bottleneck in serving billion-scale indices, where the embedding data can be hundreds of GigaBytes in size. It uses FAISS~\citep{Faiss17} as the baseline. The standard hardware track T2 additional allows inexpensive SSDs in addition to the limited DRAM and uses DiskANN~\citep{DiskANN19} as the baseline. The specialized hardware track T3 allows any hardware configuration, and again uses FAISS as the baseline. We compiled six diverse billion-scale datasets, four newly released for this competition, that span a variety of modalities, data types, dimensions, deep learning models, distance functions and sources. The outcome of the competition was ranked leaderboards of algorithms in each track based on recall at a query throughput threshold. Additionally, for track T3, separate leaderboards were created based on recall as well as cost-normalized and power-normalized query throughput.","",""
106,"H. Yviquel, Antoine Lorence, Khaled Jerbi, Gildas Cocherel, Alexandre Sanchez, M. Raulet","Orcc: multimedia development made easy",2013,"","","","",705,"2024-08-22 15:04:59","","10.1145/2502081.2502231","","",,,,,106,9.64,18,6,11,"In this paper, we present Orcc, an open-source development environment that aims at enhancing multimedia development by offering all the advantages of dataflow programming: flexibility, portability and scalability. To do so, Orcc embeds two rich eclipse-based editors that provide an easy writing of dataflow applications, a simulator that allows quick validation of the written code, and a multi-target compiler that is able to translate any dataflow program, written in the RVC-CAL language, into an equivalent description in both hardware and software languages. Orcc has already been used to successfully write tens of multimedia applications, such as a video decoder supporting the new High Efficiency Video Coding standard, that clearly demonstrates the ability of the environment to develop complex applications. Moreover, results show scalable performances on multi-core platforms and achieve real-time decoding frame-rate on HD sequences.","",""
472,"Haiyang Chao, Yongcan Cao, Y. Chen","Autopilots for small unmanned aerial vehicles: A survey",2010,"","","","",599,"2024-08-22 15:04:59","","10.1007/S12555-010-0105-Z","","",,,,,472,33.71,157,3,14,"","",""
143,"Han Wang, R. Soulé, Huynh Tu Dang, Ki-Suh Lee, Vishal Shrivastav, Nate Foster, Hakim Weatherspoon","P4FPGA: A Rapid Prototyping Framework for P4",2017,"","","","",608,"2024-08-22 15:04:59","","10.1145/3050220.3050234","","",,,,,143,20.43,20,7,7,"This paper presents P4FPGA, a new tool for developing and evaluating data plane applications. P4FPGA is an open-source compiler and runtime. The compiler extends the P4.org reference compiler with a custom backend that generates FPGA code. P4FPGA supports different architecture configurations, depending on the needs of the particular application. We have benchmarked several representative P4 programs, and our experiments show that code generated by P4FPGA runs at line-rate at all packet sizes with latencies comparable to commercial ASICs. By combining high-level programming abstractions offered by P4 with a flexible and powerful hardware target, P4FPGA allows developers to rapidly prototype and deploy new data plane applications.","",""
230,"Hanrui Wang, Zhanghao Wu, Zhijian Liu, Han Cai, Ligeng Zhu, Chuang Gan, Song Han","HAT: Hardware-Aware Transformers for Efficient Natural Language Processing",2020,"","","","",901,"2024-08-22 15:04:59","","10.18653/v1/2020.acl-main.686","","",,,,,230,57.50,33,7,4,"Transformers are ubiquitous in Natural Language Processing (NLP) tasks, but they are difficult to be deployed on hardware due to the intensive computation. To enable low-latency inference on resource-constrained hardware platforms, we propose to design Hardware-Aware Transformers (HAT) with neural architecture search. We first construct a large design space with arbitrary encoder-decoder attention and heterogeneous layers. Then we train a SuperTransformer that covers all candidates in the design space, and efficiently produces many SubTransformers with weight sharing. Finally, we perform an evolutionary search with a hardware latency constraint to find a specialized SubTransformer dedicated to run fast on the target hardware. Extensive experiments on four machine translation tasks demonstrate that HAT can discover efficient models for different hardware (CPU, GPU, IoT device). When running WMT’14 translation task on Raspberry Pi-4, HAT can achieve 3× speedup, 3.7× smaller size over baseline Transformer; 2.7× speedup, 3.6× smaller size over Evolved Transformer with 12,041× less search cost and no performance loss. HAT is open-sourced at https://github.com/mit-han-lab/hardware-aware-transformers.","",""
1070,"Hans Joachim Ferreau, C. Kirches, A. Potschka, H. Bock, M. Diehl","qpOASES: a parametric active-set algorithm for quadratic programming",2014,"","","","",932,"2024-08-22 15:04:59","","10.1007/s12532-014-0071-1","","",,,,,1070,107.00,214,5,10,"","",""
50,"Hao Jin, Yiheng Qin, Si Pan, Arif Ul Alam, S. Dong, R. Ghosh, M. Deen","Open-Source Low-Cost Wireless Potentiometric Instrument for pH Determination Experiments",2017,"","","","",263,"2024-08-22 15:04:59","","10.1021/ACS.JCHEMED.7B00479","","",,,,,50,7.14,7,7,7,"pH determination is an essential experiment in many chemistry laboratories. It requires a potentiometric instrument with extremely low input bias current to accurately measure the voltage between a pH sensing electrode and a reference electrode. In this technology report, we propose an open-source potentiometric instrument for pH determination experiments with Bluetooth wireless connectivity. The hardware is built on a solderless breadboard and mainly composed of an Arduino Nano microcontroller, a 16-bit analog-to-digital converter, two electronic buffer amplifiers, a temperature sensor, and a Bluetooth module with a total cost around $50 (US dollars, including a portable power supply ∼$10). The software is written in Arduino Sketch and the cross-platform Python language, both of which the students can access and modify freely. The instrument was demonstrated with a traditional glass electrode and a custom palladium/palladium oxide pH sensing electrode, and compared with a commercial pH meter. Results sho...","",""
39,"Haoqi Fan, Tullie Murrell, Heng Wang, Kalyan Vasudev Alwala, Yanghao Li, Yilei Li, Bo Xiong, Nikhila Ravi, Meng Li, Haichuan Yang, J. Malik, Ross B. Girshick, Matt Feiszli, Aaron B. Adcock, Wan-Yen Lo, Christoph Feichtenhofer","PyTorchVideo: A Deep Learning Library for Video Understanding",2021,"","","","",588,"2024-08-22 15:04:59","","10.1145/3474085.3478329","","",,,,,39,13.00,4,16,3,"We introduce PyTorchVideo, an open-source deep-learning library that provides a rich set of modular, efficient, and reproducible components for a variety of video understanding tasks, including classification, detection, self-supervised learning, and low-level processing. The library covers a full stack of video understanding tools including multimodal data loading, transformations, and models that reproduce state-of-the-art performance. PyTorchVideo further supports hardware acceleration that enables real-time inference on mobile devices. The library is based on PyTorch and can be used by any training framework; for example, PyTorchLightning, PySlowFast, or Classy Vision. PyTorchVideo is available at https://pytorchvideo.org/.","",""
399,"Haoyu Song","Protocol-oblivious forwarding: unleash the power of SDN through a future-proof forwarding plane",2013,"","","","",558,"2024-08-22 15:04:59","","10.1145/2491185.2491190","","",,,,,399,36.27,399,1,11,"A flexible and programmable forwarding plane is essential to maximize the value of Software-Defined Networks (SDN). In this paper, we propose Protocol-Oblivious Forwarding (POF) as a key enabler for highly flexible and programmable SDN. Our goal is to remove any dependency on protocol-specific configurations on the forwarding elements and enhance the data-path with new stateful instructions to support genuine software defined networking behavior. A generic flow instruction set (FIS) is defined to fulfill this purpose. POF helps to lower network cost by using commodity forwarding elements and to create new value by enabling numerous innovative network services. We built both hardware-based and open source software-based prototypes to demonstrate the feasibility and advantages of POF. We report the preliminary evaluation results and the insights we learnt from the experiments. POF is future-proof and expressive. We believe it represents a promising direction to evolve the OpenFlow protocol and the future SDN forwarding elements.","",""
11,"Harris Kyriakou, J. Nickerson","Collective Innovation in Open Source Hardware",2014,"","","","",106,"2024-08-22 15:04:59","","10.2139/ssrn.2421332","","",,,,,11,1.10,6,2,10,"A growing community that shares digital 3D designs has created an opportunity to study, encourage and stimulate innovation. This remix community allows people not only to prototype at a minimal cost but also to work on projects they are genuinely interested in (Acosta 2009; Dougherty 2012). Participants free of the limitations typically imposed by formal organizations develop products driven by their own interest.","",""
29,"Harrison Liew, Daniel R. Grubb, J. Wright, Colin Schmidt, Nayiri Krzysztofowicz, Adam M. Izraelevitz, Edward Wang, K. Asanović, J. Bachrach, B. Nikolić","Hammer: a modular and reusable physical design flow tool: invited",2022,"","","","",547,"2024-08-22 15:04:59","","10.1145/3489517.3530672","","",,,,,29,14.50,3,10,2,"Process technology scaling and hardware architecture specialization have vastly increased the need for chip design space exploration, while optimizing for power, performance, and area. Hammer is an open-source, reusable physical design (PD) flow generator that reduces design effort and increases portability by enforcing a separation among design-, tool-, and process technology-specific concerns with a modular software architecture. In this work, we outline Hammer's structure and highlight recent extensions that support both physical chip designers and hardware architects evaluating the merit and feasibility of their proposed designs. This is accomplished through the integration of more tools and process technologies---some open-source---and the designer-driven development of flow step generators. An evaluation of chip designs in process technologies ranging from 130nm down to 12nm across a series of RISC-V-based chips shows how Hammer-generated flows are reusable and enable efficient optimization for diverse applications.","",""
13,"Harsha Nagarajan, Owen Lockwood, Carleton Coffrin","QuantumCircuitOpt: An Open-source Framework for Provably Optimal Quantum Circuit Design",2021,"","","","",167,"2024-08-22 15:04:59","","10.1109/QCS54837.2021.00010","","",,,,,13,4.33,4,3,3,"In recent years, the quantum computing community has seen an explosion of novel methods to implement non-trivial quantum computations on near-term hardware. An important direction of research has been to decompose an arbitrary entangled state, represented as a unitary, into a quantum circuit, that is, a sequence of gates supported by a quantum processor. It has been well known that circuits with longer decompositions and more entangling multi-qubit gates are error-prone for the current noisy, intermediate-scale quantum devices. To this end, there has been a significant interest to develop heuristic-based methods to discover compact circuits. We contribute to this effort by proposing QuantumCircuitOpt (QCOpt), a novel open-source framework which implements mathematical optimization formulations and algorithms for decomposing arbitrary unitary gates into a sequence of hardware-native gates. A core innovation of QCOpt is that it provides optimality guarantees on the quantum circuits that it produces. In particular, we show that QCOpt can find up to 57% reduction in the number of necessary gates on circuits with up to four qubits, and in run times less than a few minutes on commodity computing hardware. We also validate the efficacy of QCOpt as a tool for quantum circuit design in comparison with a naive brute-force enumeration algorithm. We also show how the QCOpt package can be adapted to various built-in types of native gate sets, based on different hardware platforms like those produced by IBM, Rigetti and Google. We hope this package will facilitate further algorithmic exploration for quantum processor designers, as well as quantum physicists.","",""
33,"Hasan Fayyad-Kazan, Luc Perneel, M. Timmerman","Benchmarking the Performance of Microsoft Hyper-V server, VMware ESXi and Xen Hypervisors",2013,"","","","",825,"2024-08-22 15:04:59","","","","",,,,,33,3.00,11,3,11,"Virtualization is a technology that allows the physical machine resources to be shared among different virtual machines (VMs). It is provided by a software layer called hypervisor or Virtual Machine Monitor (VMM). The hypervisor abstracts the hardware from the operating system permitting multiple operating systems to run simultaneously on the same hardware. Many different hypervisors--both open source and commercial-- exist today and are widely used in parallel and distributed computing. While the goals of these hypervisors are the same, the underlying technologies vary. Our target hypervisors in this paper are: Microsoft (MS) Hyper-V Server, VMware vSphere ESXi and Xen. MS Hyper-V Server and Xen are micro-kernelized hypervisors which leverage para-virtualization together with full-virtualization/hardware-assisted virtualization approaches, while ESXi is a monolithic hypervisor supporting only full-virtualization/hardware-assisted approach. A series of performance experiments are conducted on each virtualization approach of the latest versions (at the time of this study which started in May 2013) for the mentioned hypervisors using Linux PREEMPT-RT as the guest operating system. This paper discusses and compares the results of these experiments.","",""
54,"Hasan Genç, Ameer Haj-Ali, Vighnesh Iyer, Alon Amid, Howard Mao, J. Wright, Colin Schmidt, Jerry Zhao, Albert J. Ou, Max Banister, Y. Shao, B. Nikolić, Ion Stoica, K. Asanović","Gemmini: An Agile Systolic Array Generator Enabling Systematic Evaluations of Deep-Learning Architectures",2019,"","","","",645,"2024-08-22 15:04:59","","","","",,,,,54,10.80,5,14,5,"Advances in deep learning and neural networks have resulted in the rapid development of hardware accelerators that support them. A large majority of ASIC accelerators, however, target a single hardware design point to accelerate the main computational kernels of deep neural networks such as convolutions or matrix multiplication. On the other hand, the spectrum of use-cases for neural network accelerators, ranging from edge devices to cloud, presents a prime opportunity for agile hardware design and generator methodologies. We present Gemmini -- an open source and agile systolic array generator enabling systematic evaluations of deep-learning architectures. Gemmini generates a custom ASIC accelerator for matrix multiplication based on a systolic array architecture, complete with additional functions for neural network inference. Gemmini runs with the RISC-V ISA, and is integrated with the Rocket Chip System-on-Chip generator ecosystem, including Rocket in-order cores and BOOM out-of-order cores. Through an elaborate design space exploration case study, this work demonstrates the selection processes of various parameters for the use-case of inference on edge devices. Selected design points achieve two to three orders of magnitude speedup in deep neural network inference compared to the baseline execution on a host processor. Gemmini-generated accelerators were used in the fabrication of test systems-on-chip in TSMC 16nm and Intel 22FFL process technologies.","",""
119,"Hasan Hassan, Nandita Vijaykumar, S. Khan, Saugata Ghose, K. Chang, Gennady Pekhimenko, Donghyuk Lee, Oğuz Ergin, O. Mutlu","SoftMC: A Flexible and Practical Open-Source Infrastructure for Enabling Experimental DRAM Studies",2017,"","","","",260,"2024-08-22 15:04:59","","10.1109/HPCA.2017.62","","",,,,,119,17.00,13,9,7,"DRAM is the primary technology used for main memory in modern systems. Unfortunately, as DRAM scales down to smaller technology nodes, it faces key challenges in both data integrity and latency, which strongly affects overall system reliability and performance. To develop reliable and high-performance DRAM-based main memory in future systems, it is critical to characterize, understand, and analyze various aspects (e.g., reliability, latency) of existing DRAM chips. To enable this, there is a strong need for a publicly-available DRAM testing infrastructure that can flexibly and efficiently test DRAM chips in a manner accessible to both software and hardware developers. This paper develops the first such infrastructure, SoftMC (Soft Memory Controller), an FPGA-based testing platform that can control and test memory modules designed for the commonly-used DDR (Double Data Rate) interface. SoftMC has two key properties: (i) it provides flexibility to thoroughly control memory behavior or to implement a wide range of mechanisms using DDR commands, and (ii) it is easy to use as it provides a simple and intuitive high-level programming interface for users, completely hiding the low-level details of the FPGA. We demonstrate the capability, flexibility, and programming ease of SoftMC with two example use cases. First, we implement a test that characterizes the retention time of DRAM cells. Experimental results we obtain using SoftMC are consistent with the findings of prior studies on retention time in modern DRAM, which serves as a validation of our infrastructure. Second, we validate two recently-proposed mechanisms, which rely on accessing recently-refreshed or recently-accessed DRAM cells faster than other DRAM cells. Using our infrastructure, we show that the expected latency reduction effect of these mechanisms is not observable in existing DRAM chips, which demonstrates the usefulness of SoftMC in testing new ideas on existing memory modules. We discuss several other use cases of SoftMC, including the ability to characterize emerging non-volatile memory modules that obey the DDR standard. We hope that our open-source release of SoftMC fills a gap in the space of publicly-available experimental memory testing infrastructures and inspires new studies, ideas, and methodologies in memory system design.","",""
33,"Helmut Faugel, Volodymyr V Bobkov","Open source hard- and software: Using Arduino boards to keep old hardware running",2013,"","","","",220,"2024-08-22 15:04:59","","10.1016/J.FUSENGDES.2012.12.005","","",,,,,33,3.00,17,2,11,"","",""
22,"Hemmings C. H. Wu, Hartwin Ghekiere, Dorien Beeckmans, T. Tambuyzer, K. van Kuyck, J. Aerts, B. Nuttin","Conceptualization and validation of an open-source closed-loop deep brain stimulation system in rat",2015,"","","","",313,"2024-08-22 15:04:59","","10.1038/srep09921","","",,,,,22,2.44,3,7,9,"","",""
15,"Henrik Aamisepp, D. Nilsson","Haptic hardware support in a 3D game engine",2003,"","","","",735,"2024-08-22 15:04:59","","","","",,,,,15,0.71,8,2,21,"The aim of this master's thesis is to find out if it is possible to integrate haptic hardware support in the open source 3D game engine Crystal Space. Integrating haptic support would make it possible to get a haptic representation of 3D geometry in Crystal Space and therefore take advantage of all the benefits a 3D game engine provides, when building haptic applications. An implementation of the support should be as low-cost as possible by taking advantage of available open source haptic API alternatives. The thesis report presents an evaluation of available haptic APIs and comes up with a design and an implementation. The solution has been implemented as a Crystal Space plugin by using modified parts of the e-Touch open module API. The plugin makes it possible to utilize the Phantom haptic device to touch and feel the 3D environments in a Crystal Space application. Two demo applications have also been constructed to show the capabilities of the plugin.","",""
176,"Heshan Lin, Xiaosong Ma, J. Archuleta, Wu-chun Feng, M. Gardner, Zhe Zhang","MOON: MapReduce On Opportunistic eNvironments",2010,"","","","",986,"2024-08-22 15:04:59","","10.1145/1851476.1851489","","",,,,,176,12.57,29,6,14,"MapReduce offers an ease-of-use programming paradigm for processing large data sets, making it an attractive model for distributed volunteer computing systems. However, unlike on dedicated resources, where MapReduce has mostly been deployed, such volunteer computing systems have significantly higher rates of node unavailability. Furthermore, nodes are not fully controlled by the MapReduce framework. Consequently, we found the data and task replication scheme adopted by existing MapReduce implementations woefully inadequate for resources with high unavailability.  To address this, we propose MOON, short for MapReduce On Opportunistic eNvironments. MOON extends Hadoop, an open-source implementation of MapReduce, with adaptive task and data scheduling algorithms in order to offer reliable MapReduce services on a hybrid resource architecture, where volunteer computing systems are supplemented by a small set of dedicated nodes. Our tests on an emulated volunteer computing system, which uses a 60-node cluster where each node possesses a similar hardware configuration to a typical computer in a student lab, demonstrate that MOON can deliver a three-fold performance improvement to Hadoop in volatile, volunteer computing environments.","",""
173,"Hideaki Kimura","FOEDUS: OLTP Engine for a Thousand Cores and NVRAM",2015,"","","","",610,"2024-08-22 15:04:59","","10.1145/2723372.2746480","","",,,,,173,19.22,173,1,9,"Server hardware is about to drastically change. As typified by emerging hardware such as UC Berkeley's Firebox project and by Intel's Rack-Scale Architecture (RSA), next generation servers will have thousands of cores, large DRAM, and huge NVRAM. We analyze the characteristics of these machines and find that no existing database is appropriate. Hence, we are developing FOEDUS, an open-source, from-scratch database engine whose architecture is drastically different from traditional databases. It extends in-memory database technologies to further scale up and also allows transactions to efficiently manipulate data pages in both DRAM and NVRAM. We evaluate the performance of FOEDUS in a large NUMA machine (16 sockets and 240 physical cores) and find that FOEDUS achieves multiple orders of magnitude higher TPC-C throughput compared to H-Store with anti-caching.","",""
108,"Hong Zhang, Benjamin Ransford","Moo : A Batteryless Computational RFID and Sensing Platform",2011,"","","","",736,"2024-08-22 15:04:59","","","","",,,,,108,8.31,54,2,13,"The UMass Moo is a passively powered computational RFID that harvests RFID reader energy from the UHF band, communicates with an RFID reader, and processes data from its onboard sensors. Its function can be extended via its general-purpose I/Os, serial buses, and 12-bit ADC/DAC ports. Based on the Intel DL WISP (revision 4.1), the Moo provides an RFID-scale, reprogrammable, batteryless sensing platform. This report compares the Moo to its ancestor, documents our design decisions, and details the Moo’s compatibility with other devices. It is meant to be a companion document for the open-source release of code and specifications for the Moo (revision 1.x). We made an initial batch of Moo 1.1 hardware available to other researchers in June 2011.","",""
43,"Hyoukjun Kwon, Michael Pellauer, T. Krishna","MAESTRO: An Open-source Infrastructure for Modeling Dataflows within Deep Learning Accelerators",2018,"","","","",251,"2024-08-22 15:04:59","","","","",,,,,43,7.17,14,3,6,"We present MAESTRO, a framework to describe and analyze CNN dataflows, and predict performance and energy-efficiency when running neural network layers across various hardware configurations. This includes two components: (i) a concise language to describe arbitrary dataflows and (ii) and analysis framework that accepts the dataflow description, hardware resource description, and DNN layer description as inputs and generates buffer requirements, buffer access counts, network-on-chip (NoC) bandwidth requirements, and roofline performance information. We demonstrate both components across several dataflows as case studies.","",""
34,"I. Haque, V. Pande","PAPER—Accelerating parallel evaluations of ROCS",2010,"","","","",856,"2024-08-22 15:04:59","","10.1002/jcc.21307","","",,,,,34,2.43,17,2,14,"Modern graphics processing units (GPUs) are flexibly programmable and have peak computational throughput significantly faster than conventional CPUs. Herein, we describe the design and implementation of PAPER, an open‐source implementation of Gaussian molecular shape overlay for NVIDIA GPUs. We demonstrate one to two order‐of‐magnitude speedups on high‐end commodity GPU hardware relative to a reference CPU implementation of the shape overlay algorithm and speedups of over one order of magnitude relative to the commercial OpenEye ROCS package. In addition, we describe errors incurred by approximations used in common implementations of the algorithm. © 2009 Wiley Periodicals, Inc. J Comput Chem 2010","",""
65,"I. Jimenez, Michael Sevilla, Noah Watkins, C. Maltzahn, J. Lofstead, K. Mohror, Andrea C. Arpaci-Dusseau, Remzi H. Arpaci-Dusseau","The Popper Convention: Making Reproducible Systems Evaluation Practical",2017,"","","","",689,"2024-08-22 15:04:59","","10.1109/IPDPSW.2017.157","","",,,,,65,9.29,8,8,7,"Independent validation of experimental results in the field of systems research is a challenging task, mainly due to differences in software and hardware in computational environments. Recreating an environment that resembles the original is difficult and time-consuming. In this paper we introduce _Popper_, a convention based on a set of modern open source software (OSS) development principles for generating reproducible scientific publications. Concretely, we make the case for treating an article as an OSS project following a DevOps approach and applying software engineering best-practices to manage its associated artifacts and maintain the reproducibility of its findings. Popper leverages existing cloud-computing infrastructure and DevOps tools to produce academic articles that are easy to validate and extend. We present a use case that illustrates the usefulness of this approach. We show how, by following the _Popper_ convention, reviewers and researchers can quickly get to the point of getting results without relying on the original author's intervention.","",""
95,"I. Konstantinou, E. Angelou, Christina Boumpouka, Dimitrios Tsoumakos, N. Koziris","On the elasticity of NoSQL databases over cloud management platforms",2011,"","","","",750,"2024-08-22 15:04:59","","10.1145/2063576.2063973","","",,,,,95,7.31,19,5,13,"NoSQL databases focus on analytical processing of large scale datasets, offering increased scalability over commodity hardware. One of their strongest features is elasticity, which allows for fairly portioned premiums and high-quality performance and directly applies to the philosophy of a cloud-based platform. Yet, the process of adaptive expansion and contraction of resources usually involves a lot of manual effort during cluster configuration. To date, there exists no comparative study to quantify this cost and measure the efficacy of NoSQL engines that offer this feature over a cloud provider. In this work, we present a cloud-enabled framework for adaptive monitoring of NoSQL systems. We perform a study of the elasticity feature on some of the most popular NoSQL databases over an open-source cloud platform. Based on these measurements, we finally present a prototype implementation of a decision making system that enables automatic elastic operations of any NoSQL engine based on administrator or application-specified constraints.","",""
38,"I. Parulkar, A. Wood, J. Hoe, B. Falsafi, S. Adve, J. Torrellas","OpenSPARC : An Open Platform for Hardware Reliability Experimentation",2008,"","","","",518,"2024-08-22 15:04:59","","","","",,,,,38,2.38,6,6,16,"TM T1 and T2 chip multi-threaded (CMT) microprocessors[1]. The UltraSPARC TM T2 processor is the industry's first ""server on a chip"", with 8 cores, 64 threads and on-chip networking and security. The richness of the RTL source code, tools and information in OpenSPARC has made it a comprehensive, practical and relevant platform for research in several areas of computing. This paper highlights the potential of using OpenSPARC for research in hardware reliability. Examples of university research projects, results achieved, benefits gained and lessons learned using OpenSPARC are described. Future research directions in reliability based on OpenSPARC are proposed. I.INTRODUCTION istorically, microprocessors have been designed to improve the execution performance of single thread programs by exploiting instruction level parallelism (ILP). Common techniques used to improve single thread performance are deep pipelines, multiple instruction issue, speculation, and out-of-order instruction execution. Recently, these techniques have reached a point of diminishing returns because of inherently low or hard to exploit application ILP [2]. Techniques used to improve single thread performance often give rise to complex processor designs with poor pipeline efficiencies and high power consumption H OpenSPARC is based on Sun's UltraSPARC TM T1 [3],[4] and T2 [5],[6],[7] microprocessors, which are designed for commercial workloads that exhibit large amounts of thread level parallelism (TLP). UltraSPARC TM T1 and T2 employ chip multi-threading (CMT) technology to achieve high throughput on commercial workloads by taking advantage of the TLP inherent to such workloads. OpenSPARC is an open source community based around hardware design and experimentation aids for UltraSPARC TM T1 and T2. OpenSPARC provides open source availability of  The author is also affiliated with the School of Computer and Communication Sciences, École Polytechnique Fédérale de Lausanne. complete micro-architecture specifications, Verilog RTL code, a full suite of RTL and architectural simulations and infrastructure, FPGA implementations of the microprocessors, reference boards with microprocessors, hypervisor code and multiple operating system ports [1]. This paper briefly describes the UltraSPARC TM T1 and T2 architecture upon which OpenSPARC is based. The reliability and error management features of the architecture are discussed, especially the benefits of lower temperature operation achieved through reduced power consumption. Some ongoing research projects in hardware reliability at universities designated as OpenSPARC Centers of Excellence – are described along with their experiences in using OpenSPARC for the research. Future research directions in hardware reliability, error management, fault tolerance and on-line test based on OpenSPARC are proposed in …","",""
34,"I. Voras, B. Mihaljević, Marin Orlic, Marko Pletikosa, M. Zagar, Tomislav Pavic, K. Zimmer, I. Cavrak, V. Paunovic, I. Bosnic, S. Tomic","Evaluating open-source cloud computing solutions",2011,"","","","",392,"2024-08-22 15:04:59","","","","",,,,,34,2.62,3,11,13,"Cloud computing is becoming a mainstream technology in enterprise environment, promising more efficient use of hardware resources through virtualization, elastic computing facilities and secure management of user applications. Various cloud computing architectures are emerging and several commercial and open source products on the market advertise a rich feature-set. While commercial vendors try to give potential users the (not necessarily unbiased) tools to reason on the comparative advantages of their product, the open source community trusts users to make a well-informed selection on their own. In this paper we take a look at the open source cloud solutions and discuss the criteria that can be used to evaluate the stability, performance and features of open source clouds, and compare some available solutions. The evaluation criteria focus on three main components of a cloud solution — the storage layer, the virtualization layer, and the management layer. In addition, we explain the motivation for application of open source cloud solutions from an enterprise perspective, and discuss the potential benefits of these solutions for private cloud computing environments.","",""
12,"I. Zualkernan","InfoCoral: Open-Source Hardware for Low-Cost, High-Density Concurrent Simple Response Ubiquitous Systems",2011,"","","","",145,"2024-08-22 15:04:59","","10.1109/ICALT.2011.198","","",,,,,12,0.92,12,1,13,"A Clicker or a wireless student response system is an example of a high density simple response ubiquitous system that processes real-time simple responses from a large number of students in a controlled environment like a classroom. Currently such systems are expensive and use proprietary hardware which makes it difficult to extend them for novel learning scenarios. This paper presents the design and implementation of a hybrid low-cost open-source hardware platform called Info Coral that uses the 1-Wire wired protocol in conjunction with Bluetooth or a Zigbee wireless interface. The hardware also employs the open-source Arduino software for ease of programming and customization. A Case study of applying this platform to build a low-cost clicker system for a K-12 classroom is also presented.","",""
42,"Ibrahim Haddad Ericsson","Proceedings of the FREENIX Track: 2004 USENIX Annual Technical Conference, June 27 - July 2, 2004, Boston Marriott Copley Place, Boston, MA, USA",2004,"","","","",865,"2024-08-22 15:04:59","","","","",,,,,42,2.10,42,1,20,"Traditionally, communications and data service networks were built on proprietary platforms that had to meet very specific availability, reliability, performance, and service response time requirements. Today, communications service providers are challenged to meet their needs cost-effectively for new architectures, new services, and increased bandwidth, with highly available, scalable, secure, and reliable systems that have predictable performance and that are easy to maintain and upgrade. This paper presents the technological trend of migrating from proprietary to open platforms based on software and hardware building blocks. The paper focuses on the ongoing work by the Carrier Grade Linux (CGL) working group at the Open Source Development Labs, examines the CGL architecture, the requirements from the latest specification release, and presents some of the needed kernel features that are not currently supported on Linux. 1. Open, standardized, and modular platforms The demand for rich media and enhanced communications services is rapidly leading to significant changes in the communications industry such as the convergence of data and voice technologies. The transition to packet-based, converged, multi-service IP networks require a carrier grade infrastructure based on interoperable hardware and software building blocks, management middleware and applications, implemented with standard interfaces. The communications industry is witnessing a technology trend moving away from proprietary systems toward open and standardized systems, built using modular and flexible hardware and software (operating system and middleware) common off the shelf components. The trend is to proceed forward delivering next generation and multimedia communication services, using open standard carrier grade platforms. This trend is motivated by the expectations that open platforms are going to reduce the cost and risks of developing and delivering rich communications services; they will enable faster time to market and ensure portability and interoperability between various components from different providers. One frequently asked question is: How can we meet tomorrow’s requirements using existing infrastructures and technologies? Proprietary platforms are closed systems, expensive to develop, and often lacking support of the current and upcoming standards. Using such closed platforms to meet tomorrow’s requirements for new architectures and services is almost impossible. A uniform, open software environment with the characteristics demanded by telecom applications, combined with commercial off-the-shelf software and hardware components is a necessary part of these new architec-","",""
43,"Inkyu Sa, Mina Kamel, M. Burri, Michael Bloesch, R. Khanna, Marija Popovic, Juan I. Nieto, R. Siegwart","Build Your Own Visual-Inertial Drone: A Cost-Effective and Open-Source Autonomous Drone",2017,"","","","",278,"2024-08-22 15:04:59","","10.1109/MRA.2017.2771326","","",,,,,43,6.14,5,8,7,"This article describes an approach to building a cost-effective and research-grade visual-inertial (VI) odometry-aided vertical takeoff and landing (VTOL) platform. We utilize an off-the-shelf VI sensor, an onboard computer, and a quadrotor platform, all of which are factory calibrated and mass produced, thereby sharing similar hardware and sensor specifications [e.g., mass, dimensions, intrinsic and extrinsic of camera-inertial measurement unit (IMU) systems, and signal-to-noise ratio]. We then perform system calibration and identification, enabling the use of our VI odometry, multisensor fusion (MSF), and model predictive control (MPC) frameworks with off-the-shelf products. This approach partially circumvents the tedious parameter-tuning procedures required to build a full system. The complete system is extensively evaluated both indoors using a motioncapture system and outdoors using a laser tracker while performing hover and step responses and trajectory-following tasks in the presence of external wind disturbances. We achieve root-mean-square (rms) pose errors of 0.036 m with respect to reference hover trajectories. We also conduct relatively long distance (.180 m) experiments on a farm site, demonstrating a 0.82% drift error of the total flight distance. This article conveys the insights we acquired about the platform and sensor module and offers open-source code with tutorial documentation to the community.","",""
125,"Ioana Baldini, P. Cheng, Stephen J. Fink, N. Mitchell, Vinod Muthusamy, Rodric M. Rabbah, Philippe Suter, O. Tardieu","The serverless trilemma: function composition for serverless computing",2017,"","","","",988,"2024-08-22 15:04:59","","10.1145/3133850.3133855","","",,,,,125,17.86,16,8,7,"The field of serverless computing has recently emerged in support of highly scalable, event-driven applications. A serverless application is a set of stateless functions, along with the events that should trigger their activation. A serverless runtime allocates resources as events arrive, avoiding the need for costly pre-allocated or dedicated hardware. While an attractive economic proposition, serverless computing currently lags behind the state of the art when it comes to function composition. This paper addresses the challenge of programming a composition of functions, where the composition is itself a serverless function. We demonstrate that engineering function composition into a serverless application is possible, but requires a careful evaluation of trade-offs. To help in evaluating these trade-offs, we identify three competing constraints: functions should be considered as black boxes; function composition should obey a substitution principle with respect to synchronous invocation; and invocations should not be double-billed. Furthermore, we argue that, if the serverless runtime is limited to a reactive core, i.e. one that deals only with dispatching functions in response to events, then these constraints form the serverless trilemma. Without specific runtime support, compositions-as-functions must violate at least one of the three constraints. Finally, we demonstrate an extension to the reactive core of an open-source serverless runtime that enables the sequential composition of functions in a trilemma-satisfying way. We conjecture that this technique could be generalized to support other combinations of functions.","",""
62,"Isaac Núñez, Tamara Matúte, Roberto Herrera, J. Keymer, T. Marzullo, T. Rudge, Fernán Federici","Low cost and open source multi-fluorescence imaging system for teaching and research in biology and bioengineering",2017,"","","","",256,"2024-08-22 15:04:59","","10.1101/194324","","",,,,,62,8.86,9,7,7,"The advent of easy-to-use open source microcontrollers, off-the-shelf electronics and customizable manufacturing technologies has facilitated the development of inexpensive scientific devices and laboratory equipment. In this study, we describe an imaging system that integrates low-cost and open-source hardware, software and genetic resources. The multi-fluorescence imaging system consists of readily available 470 nm LEDs, a Raspberry Pi camera and a set of filters made with low cost acrylics. This device allows imaging in scales ranging from single colonies to entire plates. We developed a set of genetic components (e.g. promoters, coding sequences, terminators) and vectors following the standard framework of Golden Gate, which allowed the fabrication of genetic constructs in a combinatorial, low cost and robust manner. In order to provide simultaneous imaging of multiple wavelength signals, we screened a series of long stokes shift fluorescent proteins that could be combined with cyan/green fluorescent proteins. We found CyOFP1, mBeRFP and sfGFP to be the most compatible set for 3-channel fluorescent imaging. We developed open source Python code to operate the hardware to run time-lapse experiments with automated control of illumination and camera and a Python module to analyze data and extract meaningful biological information. To demonstrate the potential application of this integral system, we tested its performance on a diverse range of imaging assays often used in disciplines such as microbial ecology, microbiology and synthetic biology. We also assessed its potential for STEM teaching in a high school environment, using it to teach biology, hardware design, optics, and programming. Together, these results demonstrate the successful integration of open source hardware, software, genetic resources and customizable manufacturing to obtain a powerful, low cost and robust system for STEM education, scientific research and bioengineering. All the resources developed here are available under open source licenses.","",""
23,"Isabella Thomm, Michael Stilkerich, Christian Wawersich, Wolfgang Schröder-Preikschat","KESO: an open-source multi-JVM for deeply embedded systems",2010,"","","","",425,"2024-08-22 15:04:59","","10.1145/1850771.1850788","","",,,,,23,1.64,6,4,14,"Java still is a rather exotic language in the field of real-time and particularly embedded systems, though it could provide productivity and especially safety and dependability benefits over the dominating language C. The reasons for the lack of acceptance of Java in the embedded world are the high resource consumption caused by the Java runtime environment and lacking language features for low-level programming.  KESO is a JVM under LGPL license that was specifically designed for the domain of statically-configured deeply embedded systems. KESO provides a sensible selection of Java features useful to the majority of embedded applications and safe and convenient constructs for low-level programming in Java. A key feature of KESO is its Multi-JVM architecture, which allows the isolated cohabitation of different applications on one hardware platform.  The resource consumption of applications developed on the base of KESO is comparable to C applications, and its mechanisms for communicating among isolated components are efficient and encourage the actual utilization of spatial isolation.","",""
53,"Isaías González, A. J. Calderón","Integration of open source hardware Arduino platform in automation systems applied to Smart Grids/Micro-Grids",2019,"","","","",30,"2024-08-22 15:04:59","","10.1016/j.seta.2019.100557","","",,,,,53,10.60,27,2,5,"","",""
64,"Isaías González, A. J. Calderón, José María Portalo","Innovative Multi-Layered Architecture for Heterogeneous Automation and Monitoring Systems: Application Case of a Photovoltaic Smart Microgrid",2021,"","","","",573,"2024-08-22 15:04:59","","10.3390/SU13042234","","",,,,,64,21.33,21,3,3,"Intelligent energy facilities, e.g., smart grids and microgrids are the evolution of traditional energy grids through digital transformation. These modern paradigms are expected to foster the utilization of renewable energies, sustainable development, and resilience of the power grid. A barrier found when deploying experimental smart grids and microgrids consists of handling the heterogeneity of the required hardware and software components as well as the available commercial equipment. Despite the fact that there is various architecture proposed in previous literature, it commonly lacks experimental validation, specification of involved equipment concerning industrial/proprietary or open-source nature, and concretization of communication protocols. To overcome such drawbacks, this paper proposes an innovative multi-layered architecture to deploy heterogeneous automation and monitoring systems for microgrids. The architecture is structured into six functional layers to organize the hardware and software equipment in an integrated manner. The open protocol Modbus TCP is chosen to harmonize communications, enabling the interconnection of equipment from industrial and energy scopes, indeed of open-source nature. An experimental photovoltaic-based smart microgrid is reported as the application case to demonstrate the suitability and validity of the proposal.","",""
19,"Isaías González, José María Portalo Calero, A. J. Calderón","Configurable IoT Open-Source Hardware and Software I-V Curve Tracer for Photovoltaic Generators",2021,"","","","",7,"2024-08-22 15:04:59","","10.3390/s21227650","","",,,,,19,6.33,6,3,3,"Photovoltaic (PV) energy is a renewable energy resource which is being widely integrated in intelligent power grids, smart grids, and microgrids. To characterize and monitor the behavior of PV modules, current-voltage (I-V) curves are essential. In this regard, Internet of Things (IoT) technologies provide versatile and powerful tools, constituting a modern trend in the design of sensing and data acquisition systems for I-V curve tracing. This paper presents a novel I-V curve tracer based on IoT open-source hardware and software. Namely, a Raspberry Pi microcomputer composes the hardware level, whilst the applied software comprises mariaDB, Python, and Grafana. All the tasks required for curve tracing are automated: load sweep, data acquisition, data storage, communications, and real-time visualization. Modern and legacy communication protocols are handled for seamless data exchange with a programmable logic controller and a programmable load. The development of the system is expounded, and experimental results are reported to prove the suitability and validity of the proposal. In particular, I-V curve tracing of a monocrystalline PV generator under real operating conditions is successfully conducted.","",""
24,"Ismael Gómez Miguelez, V. Marojevic, A. Gelonch","Aloe: An open-source SDR execution environment with cognitive computing resource management capabilities",2011,"","","","",395,"2024-08-22 15:04:59","","10.1109/MCOM.2011.6011737","","",,,,,24,1.85,8,3,13,"Future radio transceivers will offer more functionalities and system features for potentiating flexible and reconfigurable radio access networks. Since flexibility in this case comes at a price of computing resource overhead, we propose a conceptually simple though powerful framework for digital signal processing applications. The abstraction layer and operating environment (ALOE) is an open source execution environment for software- defined radios. It is essentially based on a hardware abstraction layer, a lightweight and time-driven software architecture, and a simple interface format. ALOE accounts for heterogeneous multiprocessor platforms. Its cognitive computing resource management capabilities enable flexible and dynamic management of SDR platforms and applications for distributed realtime execution of applications and dynamic reconfiguration of platforms.","",""
23,"Ismo T. S. Heikkinen, H. Savin, J. Partanen, J. Seppälä, Joshua M. Pearce","Towards national policy for open source hardware research: The case of Finland",2020,"","","","",24,"2024-08-22 15:04:59","","10.1016/j.techfore.2020.119986","","",,,,,23,5.75,5,5,4,"","",""
19,"Israel Joel Koenka, Jorge Sáiz, P. Hauser","Instrumentino: An Open-Source Software for Scientific Instruments.",2015,"","","","",322,"2024-08-22 15:04:59","","10.2533/CHIMIA.2015.172","","",,,,,19,2.11,6,3,9,"Scientists often need to build dedicated computer-controlled experimental systems. For this purpose, it is becoming common to employ open-source microcontroller platforms, such as the Arduino. These boards and associated integrated software development environments provide affordable yet powerful solutions for the implementation of hardware control of transducers and acquisition of signals from detectors and sensors. It is, however, a challenge to write programs that allow interactive use of such arrangements from a personal computer. This task is particularly complex if some of the included hardware components are connected directly to the computer and not via the microcontroller. A graphical user interface framework, Instrumentino, was therefore developed to allow the creation of control programs for complex systems with minimal programming effort. By writing a single code file, a powerful custom user interface is generated, which enables the automatic running of elaborate operation sequences and observation of acquired experimental data in real time. The framework, which is written in Python, allows extension by users, and is made available as an open source project.","",""
212,"Iulian Neamtiu, M. Hicks, G. Stoyle, M. Oriol","Practical dynamic software updating for C",2006,"","","","",756,"2024-08-22 15:04:59","","10.1145/1133981.1133991","","",,,,,212,11.78,53,4,18,"Software updates typically require stopping and restarting an application, but many systems cannot afford to halt service, or would prefer not to. Dynamic software updating (DSU) addresses this difficulty by permitting programs to be updated while they run. DSU is appealing compared to other approaches for on-line upgrades because it is quite general and requires no redundant hardware. The challenge is in making DSU practical: it should be flexible, and yet safe, efficient, and easy to use.In this paper, we present Ginseng, a DSU implementation for C that aims to meet this challenge. We compile programs specially so that they can be dynamically patched, and generate most of a dynamic patch automatically. Ginseng performs a series of analyses that when combined with some simple runtime support ensure that an update will not violate type-safety while guaranteeing that data is kept up-to-date. We have used Ginseng to construct and dynamically apply patches to three substantial open-source server programs---Very Secure FTP daemon, OpenSSH sshd daemon, and GNU Zebra. In total, we dynamically patched each program with three years' worth of releases. Though the programs changed substantially, the majority of updates were easy to generate. Performance experiments show that all patches could be applied in less than 5 ms, and that the overhead on application throughput due to updating support ranged from 0 to at most 32%.","",""
62,"Ivan Dryanovski, Roberto G. Valenti, Jizhong Xiao","An open-source navigation system for micro aerial vehicles",2013,"","","","",351,"2024-08-22 15:04:59","","10.1007/s10514-012-9318-8","","",,,,,62,5.64,21,3,11,"","",""
39,"Ivan Dryanovski, William Morris, Jizhong Xiao","An open-source pose estimation system for micro-air vehicles",2011,"","","","",390,"2024-08-22 15:04:59","","10.1109/ICRA.2011.5980315","","",,,,,39,3.00,13,3,13,"This paper presents the implementation of an open-source 6-DoF pose estimation system for micro-air vehicles and considers the future implications and benefits of open-source robotics. The system is designed to provide high frequency pose estimates in unknown, GPS-denied indoor environments. It requires a minimal set of sensors including a planar laser range-finder and an IMU sensor. The code is optimized to run entirely onboard, so no wireless link and ground station are explicitly needed. A major focus in our work is modularity, allowing each component to be benchmarked individually, or swapped out for a different implementation, without change to the rest of the system. We demonstrate how the pose estimation can be used for 2D SLAM or 3D mapping experiments. All the software and hardware which we have developed, as well as extensive documentation and test data, is available online.","",""
167,"Iván Froiz-Míguez, T. Fernández-Caramés, Paula Fraga-Lamas, L. Castedo","Design, Implementation and Practical Evaluation of an IoT Home Automation System for Fog Computing Applications Based on MQTT and ZigBee-WiFi Sensor Nodes",2018,"","","","",979,"2024-08-22 15:04:59","","10.3390/s18082660","","",,,,,167,27.83,42,4,6,"In recent years, the improvement of wireless protocols, the development of cloud services and the lower cost of hardware have started a new era for smart homes. One such enabling technologies is fog computing, which extends cloud computing to the edge of a network allowing for developing novel Internet of Things (IoT) applications and services. Under the IoT fog computing paradigm, IoT gateways are usually utilized to exchange messages with IoT nodes and a cloud. WiFi and ZigBee stand out as preferred communication technologies for smart homes. WiFi has become very popular, but it has a limited application due to its high energy consumption and the lack of standard mesh networking capabilities for low-power devices. For such reasons, ZigBee was selected by many manufacturers for developing wireless home automation devices. As a consequence, these technologies may coexist in the 2.4 GHz band, which leads to collisions, lower speed rates and increased communications latencies. This article presents ZiWi, a distributed fog computing Home Automation System (HAS) that allows for carrying out seamless communications among ZigBee and WiFi devices. This approach diverges from traditional home automation systems, which often rely on expensive central controllers. In addition, to ease the platform’s building process, whenever possible, the system makes use of open-source software (all the code of the nodes is available on GitHub) and Commercial Off-The-Shelf (COTS) hardware. The initial results, which were obtained in a number of representative home scenarios, show that the developed fog services respond several times faster than the evaluated cloud services, and that cross-interference has to be taken seriously to prevent collisions. In addition, the current consumption of ZiWi’s nodes was measured, showing the impact of encryption mechanisms.","",""
13,"J. A. Castro-García, A. J. Molina-Cantero, Manuel Merino-Monge, I. M. Gómez-González","An Open-Source Hardware Acquisition Platform for Physiological Measurements",2019,"","","","",25,"2024-08-22 15:04:59","","10.1109/JSEN.2019.2933917","","",,,,,13,2.60,3,4,5,"In this article we present a new low-cost physiological signal acquisition platform in compliance with Open-Source Hardware philosophy. The device contains an electrocardiography circuit; two electrodermal activity channels that implement a time-multiplexing technique to remove inter-channel coupling interference; and a skin temperature module. These features make the platform suitable for experiments involving Affective Computing. We have assessed the performance of this device in terms of Signal-to-Noise Ratio (SNR) and Background Noise Level (BNL), an adapted MPEG7 feature for electrocardiography signals. This platform outperforms other commercial devices and most similar state-of-art studies on SNR. Results show values of 11.96, 30.01, 68.40 dB for ECG, EDA and ST, respectively, for SNR, and −28.31 dB for BNL in ECG. Both features were obtained by sampling physiological signals at a frequency of 256 Hz.","",""
74,"J. Ahrenholz, T. Goff, B. Adamson","Integration of the CORE and EMANE Network Emulators",2011,"","","","",765,"2024-08-22 15:04:59","","10.1109/MILCOM.2011.6127585","","",,,,,74,5.69,25,3,13,"Researchers who evaluate networking protocols and applications can benefit significantly from the availability of flexible, open source tools. Network emulation has been one of the tools of choice for conducting experiments on commodity hardware, and for wireless MANET environments, in the absence of a possibly large number of radio devices. We present an easy-to-use system based on a combination of two such open source emulation tools. We describe integrating the Common Open Research Emulator (CORE), providing virtualization controlled by a graphical user interface, with the Extendable Mobile Ad-hoc Network Emulator (EMANE) framework that provides for more detailed radio models and scenarios. We discuss the benefits of integrating the two tools, along with challenges of this approach and how they were addressed. We address the performance experienced when using these more detailed link- and physical-layer models. Finally, we conclude with open issues and future directions.","",""
35,"J. Amacher, V. Schiavoni","On the Performance of ARM TrustZone - (Practical Experience Report)",2019,"","","","",688,"2024-08-22 15:04:59","","10.1007/978-3-030-22496-7_9","","",,,,,35,7.00,18,2,5,"","",""
164,"J. Babcock, J. Pelz","Building a lightweight eyetracking headgear",2004,"","","","",786,"2024-08-22 15:04:59","","10.1145/968363.968386","","",,,,,164,8.20,82,2,20,"Eyetracking systems that use video-based cameras to monitor the eye and scene can be made significantly smaller thanks to tiny micro-lens video cameras. Pupil detection algorithms are generally implemented in hardware, allowing for real-time eyetracking. However, it is likely that real-time eyetracking will soon be fully accomplished in software alone. This paper encourages an ""open-source"" approach to eyetracking by providing practical tips on building a lightweight eyetracker from commercially available micro-lens cameras and other parts. While the headgear described here can be used with any dark-pupil eyetracking controller, it also opens the door to open-source software solutions that could be developed by the eyetracking and image-processing communities. Such systems could be optimized without concern for real-time performance because the systems could be run offline.","",""
8,"J. Baxter","Open Source Hardware Development and the OpenRISC Project : A Review of the OpenRISC Architecture and Implementations",2011,"","","","",150,"2024-08-22 15:04:59","","","","",,,,,8,0.62,8,1,13,"Advances in the design and manufacture of microelectronic devices since the 1960s have enabled embedded computers that are ubiquitous. Microprocessors, the core component in modern computers, and their architectures have evolved continuously over this time, too. During the 1980s a new architectural approach, favoring a reduction in design complexity, emerged and became known as reduced instruction set computer, or RISC, architectures. The mid-1980s also saw the beginning of a widespread change in the attitudes towards computer software. The Free Software Foundation (FSF) was set up and aimed to foster the development of free (as in freedom) and open source software, as a reaction to increasingly protective measures software vendors were taking to restrict the use of their software. The concept of less restrictive software has proved successful but it took over fifteen years before this philosophy was applied to the discipline of electronic hardware design. One of the earliest and most prominent projects to do so was initiated in the late 1990s by a group of students aiming to develop an open source microprocessor architecture and set of implementations. Their goals were realised in the OpenRISC project, a RISC microprocessor specification and implementations. The initial development team then created OpenCores, an online open source hardware design community focusing on developing register transfer level (RTL) designs of functional cores based on the principles of the open source software movement. The application of open source principles to hardware design gathered pace throughout the decade that followed, but despite good progress early in the OpenRISC project, it slowed as the maintainers decided to pursue commercial interests and ceased development of the publicly released versions. Recent interest in the architecture, and increased uptake in use of open source hardware, has lead to a much-needed rejuvenation of the project. Twelve years on from the inception of the OpenRISC project, this work has lead to questions about the state of the open source hardware development movement, and about a possible successor to the first OpenRISC architecture. This document will discuss the underlying technologies and philosophies of the OpenRISC project, present the recent work on the platform, undertake a critical analysis of the project as a whole, and present a section on the future directions of the OpenRISC 1000 project in particular, and open source hardware development in general. Recommendations of specific work to be done on the project and arguments for the general direction of development are presented. Finally, the proposed successor architecture, OpenRISC 2000, is discussed.","",""
0,"J. Bennett","Protecting Open Source Hardware",2009,"","","","",184,"2024-08-22 15:04:59","","","","",,,,,0,0.00,0,1,15,"Protection for software produced under the GPL is well known and shown to be successful, based upon copyright protection and licensing. It is not so obvious that the same model can be moved over to hardware, since historically engineers have been allowed to reverse engineer products at will, so long as they are not protected by patents etc. The heart of the problem, so far as opens source hardware goes, is that the open source philosophy relies on the key principle that you are free to use my work, but only if you subsequently share your derived work, so the benefit continues. It relies on a suitable legal framework to enforce this ""contract"". Current developments in hardware are moves away from the traditional 'Von Neumann' architecture to multi-core, parallel processing forms and also system-on-a-chip approaches. These are very complex and difficult to produce and this is where companies seek to make money. Protection is important since special purpose chips are now part of almost every device being manufactured and markets can be large. It is not clear how best protection for these can be enabled--earlier forms such as 'mask protection' are no longer so relevant when the whole process of design and manufacture is through special purpose languages. The question we are setting in this call for papers is: what is the best method to enforce the open source philosophy for hardware, to ensure that contributions based upon the work of others remain open for others to develop. One example of the attempt to produce relevant licensing is the TAPR Open Hardware License--http://www.tapr.org/OHL which has been discussed by the open access community. However, since 'Open Source Hardware' is relatively unexplored in terms of legal issues, articles will be important contributions to the legal debate. We are seeking papers which look into the relevant issues and which might help to move the open source model into this new arena. Topics could include: 1. What are the issues which separate software and hardware open source models? 2. What elements of the GPL are appropriate or not appropriate for protecting hardware developments from freeloading? 3. Is a new 'Hardware GPL' model required? 4. Is hardware protection possible through the programming which underpins development? 5. What problems arise from 'contractual' models of protection? 6. Is it possible to develop an 'international' consensus on protection? 7. Can hardware--where it is not subject to patent--ever be protected anyway? These, of course, are the issues which lawyers looked at in terms of software in the 1980s. The developments in hardware ('chip') protection now mean that the same kinds of questions asked then, must be asked now, as the economics and manufacturing of chip technology moves into a new phase. Technical advice will be available to legal authors to ensure full understanding of these issues. An overview of current design and manufacturing contexts is attached. If you wish to contribute to the Special Edition, then please contact Philip Leith at p.leith@qub.ac.uk More Information 1. Technical Background There are two types of logic silicon chip in widespread use: (1) application specific integrated circuits (ASICs) and (2) programmable hardware chips of various types. In addition to these there are a number of different types of memory chips, which can be divided into (1) those that lose their memory when power is turned off (the Dynamic Random Access Memory (DRAM), and (2) those which retain their memory when power is turned off (Static Random Access Memory (SRAM) and flash programmable memory). Typically software programs are stored in the memory chip(s) and their behaviour executed on the logic chip. ASICs are a one-off manufacture. Once you have made one, its hardware logic is fixed. …","",""
20,"J. Bonvoisin, Jenny Molloy, Martin Haeuer, Tobias Wenzel","Standardisation of practices in Open Source Hardware",2020,"","","","",16,"2024-08-22 15:04:59","","10.5334/JOH.22","","",,,,,20,5.00,5,4,4,"Standardisation is an important component in the maturation of any field of technology. It contributes to the formation of a recognisable identity and enables interactions with a wider community. This article reviews past and current standardisation initiatives in the field of Open Source Hardware (OSH). While early initiatives focused on aspects such as licencing, intellectual property and documentation formats, recent efforts extend to ways for users to exercise their rights under open licences and to keep OSH projects discoverable and accessible online. We specifically introduce two standards that are currently being released and call for early users and contributors, the DIN SPEC 3105 and the Open Know How Manifest Specification. Finally, we reflect on challenges around standardisation in the community and relevant areas for future development such as an open tool chain, modularity and hardware specific interface standards.","",""
16,"J. Bonvoisin, Laetitia Thomas, Robert Mies, C. Gros, R. Stark, K. Samuel, R. Jochem, J. Boujut","Current state of practices in open source product development",2017,"","","","",291,"2024-08-22 15:04:59","","","","",,,,,16,2.29,2,8,7,"Open source innovation is a well-studied phenomenon of the ICT sector, but its evolution towards the field of tangible hardware product development is a newer phenomenon which remains mostly theoretical. Existing literature has identified that to push existing open source product development (OSPD) practice towards the achievement of high quality complex products, methods and tools adapted to this specific organisation of work are needed. The objective of this article is to explore the practices emerging from OSPD communities in order to support the development of appropriate process support in the future. It reports first observations made during a qualitative and comparative empirical study performed with participants of 23 OSPD projects through semi-directed interviews. Activating a formerly published framework, these observations address four themes: the organizational structure of OSPD’s surrounding communities, their design process, their underlying business models and the supporting online tools they use. The preliminary results are delivered to the engineering design and management scientific community as an impulse for further research.","",""
17,"J. Bonvoisin, Robert Mies","Measuring Openness in Open Source Hardware with the Open-o-Meter",2018,"","","","",64,"2024-08-22 15:04:59","","10.1016/J.PROCIR.2018.08.306","","",,,,,17,2.83,9,2,6,"","",""
41,"J. Bonvoisin, Robert Mies, J. Boujut, R. Stark","What is the “Source” of Open Source Hardware?",2017,"","","","",46,"2024-08-22 15:04:59","","10.5334/JOH.7","","",,,,,41,5.86,10,4,7,"What “open source” means once applied to tangible products has been so far mostly addressed through the light of licensing. While this approach is suitable for software, it appears to be over-simplistic for complex hardware products. Whether such a product can be labelled as open source is not only a question of licence but a question of documentation, i.e. what is the information that sufficiently describes it? Or in other words, what is the “source” of open source hardware? To date there is no simple answer to this question, leaving large room for interpretation in the usage of the term. Based on analysis of public documentation of 132 products, this paper provides an overview of how practitioners tend to interpret the concept of open source hardware. It specifically focuses on the recent evolution of the open source movement outside the domain of electronics and DIY to that of non-electronic and complex open source hardware products. The empirical results strongly indicate the existence of two main usages of open source principles in the context of tangible products: publication of product-related documentation as a means to support community-based product development and to disseminate privately developed innovations. It also underlines the high variety of interpretations and even misuses of the concept of open source hardware. This reveals in turn that this concept may not even be clear to practitioners and calls for more narrowed down definitions of what has to be shared for a product to be called open source. This article contributes towards this effort through the definition of an open source hardware lifecycle summarizing the observed approaches to open source hardware.","",""
26,"J. Bonvoisin, Tom Buchert, Maurice Preidel, R. Stark","How participative is open source hardware? Insights from online repository mining",2018,"","","","",40,"2024-08-22 15:04:59","","10.1017/dsj.2018.15","","",,,,,26,4.33,7,4,6,"Open Source Hardware (OSH) is an increasingly viable approach to intellectual property management extending the principles of Open Source Software (OSS) to the domain of physical products. These principles support the development of products in transparent processes allowing the participation of any interested person. While increasing numbers of products have been released as OSH, little is known on the prevalence of participative development practices in this emerging field. It remains unclear to which extent the transparent and participatory processes known from software reached hardware product development. To fill this gap, this paper applies repository mining techniques to investigate the transparency and workload distribution of 105 OSH product development projects. The results highlight a certain heterogeneity of practices filling a continuum between public and private development settings. They reveal different organizational patterns with different levels of centralization and distribution. Nonetheless, they clearly indicate the expansion of the open source development model from software into the realms of physical products and provide the first large-scale empirical evidence of this recent evolution. Therewith, this article gives body to an emerging phenomenon and contributes to give it a place in the scientific debate. It delivers categories to delineate practices, techniques to investigate them in further detail as well as a large dataset of exemplary OSH projects. The discussion of first results signposts avenues for a stream of research aiming at understanding stakeholder interactions at work in new product innovation practices in order to enable institutions and industry in providing appropriate responses.","",""
37,"J. Carballo, J. Bonilla, L. Roca, M. Berenguel","New low-cost solar tracking system based on open source hardware for educational purposes",2018,"","","","",56,"2024-08-22 15:04:59","","10.1016/J.SOLENER.2018.09.064","","",,,,,37,6.17,9,4,6,"","",""
15,"J. Castillo, P. Huerta, J. Martínez","AN OPEN-SOURCE TOOL FOR SYSTEMC TO VERILOG AUTOMATIC TRANSLATION",2007,"","","","",467,"2024-08-22 15:04:59","","","","",,,,,15,0.88,5,3,17,"As the complexity of electronic sys- tems increases, new ways for describing these sys- tems are proposed. One actual trend involves the use of system level languages that allows the description of the whole system in a higher abstraction level. This type of methodology helps a designer to obtain an appropriate Hw-Sw partition, where the Sw is compiled to the target platform and the Hw is re- fined to bring it down to a lower level of abstraction in order to be synthesized. This last step usually re- quires the use of a translation tool that from a de- scription of the system in a system level modeling language, converts it to an equivalent one in a stan- dard Hardware Description Language, usually Ver- ilog or VHDL. This works presents a tool that from a SystemC RTL description generates its equivalent Verilog code ready to be synthesized by any stan- dard Verilog Synthesis Tool.","",""
24,"J. Castillo, P. Huerta, V. López, J. Martínez","A secure self-reconfiguring architecture based on open-source hardware",2005,"","","","",182,"2024-08-22 15:04:59","","10.1109/RECONFIG.2005.7","","",,,,,24,1.26,6,4,19,"With the new and powerful field programmable gate array (FPGA) families, new possibilities have been opened. One of these features is the possibility of reconfiguring a section of the FPGA while the rest is working. Moreover, this fixed part could be responsible for reprogramming the reconfigurable part, either because a change in functionality is required or because a new version of the hardware needs to be implemented. This paper shows how an FPGA system based on an open source OpenRISC 1200 microprocessor takes advantage of this feature to perform the secure download of the firmware and the hardware needed to run an application. In this particular case a Reed-Solomon encoder and a cryptographic application were used to demonstrate the viability of the scheme","",""
80,"J. Colomb, Lutz Reiter, Jedrzej Blaszkiewicz, J. Wessnitzer, Bjoern Brembs","Open Source Tracking and Analysis of Adult Drosophila Locomotion in Buridan's Paradigm with and without Visual Targets",2012,"","","","",374,"2024-08-22 15:04:59","","10.1371/journal.pone.0042247","","",,,,,80,6.67,16,5,12,"Background Insects have been among the most widely used model systems for studying the control of locomotion by nervous systems. In Drosophila, we implemented a simple test for locomotion: in Buridan's paradigm, flies walk back and forth between two inaccessible visual targets [1]. Until today, the lack of easily accessible tools for tracking the fly position and analyzing its trajectory has probably contributed to the slow acceptance of Buridan's paradigm. Methodology/Principal Findings We present here a package of open source software designed to track a single animal walking in a homogenous environment (Buritrack) and to analyze its trajectory. The Centroid Trajectory Analysis (CeTrAn) software is coded in the open source statistics project R. It extracts eleven metrics and includes correlation analyses and a Principal Components Analysis (PCA). It was designed to be easily customized to personal requirements. In combination with inexpensive hardware, these tools can readily be used for teaching and research purposes. We demonstrate the capabilities of our package by measuring the locomotor behavior of adult Drosophila melanogaster (whose wings were clipped), either in the presence or in the absence of visual targets, and comparing the latter to different computer-generated data. The analysis of the trajectories confirms that flies are centrophobic and shows that inaccessible visual targets can alter the orientation of the flies without changing their overall patterns of activity. Conclusions/Significance Using computer generated data, the analysis software was tested, and chance values for some metrics (as well as chance value for their correlation) were set. Our results prompt the hypothesis that fixation behavior is observed only if negative phototaxis can overcome the propensity of the flies to avoid the center of the platform. Together with our companion paper, we provide new tools to promote Open Science as well as the collection and analysis of digital behavioral data.","",""
45,"J. D. F. Licht, Grzegorz Kwasniewski, T. Hoefler","Flexible Communication Avoiding Matrix Multiplication on FPGA with High-Level Synthesis",2019,"","","","",996,"2024-08-22 15:04:59","","10.1145/3373087.3375296","","",,,,,45,9.00,15,3,5,"Data movement is the dominating factor affecting performance and energy in modern computing systems. Consequently, many algorithms have been developed to minimize the number of I/O operations for common computing patterns. Matrix multiplication is no exception, and lower bounds have been proven and implemented both for shared and distributed memory systems. Reconfigurable hardware platforms are a lucrative target for I/O minimizing algorithms, as they offer full control of memory accesses to the programmer. While bounds developed in the context of fixed architectures still apply to these platforms, the spatially distributed nature of their computational and memory resources requires a decentralized approach to optimize algorithms for maximum hardware utilization. We present a model to optimize matrix multiplication for FPGA platforms, simultaneously targeting maximum performance and minimum off-chip data movement, within constraints set by the hardware. We map the model to a concrete architecture using a high-level synthesis tool, maintaining a high level of abstraction, allowing us to support arbitrary data types, and enables maintainability and portability across FPGA devices. Kernels generated from our architecture are shown to offer competitive performance in practice, scaling with both compute and memory resources. We offer our design as an open source project to encourage the open development of linear algebra and I/O minimizing algorithms on reconfigurable hardware platforms.","",""
140,"J. Dedrick, Joel West","Standard Making: a Critical Research Frontier for Information Systems Misq Special Issue Workshop Why Firms Adopt Open Source Platforms: a Grounded Theory of Innovation and Standards Adoption",,"","","","",898,"2024-08-22 15:04:59","","","","",,,,,140,0.00,70,2,,"There is a rich stream of research that studies technology adoption by individuals and This research considers factors such as the nature of the technology, the organizational and environmental context in which adoption decisions are made, and the processes by which users adopt and implement new technologies. Research on open source software has focused mainly on the motivations of open source programmers and the organization of open source projects Some researchers portray open source as an extension of the earlier open systems movement (West and Dedrick, 2001). While there has been some research on open-systems software adoption by corporate MIS organizations (Chau and Tam, 1997), the issue of open source adoption has received little attention. We use a series of interviews with MIS managers to develop a grounded theory of open source platform adoption. We then place our findings within the contexts of diffusion of innovation and economics of standards theories. INTRODUCTION For technology users, standards adoption decisions have important consequences. Adopting a winning standard enables users to benefit from a sustained stream of producer investment in the technology and access to a large supply of complementary assets. For instance, users of Microsoft Windows benefit from R&D in computer hardware and software on the Windows platform, as well as access to the immense library of Windows applications. By contrast, adopters of a losing standard face the choice of having to switch to the winning standard or living with a much smaller supply of complementary assets and smaller levels of producer","",""
91,"J. Dongarra, K. London, S. Moore, P. Mucci, D. Terpstra, Haihang You, Min Zhou","Experiences and lessons learned with a portable interface to hardware performance counters",2003,"","","","",650,"2024-08-22 15:04:59","","10.1109/IPDPS.2003.1213517","","",,,,,91,4.33,13,7,21,"The PAPI project has defined and implemented a cross-platform interface to the hardware counters available on most modern microprocessors. The interface has gained widespread use and acceptance from hardware vendors, users, and tool developers. This paper reports on experiences with the community-based open-source effort to define the PAPI specification and implement it on a variety of platforms. Collaborations with tool developers who have incorporated support for PAPI are described. Issues related to interpretation and accuracy of hardware counter data and to the overheads of collecting this data are discussed. The paper concludes with implications for the design of the next version of PAPI.","",""
38,"J. Dongarra, Mark Gates, A. Haidar, Yulu Jia, K. Kabir, P. Luszczek, S. Tomov","HPC Programming on Intel Many-Integrated-Core Hardware with MAGMA Port to Xeon Phi",2015,"","","","",483,"2024-08-22 15:04:59","","10.1155/2015/502593","","",,,,,38,4.22,5,7,9,"This paper presents the design and implementation of several fundamental dense linear algebra (DLA) algorithms for multicore with Intel Xeon Phi coprocessors. In particular, we consider algorithms for solving linear systems. Further, we give an overview of the MAGMA MIC library, an open source, high performance library, that incorporates the developments presented here and, more broadly, provides the DLA functionality equivalent to that of the popular LAPACK library while targeting heterogeneous architectures that feature a mix of multicore CPUs and coprocessors.The LAPACK-compliance simplifies the use of the MAGMA MIC library in applications, while providing them with portably performant DLA. High performance is obtained through the use of the high-performance BLAS, hardware-specific tuning, and a hybridization methodology whereby we split the algorithm into computational tasks of various granularities. Execution of those tasks is properly scheduled over the heterogeneous hardware by minimizing data movements and mapping algorithmic requirements to the architectural strengths of the various heterogeneous hardware components. Our methodology and programming techniques are incorporated into the MAGMA MIC API, which abstracts the application developer fromthe specifics of the Xeon Phi architecture and is therefore applicable to algorithms beyond the scope of DLA.","",""
745,"J. Dongarra, P. Beckman, T. Moore, Patrick Aerts, G. Aloisio, Jean-Claude André, D. Barkai, J. Berthou, T. Boku, B. Braunschweig, F. Cappello, B. Chapman, Xue-bin Chi, A. Choudhary, S. Dosanjh, T. Dunning, S. Fiore, A. Geist, W. Gropp, R. Harrison, M. Hereld, M. Heroux, A. Hoisie, Kohichiro Hotta, Zhong Jin, Y. Ishikawa, F. Johnson, Sanjay Kale, R. Kenway, D. Keyes, B. Kramer, J. Labarta, A. Lichnewsky, T. Lippert, Bob Lucas, A. B. Maccabe, S. Matsuoka, P. Messina, P. Michielse, B. Mohr, Matthias S. Müller, W. Nagel, H. Nakashima, M. Papka, D. Reed, M. Sato, E. Seidel, J. Shalf, D. Skinner, M. Snir, T. Sterling, R. Stevens, F. Streitz, Bob Sugar, S. Sumimoto, William M. Tang, Jonny Taylor, R. Thakur, Anne E. Trefethen, M. Valero, A. Steen, J. Vetter, Peg Williams, R. Wisniewski, K. Yelick","The International Exascale Software Project roadmap",2011,"","","","",525,"2024-08-22 15:04:59","","10.1177/1094342010391989","","",,,,,745,57.31,75,65,13,"Over the last 20 years, the open-source community has provided more and more software on which the world’s high-performance computing systems depend for performance and productivity. The community has invested millions of dollars and years of effort to build key components. However, although the investments in these separate software elements have been tremendously valuable, a great deal of productivity has also been lost because of the lack of planning, coordination, and key integration of technologies necessary to make them work together smoothly and efficiently, both within individual petascale systems and between different systems. It seems clear that this completely uncoordinated development model will not provide the software needed to support the unprecedented parallelism required for peta/ exascale computation on millions of cores, or the flexibility required to exploit new hardware models and features, such as transactional memory, speculative execution, and graphics processing units. This report describes the work of the community to prepare for the challenges of exascale computing, ultimately combing their efforts in a coordinated International Exascale Software Project.","",""
24,"J. E. Auerbach, Alice Concordel, P. Kornatowski, D. Floreano","Inquiry-Based Learning With RoboGen: An Open-Source Software and Hardware Platform for Robotics and Artificial Intelligence",2019,"","","","",119,"2024-08-22 15:04:59","","10.1109/TLT.2018.2833111","","",,,,,24,4.80,6,4,5,"It has often been found that students appreciate hands-on work, and find that they learn more with courses that include a project than those relying solely on conventional lectures and tests. This type of project driven learning is a key component of “Inquiry-based learning” (IBL), which aims at teaching methodology as well as content by incorporating the student as an actor rather than a spectator. Robotics applications are especially well-suited for IBL due to the value of trial and error experience, the multiple possibilities for students to implement their own ideas, and the importance of programming, problem-solving, and electro-mechanical skills in real world engineering and science jobs. Furthermore, robotics platforms can be useful teaching media and learning tools for a variety of topics. Here, we present RoboGen: an open-source, web-based, software, and hardware platform for Robotics and Artificial Intelligence with a particular focus on Evolutionary Robotics. We describe the platform in detail, compare it to existing alternatives, and present results of its use as a platform for Inquiry-based learning within a master's level course at the Ecole Polytechnique Fédérale de Lausanne.","",""
94,"J. E. Auerbach, Deniz Aydin, Andrea Maesani, P. Kornatowski, Titus Cieslewski, G. Heitz, Pradeep Fernando, I. Loshchilov, Ludovic Daler, D. Floreano","RoboGen: Robot Generation through Artificial Evolution",2014,"","","","",673,"2024-08-22 15:04:59","","10.7551/978-0-262-32621-6-CH022","","",,,,,94,9.40,9,10,10,"Science instructors from a wide range of disciplines agree that hands-on laboratory components of courses are pedagogically necessary (Freedman, 1997). However, certain shortcomings of current laboratory exercises have been pointed out by several authors (Mataric, 2004; Hofstein and Lunetta, 2004). The overarching theme of these analyses is that hands-on components of courses tend to be formulaic, closed-ended, and at times outdated. To address these issues, we envision a novel platform that is not only a didactic tool but is also an experimental testbed for users to play with different ideas in evolutionary robotics (Nolfi and Floreano, 2000), neural networks, physical simulation, 3D printing, mechanical assembly, and embedded processing. Here, we introduce RoboGen™: an open-source software and hardware platform designed for the joint evolution of robot morphologies and controllers a la Sims (1994); Lipson and Pollack (2000); Bongard and Pfeifer (2003). Robo- Gen has been designed specifically to allow evolved robots to be easily manufactured via widely available desktop 3D-printers, and the use of simple, open-source, low-cost, offthe- shelf electronic components. RoboGen features an evolution engine complete with a physics simulator, as well as utilities both for generating design files of body components for 3D printing, and for compiling neural-network controllers to run on an Arduino microcontroller board.","",""
89,"J. Eastep, Steve Sylvester, C. Cantalupo, B. Geltz, Federico Ardanaz, Asma H. Al-rawi, Kelly Livingston, Fuat Keceli, Matthias Maiterth, Siddhartha Jana","Global Extensible Open Power Manager: A Vehicle for HPC Community Collaboration on Co-Designed Energy Management Solutions",2017,"","","","",481,"2024-08-22 15:04:59","","10.1007/978-3-319-58667-0_21","","",,,,,89,12.71,9,10,7,"","",""
80,"J. Eliot, B. Moss, Antony Hosking","Nested Transactional Memory: Model and Preliminary Architecture Sketches",2005,"","","","",839,"2024-08-22 15:04:59","","","","",,,,,80,4.21,27,3,19,"We offer a reference model for nested transactions at the level of memory accesses, and sketch possible hardware architecture designs that implement that model. We describe both closed and open nesting. The model is abstract in that it does not relate to hardware, su ch as caches, but describes memory as seen by each transaction, memory access conflicts, and the effects of commits and aborts. The ha rdware sketches describe approaches to implementing the model using bounded size caches in a processor with overflows to memory. I n addition to a model that will support concurrency within a transaction, we describe a simpler model we call linear nesting. Linear nesting supports only a single thread of execution in a transaction nest, but may be easier to implement. While we hope that the model is a good target to which to compile transactions from source languages, the mapping from source constructs to nested transactional memory is beyond the scope of the paper.","",""
253,"J. Fung, Steve Mann","OpenVIDIA: parallel GPU computer vision",2005,"","","","",737,"2024-08-22 15:04:59","","10.1145/1101149.1101334","","",,,,,253,13.32,127,2,19,"Graphics and vision are approximate inverses of each other: ordinarily Graphics Processing Units (GPUs) are used to convert ""numbers into pictures"" (i.e. computer graphics). In this paper, we propose using GPUs in approximately the reverse way: to assist in ""converting pictures into numbers"" (i.e. computer vision). The OpenVIDIA project uses single or multiple graphics cards to accelerate image analysis and computer vision. It is a library and API aimed at providing a graphics hardware accelerated processing framework for image processing and computer vision. OpenVIDIA explores the creation of a parallel computer architecture consisting of multiple Graphics Processing Units (GPUs) built entirely from commodity hardware. OpenVIDIA uses multiple Graphic.Processing Units in parallel to operate as a general-purpose parallel computer architecture. It provides a simple API which implements some common computer vision algorithms. Many components can be used immediately and because the project is Open Source, the code is intended to serve as templates and examples for how similar algorithms are mapped onto graphics hardware. Implemented are image processing techniques (Canny edge detection, filtering), image feature handling (identifying and matching features) and image registration, to name a few.","",""
19,"J. Greathouse, Kent Knox, J. Pola, Kiran Varaganti, Mayank Daga","clSPARSE: A Vendor-Optimized Open-Source Sparse BLAS Library",2016,"","","","",317,"2024-08-22 15:04:59","","10.1145/2909437.2909442","","",,,,,19,2.38,4,5,8,"Sparse linear algebra is a cornerstone of modern computational science. These algorithms ignore the zero-valued entries found in many domains in order to work on much larger problems at much faster rates than dense algorithms. Nonetheless, optimizing these algorithms is not straightforward. Highly optimized algorithms for multiplying a sparse matrix by a dense vector, for instance, are the subject of a vast corpus of research and can be hundreds of times longer than naïve implementations. Optimized sparse linear algebra libraries are thus needed so that users can build applications without enormous effort. Hardware vendors release proprietary libraries that are highly optimized for their devices, but they limit interoperability and promote vendor lock-in. Open libraries often work across multiple devices and can quickly take advantage of new innovations, but they may not reach peak performance. The goal of this work is to provide a sparse linear algebra library that offers both of these advantages. We thus describe clSPARSE, a permissively licensed open-source sparse linear algebra library that offers state-of-the-art optimized algorithms implemented in OpenCL™. We test clSPARSE on GPUs from AMD and Nvidia and show performance benefits over both the proprietary cuSPARSE library and the open-source ViennaCL library.","",""
36,"J. Hausberg, Sebastian Spaeth","Why Makers Make What They Make: Motivations to Contribute to Open Source Hardware Development",2018,"","","","",42,"2024-08-22 15:04:59","","10.1111/radm.12348","","",,,,,36,6.00,18,2,6,"Open source software (OSS) and hardware (OSH) are two expressions of one broader concept and its related movement. One of the most fundamental questions relating to these phenomena is why developers contribute their private resources to these public goods. While this question has been discussed, theorized, and empirically investigated in the context of OSS, there has been no research so far in the context of OSH. Can we really assume the motivations behind the development of the OSH to be the same as those behind OSS? Based on the self&#8208;determination theory (SDT), we provide original insights into the motivations behind contributions to OSH development. We collected data from the most common and active 3D printing communities, which are the main loci of OSH development. We thus have a unique cross&#8208;sectional data set with participants from over 30 different countries using all kinds of different OSH platforms. Our analysis reveals several important findings: firstly, the motivations are in some aspects very similar to those in open source software notwithstanding different possibilities, hurdles, and incentives regarding the OSS and OSH. Above all, enjoyment&#8208;based intrinsic motivation is a major factor affecting contribution levels. Secondly, among internalized extrinsic motivations, expected private benefits through improving own skills stands out. Thirdly, different factors of internalized extrinsic motivations can have different moderating effects on the effect of enjoyment&#8208;based intrinsic motivation. Given the imminent changes in business models throughout manufacturing industries in order to adapt to the challenge that OSH will increasingly pose, our findings have important implications not only for OSH communities and 3D development platforms, but also for businesses that want and probably soon have to engage in open innovation.","",""
352,"J. Hellerstein, Jose M. Faleiro, Joseph Gonzalez, Johann Schleier-Smith, Vikram Sreekanti, Alexey Tumanov, Chenggang Wu","Serverless Computing: One Step Forward, Two Steps Back",2018,"","","","",535,"2024-08-22 15:04:59","","","","",,,,,352,58.67,50,7,6,"Serverless computing offers the potential to program the cloud in an autoscaling, pay-as-you go manner. In this paper we address critical gaps in first-generation serverless computing, which place its autoscaling potential at odds with dominant trends in modern computing: notably data-centric and distributed computing, but also open source and custom hardware. Put together, these gaps make current serverless offerings a bad fit for cloud innovation and particularly bad for data systems innovation. In addition to pinpointing some of the main shortfalls of current serverless architectures, we raise a set of challenges we believe must be met to unlock the radical potential that the cloud---with its exabytes of storage and millions of cores---should offer to innovative developers.","",""
68,"J. Herder, H. Bos, Ben Gras, P. Homburg, A. Tanenbaum","Fault isolation for device drivers",2009,"","","","",821,"2024-08-22 15:04:59","","10.1109/DSN.2009.5270357","","",,,,,68,4.53,14,5,15,"This work explores the principles and practice of isolating low-level device drivers in order to improve OS dependability. In particular, we explore the operations drivers can perform and how fault propagation in the event a bug is triggered can be prevented. We have prototyped our ideas in an open-source multiserver OS (MINIX 3) that isolates drivers by strictly enforcing least authority and iteratively refined our isolation techniques using a pragmatic approach based on extensive software-implemented fault-injection (SWIFI) testing. In the end, out of 3,400,000 common faults injected randomly into 4 different Ethernet drivers using both programmed I/O and DMA, no fault was able to break our protection mechanisms and crash the OS. In total, we experienced only one hang, but this appears to be caused by buggy hardware.","",""
33,"J. Hereford, C. Pruitt","Robust sensor systems using evolvable hardware",2004,"","","","",965,"2024-08-22 15:04:59","","10.1109/EH.2004.1310826","","",,,,,33,1.65,17,2,20,"This paper describes a system that is robust with respect to sensor failure. The system utilizes multiple sensor inputs (three in this case) connected to a programmable device (FPAA) that averages the outputs from the sensors. The programmable device is programmed using evolvable hardware (EHW) techniques. If one or more of the input sensors fails, then the controller detects the failure and initiates a reprogramming of the circuit. The system then continues to operate with a reduced number of sensors. The failure detection is accomplished by comparing the actual system output with a Kalman filter estimate of the output. If the actual output and the filter estimate differ by amount greater than the system uncertainty, then a failure is noted. The system is robust to several different failure modes: sensor fails as open circuit, sensor fails as short circuit, multiple sensors fail, FPAA input amplifier failure. The experimental setup is described as well as results using simulated inputs (individual voltage sources) and actual temperature sensors (PRTDs). The paper also discusses some interesting results as well as issues that must be overcome to expand the system.","",""
82,"J. Hickish, Z. Abdurashidova, Z. Ali, K. Buch, Sandeep C. Chaudhari, Hong Chen, M. Dexter, R. Domagalski, J. Ford, G. Foster, D. George, Joe Greenberg, L. Greenhill, A. Isaacson, Homin Jiang, Glenn Jones, F. Kapp, H. Kriel, R. Lacasse, A. Lutomirski, D. MacMahon, J. Manley, A. Martens, R. McCullough, M. Muley, W. New, A. Parsons, D. Price, R. Primiani, J. Ray, A. Siemion, V. V. Tonder, L. Vertatschitsch, M. Wagner, J. Weintroub, D. Werthimer","A Decade of Developing Radio-Astronomy Instrumentation using CASPER Open-Source Technology",2016,"","","","",286,"2024-08-22 15:04:59","","10.1142/S2251171716410014","","",,,,,82,10.25,8,36,8,"The Collaboration for Astronomy Signal Processing and Electronics Research (CASPER) has been working for a decade to reduce the time and cost of designing, building and deploying new digital radio-astronomy instruments. Today, CASPER open-source technology powers over 45 scientific instruments worldwide, and is used by scientists and engineers at dozens of academic institutions. In this paper, we catalog the current offerings of the CASPER collaboration, and instruments past and present built by CASPER users and developers. We describe the ongoing state of software development, as CASPER looks to support a broader range of programming environments and hardware and ensure compatibility with the latest vendor tools.","",""
58,"J. Kempf, Scott Whyte, J. Ellithorpe, Peyman Kazemian, Mart Haitjema, N. Beheshti, Stephen Stuart, H. Green","OpenFlow MPLS and the open source label switched router",2011,"","","","",900,"2024-08-22 15:04:59","","","","",,,,,58,4.46,7,8,13,"Multiprotocol Label Switching (MPLS) [3] is a protocol widely used in commercial operator networks to forward packets by matching link-specific labels in the packet header to outgoing links rather than through standard IP longest prefix matching. However, in existing networks, MPLS is implemented by full IP routers, since the MPLS control plane protocols such as LDP [8] utilize IP routing to set up the label switched paths, even though the MPLS data plane does not require IP routing. OpenFlow 1.0 is an interface for controlling a routing or switching box by inserting flow specifications into the box's flow table [1]. While OpenFlow 1.0 does not support MPLS1, MPLS label-based forwarding seems conceptually a good match with OpenFlow's flow-based routing paradigm. In this paper we describe the design and implementation of an experimental extension of OpenFlow 1.0 to support MPLS. The extension allows an OpenFlow switch without IP routing capability to forward MPLS on the data plane. We also describe the implementation of a prototype open source MPLS label switched router, based on the NetFPGA hardware platform [4], utilizing OpenFlow MPLS. The prototype is capable of forwarding data plane packets at line speed without IP forwarding, though IP forwarding is still used on the control plane. We provide some performance measurements comparing the prototype to software routers. The measurements indicate that the prototype is an appropriate tool for achieving line speed forwarding in testbeds and other experimental networks where flexibility is a key attribute, as a substitute for software routers.","",""
180,"J. Lange, K. Pedretti, Trammell Hudson, P. Dinda, Zheng Cui, Lei Xia, P. Bridges, Andy Gocke, Steven Jaconette, M. Levenhagen, R. Brightwell","Palacios and Kitten: New high performance operating systems for scalable virtualized and native supercomputing",2010,"","","","",725,"2024-08-22 15:04:59","","10.1109/IPDPS.2010.5470482","","",,,,,180,12.86,18,11,14,"Palacios is a new open-source VMM under development at Northwestern University and the University of New Mexico that enables applications executing in a virtualized environment to achieve scalable high performance on large machines. Palacios functions as a modularized extension to Kitten, a high performance operating system being developed at Sandia National Laboratories to support large-scale supercomputing applications. Together, Palacios and Kitten provide a thin layer over the hardware to support full-featured virtualized environments alongside Kitten's lightweight native environment. Palacios supports existing, unmodified applications and operating systems by using the hardware virtualization technologies in recent AMD and Intel processors. Additionally, Palacios leverages Kitten's simple memory management scheme to enable low-overhead pass-through of native devices to a virtualized environment. We describe the design, implementation, and integration of Palacios and Kitten. Our benchmarks show that Palacios provides near native (within 5%), scalable performance for virtualized environments running important parallel applications. This new architecture provides an incremental path for applications to use supercomputers, running specialized lightweight host operating systems, that is not significantly performance-compromised.","",""
87,"J. Lelli, Claudio Scordino, Luca Abeni, Dario Faggioli","Deadline scheduling in the Linux kernel",2016,"","","","",665,"2024-08-22 15:04:59","","10.1002/spe.2335","","",,,,,87,10.88,22,4,8,"During the last decade, there has been a considerable interest in using Linux in real‐time systems, especially for industrial control. The simple and elegant design of Linux guarantees reliability and very good performance, while its open‐source license allows to modify and change the source code according to the user needs. However, Linux has been designed to be a general‐purpose operating system. Therefore, it presents some issues like unpredictable latencies and limited support for real‐time scheduling. In this paper, we present our experience in the design and implementation of the real‐time scheduler that has been recently included in the Linux kernel. The scheduler is based on the Resource Reservation paradigm, which allows to enforce temporal isolation between the running tasks. We describe the genesis of the project, the challenges we have encountered, the implementation details and the API offered to the programmers. Then, we show the experimental results measured on a real hardware. Copyright © 2015 John Wiley & Sons, Ltd.","",""
377,"J. Lockwood, N. McKeown, G. Watson, Glen Gibb, P. Hartke, Jad Naous, R. Raghuraman, Jianying Luo","NetFPGA--An Open Platform for Gigabit-Rate Network Switching and Routing",2007,"","","","",579,"2024-08-22 15:04:59","","10.1109/MSE.2007.69","","",,,,,377,22.18,47,8,17,"The NetFPGA platform enables students and researchers to build high-performance networking systems in hardware. A new version of the NetFPGA platform has been developed and is available for use by the academic community. The NetFPGA 2.1 platform now has interfaces that can be parameterized, therefore enabling development of modular hardware designs with varied word sizes. It also includes more logic and faster memory than the previous platform. Field Programmable Gate Array (FPGA) logic is used to implement the core data processing functions while software running on embedded cores within the FPGA and/or programs running on an attached host computer implement only control functions. Reference designs and component libraries have been developed for the CS344 course at Stanford University. Open-source Verilog code is available for download from the project website.","",""
11,"J. Lunenburg, R. Soetens, F. Schoenmakers, P. Metsemakers, R. V. D. Molengraft, M. Steinbuch","Sharing Open Hardware through ROP, the Robotic Open Platform",2013,"","","","",441,"2024-08-22 15:04:59","","10.1007/978-3-662-44468-9_53","","",,,,,11,1.00,2,6,11,"","",""
74,"J. Marchesini, Sean W. Smith, Omen Wild, Joshua Stabiner, Alex Barsamian","Open-source applications of TCPA hardware",2004,"","","","",328,"2024-08-22 15:04:59","","10.1109/CSAC.2004.25","","",,,,,74,3.70,15,5,20,"How can Alice trust computation occurring at Bob's computer? Since it exists and is becoming ubiquitous, the current-generation TCPA/TCG hardware might enable a solution. When we started investigating this technology, the specification of the TCG software stack was not publicly available, and an implementation is still not; so, we designed and built an open-source platform based on Linux and commercially available TCPA/TCG hardware which would allow us to address the problem of trusting computation. Within the limits of TCPA/TCG hardware security, our solution balances what Alice needs to do to make trust judgments against what Bob needs to do to keep his system running. Furthermore, we describe how we use our platform to harden three sample open-source applications: Apache SSL Web servers, OpenCA certification authorities, and (with SELinux) compartmented attestation to balance privacy with DRM. To our knowledge, our project remains the only open-source TCPA/TCG platform in existence, and is also enabling trusted computing applications developed by our user community (enforcer.sourceforge.net reports over 1100 sourcecode downloads so far).","",""
82,"J. Marchesini, Sean W. Smith, Omen Wild, Rich MacDonald","Experimenting with TCPA/TCG Hardware, Or: How I Learned to Stop Worrying and Love The Bear",2003,"","","","",658,"2024-08-22 15:04:59","","","","",,,,,82,3.90,21,4,21,"Over the last few years, our group has been working on applications of secure coprocessors—but has been frustrated by the limited computational environment and high expense of such devices. Over the last few years, the TCPA (now TCG) has produced a specification for a trusted platform module (TPM)—a small hardware addition intended to improve the overall security of a larger machine (and tied up with a still-murky vision of Windows-based trusted computing). Some commodity desktops now come up with these TPMs. Consequently, we began an experiment to see if (in the absence of a Non-Disclosure Agreement) we could use this hardware to transform a desktop Linux machine into a virtual secure coprocessor: more powerful but less secure than higher-end devices. This experiment has several purposes: to provide a new platform for secure coprocessor applications, to see how well the TCPA/TCG approach works, and (by working in open source) to provide a platform for the broader community to experiment with alternative architectures in the contentious area of trusted computing. This paper reports what we have learned so far: the approach is feasible, but effective deployment requires a more thorough look at OS security.","",""
438,"J. McClean, N. Rubin, Kevin J Sung, I. Kivlichan, X. Bonet-Monroig, X. Bonet-Monroig, Yudong Cao, Chengyu Dai, E. Fried, C. Gidney, Brendan Gimby, P. Gokhale, Thomas Häner, Tarini S Hardikar, Vojtěch Havlíček, Oscar Higgott, Cupjin Huang, J. Izaac, Zhang Jiang, Xinle Liu, Sam McArdle, M. Neeley, T. O’Brien, B. O’Gorman, B. O’Gorman, I. Ozfidan, M. Radin, J. Romero, Nicolas P. D. Sawaya, Bruno Senjean, Kanav Setia, Sukin Sim, Damian S. Steiger, M. Steudtner, M. Steudtner, M. Steudtner, Qiming Sun, Wei Sun, Daochen Wang, Fang Zhang, R. Babbush","OpenFermion: the electronic structure package for quantum computers",2017,"","","","",533,"2024-08-22 15:04:59","","10.1088/2058-9565/ab8ebc","","",,,,,438,62.57,44,41,7,"Quantum simulation of chemistry and materials is predicted to be an important application for both near-term and fault-tolerant quantum devices. However, at present, developing and studying algorithms for these problems can be difficult due to the prohibitive amount of domain knowledge required in both the area of chemistry and quantum algorithms. To help bridge this gap and open the field to more researchers, we have developed the OpenFermion software package (www.openfermion.org). OpenFermion is an open-source software library written largely in Python under an Apache 2.0 license, aimed at enabling the simulation of fermionic and bosonic models and quantum chemistry problems on quantum hardware. Beginning with an interface to common electronic structure packages, it simplifies the translation between a molecular specification and a quantum circuit for solving or studying the electronic structure problem on a quantum computer, minimizing the amount of domain expertise required to enter the field. The package is designed to be extensible and robust, maintaining high software standards in documentation and testing. This release paper outlines the key motivations behind design choices in OpenFermion and discusses some basic OpenFermion functionality which we believe will aid the community in the development of better quantum algorithms and tools for this exciting area of research.","",""
28,"J. Mészáros","AERIAL SURVEYING UAV BASED ON OPEN-SOURCE HARDWARE AND SOFTWARE",2012,"","","","",130,"2024-08-22 15:04:59","","10.5194/ISPRSARCHIVES-XXXVIII-1-C22-155-2011","","",,,,,28,2.33,28,1,12,"Abstract. In the last years the functionality and type of UAV-systems increased fast, but unfortunately these systems are hardly available for researchers in some cases. A simple and low-cost solution was developed to build an autonomous aerial surveying airplane, which can fulfil the necessities (aerial photographs with very-high resolution) of other departments at the university and very useful and practical for teaching photogrammetry.. The base was a commercial, remote controlled model airplane and an open-source GPS/IMU system (MatrixPilot) was adapted to achieve the semi-automatic or automatic stabilization and navigation of the model airplane along predefined trajectory. The firmware is completely open-source and easily available on the website of the project. The first used camera system was a low-budget, low-quality video camera, which could provide only 1.2 megapixel photographs or low resolution video depending on the light conditions and the desired spatial resolution. A field measurement test was carried out with the described system: the aerial surveying of an undiscovered archaeological site, signed by a crop-mark in mountain Pilis (Hungary).","",""
68,"J. Newman, Riley Zeller-Townson, Ming-fai Fong, Sharanya Arcot Desai, R. Gross, Steve M. Potter","Closed-Loop, Multichannel Experimentation Using the Open-Source NeuroRighter Electrophysiology Platform",2013,"","","","",350,"2024-08-22 15:04:59","","10.3389/fncir.2012.00098","","",,,,,68,6.18,11,6,11,"Single neuron feedback control techniques, such as voltage clamp and dynamic clamp, have enabled numerous advances in our understanding of ion channels, electrochemical signaling, and neural dynamics. Although commercially available multichannel recording and stimulation systems are commonly used for studying neural processing at the network level, they provide little native support for real-time feedback. We developed the open-source NeuroRighter multichannel electrophysiology hardware and software platform for closed-loop multichannel control with a focus on accessibility and low cost. NeuroRighter allows 64 channels of stimulation and recording for around US $10,000, along with the ability to integrate with other software and hardware. Here, we present substantial enhancements to the NeuroRighter platform, including a redesigned desktop application, a new stimulation subsystem allowing arbitrary stimulation patterns, low-latency data servers for accessing data streams, and a new application programming interface (API) for creating closed-loop protocols that can be inserted into NeuroRighter as plugin programs. This greatly simplifies the design of sophisticated real-time experiments without sacrificing the power and speed of a compiled programming language. Here we present a detailed description of NeuroRighter as a stand-alone application, its plugin API, and an extensive set of case studies that highlight the system’s abilities for conducting closed-loop, multichannel interfacing experiments.","",""
80,"J. Oxer, Hugh Blemings","Practical Arduino: Cool Projects for Open Source Hardware",2009,"","","","",174,"2024-08-22 15:04:59","","","","",,,,,80,5.33,40,2,15,"Create your own Arduino-based designs, gain in-depth knowledge of the architecture of Arduino, and learn the user-friendly Arduino language all in the context of practical projects that you can build yourself at home. Get hands-on experience using a variety of projects and recipes for everything from home automation to test equipment. Arduino has taken off as an incredibly popular building block among ubicomp (ubiquitous computing) enthusiasts, robotics hobbyists, and DIY home automation developers. Authors Jonathan Oxer and Hugh Blemings provide detailed instructions for building a wide range of both practical and fun Arduino-related projects, covering areas such as hobbies, automotive, communications, home automation, and instrumentation. Take Arduino beyond ""blink"" to a wide variety of projects from simple to challenging Hands-on recipes for everything from home automation to interfacing with your car engine management system Explanations of techniques and references to handy resources for ubiquitous computing projects Supplementary material includes a circuit schematic reference, introductions to a range of electronic engineering principles and general hints & tips. These combine with the projects themselves to make Practical Arduino: Cool Projects for Open Source Hardware an invaluable reference for Arduino users of all levels. You'll learn a wide variety of techniques that can be applied to your own projects. What you'll learn Communication with serial devices including RFID readers, temperature sensors, and GPS modules Connecting Arduino to Ethernet and WiFi networks Adding synthesized speech to Arduino Linking Arduino to web services Decoding data streams from commercial wireless devices How to make DIY prototyping shields for only a couple of dollars Who is this book for? This book is for hobbyists and developers interested in physical computing using a low-cost, easy-to-learn platform.","",""
21,"J. P. Mitchell, Catherine D. Schuman, T. Potok","A Small, Low Cost Event-Driven Architecture for Spiking Neural Networks on FPGAs",2020,"","","","",692,"2024-08-22 15:04:59","","10.1145/3407197.3407216","","",,,,,21,5.25,7,3,4,"Currently, there is a lack of availability of low cost, low power neuromorphic hardware. In this work, we introduce the μCaspian architecture along with an associated development PCB design which provides a low cost and SWaP (size, weight, and power) optimized neuromorphic hardware platform. Further, our proposed system only uses commercial off the shelf components and an open source FPGA workflow to maximize the accessibility of μCaspian to all researchers.","",""
103,"J. P. Sharkey, D. Foo, A. Kabla, J. Baumberg, R. Bowman","A one-piece 3D printed flexure translation stage for open-source microscopy.",2015,"","","","",292,"2024-08-22 15:04:59","","10.1063/1.4941068","","",,,,,103,11.44,21,5,9,"Open source hardware has the potential to revolutionise the way we build scientific instruments; with the advent of readily available 3D printers, mechanical designs can now be shared, improved, and replicated faster and more easily than ever before. However, printed parts are typically plastic and often perform poorly compared to traditionally machined mechanisms. We have overcome many of the limitations of 3D printed mechanisms by exploiting the compliance of the plastic to produce a monolithic 3D printed flexure translation stage, capable of sub-micron-scale motion over a range of 8 × 8 × 4 mm. This requires minimal post-print clean-up and can be automated with readily available stepper motors. The resulting plastic composite structure is very stiff and exhibits remarkably low drift, moving less than 20 μm over the course of a week, without temperature stabilisation. This enables us to construct a miniature microscope with excellent mechanical stability, perfect for time-lapse measurements in situ in an incubator or fume hood. The ease of manufacture lends itself to use in containment facilities where disposability is advantageous and to experiments requiring many microscopes in parallel. High performance mechanisms based on printed flexures need not be limited to microscopy, and we anticipate their use in other devices both within the laboratory and beyond.","",""
10,"J. Pearce","Return on Investment for Open Source Hardware Development",2016,"","","","",75,"2024-08-22 15:04:59","","","","",,,,,10,1.25,10,1,8,"The availability of free and open source hardware designs that can be replicated with low-cost 3-D printers provide large values to scientists that need highly-customized low-volume production scientific equipment. Digital manufacturing technologies have only recently become widespread and the return on investment (ROI) was not clear, so funding for open hardware development was historically sparse. This paper clarifies a method for determining an ROI for FOSH scientific hardware development. By using open source hardware design that can be manufactured digitally the relatively minor development costs result in enormous ROIs for the scientific community. A case study is presented of an syringe pump released under open-licenses, which results in ROIs for funders ranging from 100s to 1,000s of percent after only a few months. It is clear that policies encouraging free and open source scientific hardware development should be made by organizations interested in maximizing return on public investments for science.","",""
33,"J. Pitt, Nolan L. Strait, Elena M. Vayndorf, Benjamin W. Blue, Christina H. Tran, Brendon E. M. Davis, Karen Huang, Brock J. Johnson, Keong Mu Lim, Sophie Liu, Arash Nikjoo, Anuj Vaid, Judy Z. Wu, M. Kaeberlein","WormBot, an open-source robotics platform for survival and behavior analysis in C. elegans",2019,"","","","",223,"2024-08-22 15:04:59","","10.1007/s11357-019-00124-9","","",,,,,33,6.60,3,14,5,"","",""
27,"J. Rabault, T. Nose, G. Hope, Malte Müller, Ø. Breivik, J. Voermans, L. Hole, P. Bohlinger, T. Waseda, T. Kodaira, Tomotaka Katsuno, Mark Johnson, G. Sutherland, M. Johansson, K. Christensen, Adam Garbo, A. Jensen, O. Gundersen, A. Marchenko, A. Babanin","OpenMetBuoy-v2021: An Easy-to-Build, Affordable, Customizable, Open-Source Instrument for Oceanographic Measurements of Drift and Waves in Sea Ice and the Open Ocean",2022,"","","","",131,"2024-08-22 15:04:59","","10.3390/geosciences12030110","","",,,,,27,13.50,3,20,2,"There is a wide consensus within the polar science, meteorology, and oceanography communities that more in situ observations of the ocean, atmosphere, and sea ice are required to further improve operational forecasting model skills. Traditionally, the volume of such measurements has been limited by the high cost of commercially available instruments. An increasingly attractive solution to this cost issue is to use instruments produced in-house from open-source hardware, firmware, and postprocessing building blocks. In the present work, we release the next iteration of our open-source drifter and wave-monitoring instrument, which follows these solution aspects. The new design is significantly less expensive (typically by a factor of 5 compared with our previous, already cost-effective instrument), much easier to build and assemble for people without specific microelectronics and programming competence, more easily extendable and customizable, and two orders of magnitude more power-efficient (to the point where solar panels are no longer needed even for long-term deployments). Improving performance and reducing noise levels and costs compared with our previous generation of instruments is possible in large part thanks to progress from the electronics component industry. As a result, we believe that this will allow scientists in geosciences to increase by an order of magnitude the amount of in situ data they can collect under a constant instrumentation budget. In the following, we offer (1) a detailed overview of our hardware and software solution, (2) in situ validation and benchmarking of our instrument, (3) a fully open-source release of both hardware and software blueprints. We hope that this work, and the associated open-source release, will be a milestone that will allow our scientific fields to transition towards open-source, community-driven instrumentation. We believe that this could have a considerable impact on many fields by making in situ instrumentation at least an order of magnitude less expensive and more customizable than it has been for the last 50 years, marking the start of a new paradigm in oceanography and polar science, where instrumentation is an inexpensive commodity and in situ data are easier and less expensive to collect.","",""
27,"J. Ramírez-Faz, L. M. Fernández-Ahumada, E. Fernández-Ahumada, R. López-Luque","Monitoring of Temperature in Retail Refrigerated Cabinets Applying IoT Over Open-Source Hardware and Software",2020,"","","","",15,"2024-08-22 15:04:59","","10.3390/s20030846","","",,,,,27,6.75,7,4,4,"The control of refrigeration in the food chain is fundamental at all stages, with special emphasis on the retail stage. The implementation of information and communication technologies (IoT, open-source hardware and software, cloud computing, etc.) is representing a revolution in the operational paradigm of food control. This paper presents a low-cost IoT solution, based on free hardware and software, for monitoring the temperature in refrigerated retail cabinets. Specifically, the use of the ESP-8266-Wi-Fi microcontroller with DS18B20 temperature sensors is proposed. The ThingSpeak IoT platform is used to store and process data in the cloud. The solution presented is robust, affordable, and flexible, allowing to extend the scope of supervising other relevant parameters in the operating process (light control, energy efficiency, consumer presence, etc.).","",""
55,"J. Rolston, R. Gross, Steve M. Potter","Closed-Loop, Open-Source Electrophysiology",2010,"","","","",903,"2024-08-22 15:04:59","","10.3389/fnins.2010.00031","","",,,,,55,3.93,18,3,14,"Multiple extracellular microelectrodes (multi-electrode arrays, or MEAs) effectively record rapidly varying neural signals, and can also be used for electrical stimulation. Multi-electrode recording can serve as artificial output (efferents) from a neural system, while complex spatially and temporally targeted stimulation can serve as artificial input (afferents) to the neuronal network. Multi-unit or local field potential (LFP) recordings can not only be used to control real world artifacts, such as prostheses, computers or robots, but can also trigger or alter subsequent stimulation. Real-time feedback stimulation may serve to modulate or normalize aberrant neural activity, to induce plasticity, or to serve as artificial sensory input. Despite promising closed-loop applications, commercial electrophysiology systems do not yet take advantage of the bidirectional capabilities of multi-electrodes, especially for use in freely moving animals. We addressed this lack of tools for closing the loop with NeuroRighter, an open-source system including recording hardware, stimulation hardware, and control software with a graphical user interface. The integrated system is capable of multi-electrode recording and simultaneous patterned microstimulation (triggered by recordings) with minimal stimulation artifact. The potential applications of closed-loop systems as research tools and clinical treatments are broad; we provide one example where epileptic activity recorded by a multi-electrode probe is used to trigger targeted stimulation, via that probe, to freely moving rodents.","",""
19,"J. Sadler, D. Ames, Rohit Khattar","A recipe for standards-based data sharing using open source software and low-cost electronics",2016,"","","","",310,"2024-08-22 15:04:59","","10.2166/HYDRO.2015.092","","",,,,,19,2.38,6,3,8,"Environmental data are critical to understanding environmental phenomena, yet their consistent collection and curation can be cost-prohibitive. This paper describes a recipe for the design, development, and deployment of a low-cost environmental data logging and transmission system for environmental sensors and its connection to an open source data-sharing network. The hardware is built using several low-cost, open-source, mass-produced components. The system automatically ingests data into HydroServer, a standards-based server in the open source hydrologic information system (HIS) created by the Consortium of Universities for the Advancement of Hydrologic Sciences Inc. (CUAHSI). By publishing data in this way, they are discoverable through the geographic information system (GIS)-based CUAHSI tools, HydroDesktop and HydroShare. In addition, because they follow WaterML encoding, open hardware data stored in the HIS can be included in international catalog such as the global earth observation system of system catalog. A recipe for building the system is provided. Multiple deployments used to test proof-of-concept of the system are described and their results are given. Ease of deployment and reliability of the logging and transmission system is also addressed.","",""
374,"J. Siegle, A. López, Yogi A. Patel, Kirill Abramov, Shay Ohayon, Jakob Voigts","Open Ephys: an open-source, plugin-based platform for multichannel electrophysiology",2017,"","","","",881,"2024-08-22 15:04:59","","10.1088/1741-2552/aa5eea","","",,,,,374,53.43,62,6,7,"Objective. Closed-loop experiments, in which causal interventions are conditioned on the state of the system under investigation, have become increasingly common in neuroscience. Such experiments can have a high degree of explanatory power, but they require a precise implementation that can be difficult to replicate across laboratories. We sought to overcome this limitation by building open-source software that makes it easier to develop and share algorithms for closed-loop control. Approach. We created the Open Ephys GUI, an open-source platform for multichannel electrophysiology experiments. In addition to the standard ‘open-loop’ visualization and recording functionality, the GUI also includes modules for delivering feedback in response to events detected in the incoming data stream. Importantly, these modules can be built and shared as plugins, which makes it possible for users to extend the functionality of the GUI through a simple API, without having to understand the inner workings of the entire application. Main results. In combination with low-cost, open-source hardware for amplifying and digitizing neural signals, the GUI has been used for closed-loop experiments that perturb the hippocampal theta rhythm in a phase-specific manner. Significance. The Open Ephys GUI is the first widely used application for multichannel electrophysiology that leverages a plugin-based workflow. We hope that it will lower the barrier to entry for electrophysiologists who wish to incorporate real-time feedback into their research.","",""
43,"J. Siegle, Gregory Hale, J. Newman, Jakob Voigts","Neural ensemble communities: open-source approaches to hardware for large-scale electrophysiology",2015,"","","","",158,"2024-08-22 15:04:59","","10.1016/j.conb.2014.11.004","","",,,,,43,4.78,11,4,9,"","",""
473,"J. Tiedemann, Santhosh Thottingal","OPUS-MT – Building open translation services for the World",2020,"","","","",353,"2024-08-22 15:04:59","","","","",,,,,473,118.25,237,2,4,"This paper presents OPUS-MT a project that focuses on the development of free resources and tools for machine translation. The current status is a repository of over 1,000 pre-trained neural machine translation models that are ready to be launched in on-line translation services. For this we also provide open source implementations of web applications that can run efficiently on average desktop hardware with a straightforward setup and installation.","",""
88,"J. Tripp, M. Gokhale, Kristopher D. Peterson","Trident: From High-Level Language to Hardware Circuitry",2007,"","","","",643,"2024-08-22 15:04:59","","10.1109/MC.2007.107","","",,,,,88,5.18,29,3,17,"Unlocking the potential of field-programmable gate arrays requires compilers that translate algorithmic high-level language code into hardware circuits. The Trident open source compiler translates C code to a hardware circuit description, providing designers with extreme flexibility in prototyping reconfigurable supercomputers","",""
14,"J. West, George Kuk","Proprietary Benefits from Open Communities: How MakerBot Leveraged Thingiverse in 3D Printing",2014,"","","","",562,"2024-08-22 15:04:59","","10.5465/AMBPP.2014.11868ABSTRACT","","",,,,,14,1.40,7,2,10,"Our understanding of open source models of innovation is primarily based on research on open source software. This research focuses on the underlying challenges in developing a user-based community as a complementary asset, and at the same time strengthening appropriability regimes without losing control over the technologies that are fundamental to their business success. Yet less is known about new start-ups driven by open hardware. Here we study 3D printing, and how MakerBot Industries leveraged open hardware and content to become a multimillion dollar firm based on selling closed source hardware, while nurturing its open online content community. Using a longitudinal case study design, we identify three distinct phases in how MakerBot created and nurtured the Thingiverse community as a free resource of user-created digital designs that could be printed as physical goods through its physical printers, both creating value for the community and demand for its products. We analyze MakerBot’s ability to win community acceptance for its increasingly proprietary strategy, and offer broader implications for managing user communities, open hardware design and partly open platform strategies.","",""
15,"J. Zackrisson, I. Gustavsson, L. Håkansson","An Overview of the VISIR Open Source Software Distribution 2007",2007,"","","","",452,"2024-08-22 15:04:59","","","","",,,,,15,0.88,5,3,17,"This paper is intended for people who are interested in creating online laboratories. Blekinge Institute of Technology (BTH) in Sweden has started a project known as VISIR (Virtual Instrument Systems in Reality) together with National Instruments in USA and Axiom EduTech in Sweden to disseminate an online laboratory concept created at BTH using open source technologies in collaboration with other universities and organisations. The VISIR open source distribution 2007 includes software for two implemented examples, one laboratory for low frequency electronics and one for signal processing. The distribution is modular and many modules can be used for other online laboratories. The goal is an international standard, enabling teams worldwide to expand and jointly develop this powerful approach into distributed online laboratories. Each laboratory is a client/server application controlled by an administrative system. These three parts are mainly written in Adobe Flash, C++, and PHP respectively. However, the hardware control module of the equipment server is written in LabVIEW. This paper describes the organisation of the software.","",""
31,"Jack Koenig","Seven Open Source Business Strategies for Competitive Advantage",2009,"","","","",431,"2024-08-22 15:04:59","","","","",,,,,31,2.07,31,1,15,"ware today have many options for satisfying their computing and networking needs. Open source software is one of them, and it is often selected because of the broader choices open source can deliver. For instance, open source offers enterprises the opportunity to be more self-reliant through source code modification. It allows incremental project and upgrade schedules, free reign in integration decisions, and direct interaction with the user community. It creates the opportunity to implement projects in a way that is consistently mindful of enterprise goals, rather than the goals of a proprietary software vendor. Open source allows enterprises to select from a broader range of hardware and software vendors, and services providers than proprietary solutions. For these and other reasons, the pace of Linux and open source adoption continues to accelerate. Open source presents a large potential competitive advantage for hardware and software vendors, and vendors of complementary or substitute services. Linux has contributed greatly to the adoption and success of open source. Companies like IBM, HP, Red Hat, Oracle, and recently. Novell, have invested in, and legitimized the use of Linux, for enterprise applications including data center operations. Linux related services deliver over a billion dollars in annual revenue to both IBM and HP. Oracle strongly promotes and likewise derives revenue from the Linux platform, with the “unbreakable Linux” guarantee. There are many strategies around open source platform applications and utilities aside from Linux or an open source solution stack. These strategies include substantial marketing and service alternatives that are creative and highly competitive. An open source initiative for instance, may establish an industry standard. A relatively straightforward and simple open source marketing decision may reposition a company or product. For example, using the “patronage” strategy, IBM embraces and extends open source software with refinements that may help them pursue new markets or position themselves against established competitors more effectively. Likewise open source creates business challenges for many traditional software vendors. Companies like Sun, BEA and Wind River currently feel the impact of open source on their business as open source threatens to commoditize parts of their software portfolio. Seven Open Source Business Strategies for Competitive Advantage","",""
41,"Jacob Lidman, D. Quinlan, C. Liao, S. Mckee","ROSE::FTTransform - A source-to-source translation framework for exascale fault-tolerance research",2012,"","","","",589,"2024-08-22 15:04:59","","10.1109/DSNW.2012.6264672","","",,,,,41,3.42,10,4,12,"Exascale computing systems will require sufficient resilience to tolerate numerous types of hardware faults while still assuring correct program execution. Such extreme-scale machines are expected to be dominated by processors driven at lower voltages (near the minimum 0.5 volts for current transistors). At these voltage levels, the rate of transient errors increases dramatically due to the sensitivity to transient and geographically localized voltage drops on parts of the processor chip. To achieve power efficiency, these processors are likely to be streamlined and minimal, and thus they cannot be expected to handle transient errors entirely in hardware. Here we present an open, compiler-based framework to automate the armoring of High Performance Computing (HPC) software to protect it from these types of transient processor errors. We develop an open infrastructure to support research work in this area, and we define tools that, in the future, may provide more complete automated and/or semi-automated solutions to support software resiliency on future exascale architectures. Results demonstrate that our approach is feasible, pragmatic in how it can be separated from the software development process, and reasonably efficient (0% to 30% overhead for the Jacobi iteration on common hardware; and 20%, 40%, 26%, and 2% overhead for a randomly selected subset of benchmarks from the Livermore Loops [1]).","",""
285,"Jacob Varley, Chad DeChant, Adam Richardson, J. Ruales, P. Allen","Shape completion enabled robotic grasping",2016,"","","","",941,"2024-08-22 15:04:59","","10.1109/IROS.2017.8206060","","",,,,,285,35.63,57,5,8,"This work provides an architecture to enable robotic grasp planning via shape completion. Shape completion is accomplished through the use of a 3D convolutional neural network (CNN). The network is trained on our own new open source dataset of over 440,000 3D exemplars captured from varying viewpoints. At runtime, a 2.5D pointcloud captured from a single point of view is fed into the CNN, which fills in the occluded regions of the scene, allowing grasps to be planned and executed on the completed object. Runtime shape completion is very rapid because most of the computational costs of shape completion are borne during offline training. We explore how the quality of completions vary based on several factors. These include whether or not the object being completed existed in the training data and how many object models were used to train the network. We also look at the ability of the network to generalize to novel objects allowing the system to complete previously unseen objects at runtime. Finally, experimentation is done both in simulation and on actual robotic hardware to explore the relationship between completion quality and the utility of the completed mesh model for grasping.","",""
162,"Jad Naous, Glen Gibb, S. Bolouki, N. McKeown","NetFPGA: reusable router architecture for experimental research",2008,"","","","",745,"2024-08-22 15:04:59","","10.1145/1397718.1397720","","",,,,,162,10.13,41,4,16,"Our goal is to enable fast prototyping of networking hardware (e.g. modified Ethernet switches and IP routers) for teaching and research. To this end, we built and made available the NetFPGA platform. Starting from open-source reference designs, students and researchers create their designs in Verilog, and then download them to the NetFPGA board where they can process packets at line-rate for 4-ports of 1GE. The board is becoming widely used for teaching and research, and so it has become important to make it easy to re-use modules and designs. We have created a standard interface between modules, making it easier to plug modules together in pipelines, and to create new re-usable designs. In this paper we describe our modular design, and how we have used it to build several systems, including our IP router reference design and some extensions to it.","",""
45,"Jaehoo Lee, Kyu Eon Kim, Sumi Bang, I. Noh, Chibum Lee","A desktop multi-material 3D bio-printing system with open-source hardware and software",2017,"","","","",45,"2024-08-22 15:04:59","","10.1007/S12541-017-0072-X","","",,,,,45,6.43,9,5,7,"","",""
25,"Jai Bhagat, M. Wells, K. Harris, M. Carandini, Christopher P. Burgess","Rigbox: An Open-Source Toolbox for Probing Neurons and Behavior",2019,"","","","",234,"2024-08-22 15:04:59","","10.1523/ENEURO.0406-19.2020","","",,,,,25,5.00,5,5,5,"Setting up an experiment in behavioral neuroscience is a complex process that is often managed with ad hoc solutions. To streamline this process we developed Rigbox, a high-performance, open-source software toolbox that facilitates a modular approach to designing experiments (github.com/cortex-lab/Rigbox). Rigbox simplifies hardware I/O, synchronizes data streams from multiple sources, communicates with remote databases, and implements visual and auditory stimuli presentation. Its main submodule, Signals, allows intuitive programming of behavioral tasks. Here we illustrate its function with two interactive examples: a human psychophysics experiment, and the game of Pong. We give an overview of the other packages in Rigbox, provide benchmarks, and conclude with a discussion on the extensibility of the software and comparisons with similar toolboxes. Rigbox runs in MATLAB, with Java components to handle network communication, and a C library to boost performance.","",""
49,"Jakob Kentzer, Bjarke Koch, M. Thiim, Richard W. Jones, Egon Villumsen","An open source hardware-based mechatronics project: The replicating rapid 3-D printer",2011,"","","","",141,"2024-08-22 15:04:59","","10.1109/ICOM.2011.5937174","","",,,,,49,3.77,10,5,13,"This contribution reviews the execution of an open source hardware (OSHW) project as part of the Master in Mechatronics Degree Programme at the University of Southern Denmark. There were a number of reasons that motivated us to carry out this project; educational, intellectual and research reasons. Open source projects provide unique opportunities for students to gain experience solving real-world problems. There was also a research consideration in pursuing an OSHW project. Three of the authors of this contribution are working towards a Master's Degree in Innovation and Business and wanted to carry out an OSHW project as a precursor to doing research work on the ‘Commercialization of OSHW Projects’. The choice of the project was all important and we choose to build a 3-D printer using information provided by the RepRap Open Source Community because this satisfied nearly all our specifications for an OSHW project. Our experiences in constructing a 3-D printer as well as documenting the areas where the open source information currently has deficiencies are documented here.","",""
12,"James I. Novak","Self-Directed Learning in the Age of Open Source, Open Hardware and 3D Printing",2019,"","","","",136,"2024-08-22 15:04:59","","10.4018/978-1-5225-6292-4.CH007","","",,,,,12,2.40,12,1,5,"This chapter investigates the role of online communities in the future of learning. It considers the paradigm shift from the “push” of more formal educational models, to the notion of “pull” whereby people actively pursue personalized learning experiences. Empowered by the internet and the ability to access information and connect to each other at any time, massive online communities are building vast pools of information around specialized topics such as 3D printing, coding and electronics. This chapter discusses the role of digital technologies in transforming educational models. It provides an argument that practice-led, self-directed research is changing the way people engage with learning. The argument is supported by examples of practice from online communities, university and school education, drawing together key considerations for the future of education that are particularly relevant for technology and educational researchers, teachers across disciplines and those developing higher-level curriculum directives.","",""
40,"James Jackson, Gary Ellingson, T. McLain","ROSflight: A lightweight, inexpensive MAV research and development tool",2016,"","","","",733,"2024-08-22 15:04:59","","10.1109/ICUAS.2016.7502584","","",,,,,40,5.00,13,3,8,"To accelerate research and development of the autonomous capabilities of micro aerial vehicles we have developed flight control framework, ROSflight, as a research tool. ROSflight makes development of autopilot code easier and more efficient by minimizing the use of embedded systems, incorporating the Robot Operating System and using off-the-shelf and open-source hardware and software. Motivation and applications for use in the research community are discussed. Analysis of loop rate and communication bandwidth are presented as well as results from flight demonstration of two multirotor aircraft.","",""
97,"James Pallister, S. Hollis, J. Bennett","BEEBS: Open Benchmarks for Energy Measurements on Embedded Platforms",2013,"","","","",931,"2024-08-22 15:04:59","","","","",,,,,97,8.82,32,3,11,"This paper presents and justifies an open benchmark suite named BEEBS, targeted at evaluating the energy consumption of embedded processors.  We explore the possible sources of energy consumption, then select individual benchmarks from contemporary suites to cover these areas. Version one of BEEBS is presented here and contains 10 benchmarks that cover a wide range of typical embedded applications. The benchmark suite is portable across diverse architectures and is freely available.  The benchmark suite is extensively evaluated, and the properties of its constituent programs are analysed. Using real hardware platforms we show case examples which illustrate the difference in power dissipation between three processor architectures and their related ISAs. We observe significant differences in the average instruction dissipation between the architectures of 4.4x, specifically 170uW/MHz (ARM Cortex-M0), 65uW/MHz (Adapteva Epiphany) and 88uW/MHz (XMOS XS1-L1).","",""
25,"Jannis Gottwald, R. Zeidler, Nicolas Friess, M. Ludwig, C. Reudenbach, T. Nauss","Introduction of an automatic and open‐source radio‐tracking system for small animals",2019,"","","","",231,"2024-08-22 15:04:59","","10.1111/2041-210X.13294","","",,,,,25,5.00,4,6,5,"Movement ecology of small wild animals is often reliant on radio‐tracking methods due to the size and weight restrictions of available transmitters. In manual radio telemetry, large errors in spatial position and infrequent relocations prevent the effective analysis of small‐scale movement patterns and dynamic aspects of habitat selection. Automatic radio‐tracking systems present a potential solution for overcoming these drawbacks. However, existing systems use customized electronics and commercial software or exclusively record presence/absence data instead of triangulating the position of tagged individuals. We present a low‐cost automatic radio‐tracking system built from consumer electronic devices that can locate the position of radio transmitters under field conditions. We provide information on the hardware components, describe mobile and stationary set‐up options, and offer open‐source software solutions. We describe the workflow from hardware setup and antenna calibration, to recording and processing the data and present a proof of concept for forest‐dwelling bats using a mixed forest as study area. With an average bearing error of 6.8° and a linear error of 21 m within a distance ranging from 65 m to 190 m, the accuracy of our system exceeds that of both traditional methods as well as manual telemetry. This affordable and easy‐to‐use automatic radio‐tracking system complements existing tools in movement ecology research by combining the advantages of lightweight and cost‐efficient radio telemetry with an automatic tracking set‐up.","",""
93,"Jared Roesch, Steven Lyubomirsky, Logan Weber, Josh Pollock, Marisa Kirisame, Tianqi Chen, Zachary Tatlock","Relay: a new IR for machine learning frameworks",2018,"","","","",629,"2024-08-22 15:04:59","","10.1145/3211346.3211348","","",,,,,93,15.50,13,7,6,"Machine learning powers diverse services in industry including search, translation, recommendation systems, and security. The scale and importance of these models require that they be efficient, expressive, and portable across an array of heterogeneous hardware devices. These constraints are often at odds; in order to better accommodate them we propose a new high-level intermediate representation (IR) called Relay. Relay is being designed as a purely-functional, statically-typed language with the goal of balancing efficient compilation, expressiveness, and portability. We discuss the goals of Relay and highlight its important design constraints. Our prototype is part of the open source NNVM compiler framework, which powers Amazon's deep learning framework MxNet.","",""
123,"Jared Smith, Leif Madsen","Asterisk: The Future of Telephony",2005,"","","","",804,"2024-08-22 15:04:59","","","","",,,,,123,6.47,62,2,19,"It may be a while before Internet telephony with VoIP (Voice over Internet Protocol) reaches critical mass, but there's already tremendous movement in that direction. A lot of organizations are not only attracted to VoIP's promise of cost savings, but its ability to move data, images, and voice traffic over the same connection. Think of it: a single Internet phone call can take information sharing to a whole new level. That's why many IT administrators and developers are actively looking to set up VoIP-based private telephone switching systems within the enterprise. The efficiency that network users can reach with it is almost mind-boggling. And cheap, if the system is built with open source software like Asterisk. There are commercial VoIP options out there, but many are expensive systems running old, complicated code on obsolete hardware. Asterisk runs on Linux and can interoperate with almost all standards-based telephony equipment. And you can program it to your liking.Asterisk's flexibility comes at a price, however: it's not a simple system to learn, and the documentation is lacking. Asterisk: The Future of Telephony solves that problem by offering a complete roadmap for installing, configuring, and integrating Asterisk with existing phone systems. Our guide walks you through a basic dial plan step by step, and gives you enough working knowledge to set up a simple but complete system.What you end up with is largely up to you. Asterisk embraces the concept of standards-compliance, but also gives you freedom to choose how to implement your system. Asterisk: The Future of Telephony outlines all the options, and shows you how to set up voicemail services, call conferencing, interactive voice response, call waiting, caller ID, and more. You'll also learn how Asterisk merges voice and data traffic seamlessly across disparate networks. And you won't need additional hardware. For interconnection with digital and analog telephone equipment, Asterisk supports a number of hardware devices.Ready for the future of telephony? We'll help you hook it up.","",""
54,"Jarrod A. Roy, F. Koushanfar, I. Markov","Extended abstract: Circuit CAD tools as a security threat",2008,"","","","",836,"2024-08-22 15:04:59","","10.1109/HST.2008.4559052","","",,,,,54,3.38,18,3,16,"The demand for trusted and tamper-resistant computing platforms has placed security at the leading edge of research and industrial practice. Reported hardware-security breaches have already led to loss of confidential information, identity theft, intercepted cellular communications, and IP burglary. Our work demonstrates that ICs can be easily compromised by tampering with CAD tools or scripts that run these tools, suggesting that developing effective countermeasures against such attacks is a major research challenge. Our work is especially relevant to industrial uses of open-source EDA.","",""
10,"Jason Dai, J. Boujut, F. Pourroy, P. Marin","Issues and challenges of knowledge management in online open source hardware communities",2020,"","","","",19,"2024-08-22 15:04:59","","10.1017/dsj.2020.18","","",,,,,10,2.50,3,4,4,"Abstract Knowledge management (KM) is the process of creating, sharing, using and managing the knowledge and information of an organization. In this paper, we investigate KM practices and needs in Open Source Hardware (OSH) communities. The aim is to provide insights into the KM issues and challenges facing these communities. Our analysis is based on interviews carried out with the participants of 22 projects. Interview transcriptions were coded and tagged with concepts extracted from the literature. Text mining was used to uncover the main concepts embedded in the corpus. From this analysis, knowledge sharing emerged as one of the top-rated concepts. Codification and personalization also proved to be important KM approaches, both requiring support in the OSH design process. Using a dendrogram, we highlighted the benefits and challenges of codification together with some interesting concept associations. High contributor turnover, little or no standardization and weak project structuring are still key challenges for OSH communities when it comes to ensuring awareness, making decisions and sharing knowledge.","",""
138,"Jason G. Tong, Ian D. L. Anderson, Mohammed A. S. Khalid","Soft-Core Processors for Embedded Systems",2006,"","","","",793,"2024-08-22 15:04:59","","10.1109/ICM.2006.373294","","",,,,,138,7.67,46,3,18,"A soft-core processor is a hardware description language (HDL) model of a specific processor (CPU) that can be customized for a given application and synthesized for an ASIC or FPGA target. In many applications, soft-core processors provide several advantages over custom designed processors such as reduced cost, flexibility, platform independence and greater immunity to obsolescence. Embedded systems are hardware and software components working together to perform a specific function. Usually they contain embedded processors that are often in the form of soft-core processors that execute software code. This paper presents a survey of soft-core processors that are used in embedded systems. Several soft-core processors available from commercial vendors and open-source communities are reviewed and compared based on major architectural features. In addition, several real world examples of embedded systems that employ soft-core processors are summarized. As the complexity of embedded systems continues to increase, it is expected that the usage of customizable soft-core processors will become more widespread.","",""
213,"Jason Lowe-Power, Abdul Mutaal Ahmad, Ayaz Akram, Mohammad Alian, Rico Amslinger, M. Andreozzi, Adrià Armejach, Nils Asmussen, Srikant Bharadwaj, Gabriel Black, Gedare Bloom, Bobby R. Bruce, Daniel Rodrigues Carvalho, J. Castrillón, Lizhong Chen, Nicolas Derumigny, S. Diestelhorst, Wendy Elsasser, Marjan Fariborz, A. Farmahini-Farahani, P. Fotouhi, Ryan Gambord, Jayneel Gandhi, Dibakar Gope, Thomas Grass, Bagus Hanindhito, Andreas Hansson, Swapnil Haria, Austin Harris, Timothy Hayes, Adrián Herrera, Matthew Horsnell, Syed Ali Raza Jafri, R. Jagtap, Hanhwi Jang, Reiley Jeyapaul, Timothy M. Jones, Matthias Jung, Subash Kannoth, Hamidreza Khaleghzadeh, Yuetsu Kodama, T. Krishna, Tom Marinelli, Christian Menard, Andrea Mondelli, T. Muck, Omar Naji, Krishnendra Nathella, H. Nguyen, Nikos Nikoleris, Lena E. Olson, Marc S. Orr, B. Pham, P. Prieto, Trivikram Reddy, A. Roelke, Mahyar Samani, Andreas Sandberg, J. Setoain, Boris Shingarov, Matthew D. Sinclair, T. Ta, Rahul Thakur, G. Travaglini, M. Upton, Nilay Vaish, Ilias Vougioukas, Zhengrong Wang, N. Wehn, C. Weis, D. Wood, Hongil Yoon, 'Eder F. Zulian","The gem5 Simulator: Version 20.0+",2020,"","","","",548,"2024-08-22 15:04:59","","","","",,,,,213,53.25,21,73,4,"The open-source and community-supported gem5 simulator is one of the most popular tools for computer architecture research. This simulation infrastructure allows researchers to model modern computer hardware at the cycle level, and it has enough fidelity to boot unmodified Linux-based operating systems and run full applications for multiple architectures including x86, Arm, and RISC-V. The gem5 simulator has been under active development over the last nine years since the original gem5 release. In this time, there have been over 7500 commits to the codebase from over 250 unique contributors which have improved the simulator by adding new features, fixing bugs, and increasing the code quality. In this paper, we give and overview of gem5's usage and features, describe the current state of the gem5 simulator, and enumerate the major changes since the initial release of gem5. We also discuss how the gem5 simulator has transitioned to a formal governance model to enable continued improvement and community support for the next 20 years of computer architecture research.","",""
7,"Jean-Fran Boujut","Open Source Hardware Communities: Investigating Participation in Design Activities",2019,"","","","",34,"2024-08-22 15:04:59","","10.1017/DSI.2019.237","","",,,,,7,1.40,7,1,5,"Open source design of hardware products is an emerging phenomenon that takes more and more importance today's in the society. However, open source (hardware) design implies a tremendous change in both design practices and philosophy because it is partly related to the movements of creative commons and the sharing economy. From this perspective one could think that participation is crucial in the success of open source design projects. In this paper, we analyse 9 case studies in the light of 3 hypotheses. If many studies highlight the potential of the crowd as a resource for design tasks, our study shows that for open source design communities the participation is not massive. In this study, we used an activity-based approach to build our model. As open source design processes are fairly unstructured and based on voluntary participation, it is impossible to adopt a classical task-based model. With the help of this model, we were able evaluate the overall size of the active community, the participation rate with regards to the activities. This study paves the way to deeper and extensive studies on how to support communities engaged in open source design of hardware products.","",""
23,"Jeb E. Brewer, B. Badders, J. Berk, J. Straub","Work To-Date on Mechanical Design for an Open Hardware Spacecraft",2013,"","","","",437,"2024-08-22 15:04:59","","","","",,,,,23,2.09,6,4,11,"The OpenOrbiter CubeSat seeks to demonstrate the designs created for the Open Prototype for Educational NanoSats (OPEN) initiative. OPEN provides a set of freely available design documents that can be utilized by educational and research teams worldwide. The OPEN structure implements a different strategy than most other CubeSats, allowing it to maximize the use of the overhang space (an area of space between the supports for the frame rails and the wall in the PPOD deployer). It also provides a location for payload components or a propellant tank at the spacecraft’s center of mass. This design is enabled by a novel electrical approach: instead of utilizing physical stacking of the electrical components, a corner-post frame is used to support the various electrical boards which are inserted vertically. The boards still are electrically stacked, and thus behave the same, despite their physical configuration. This corner post and base plate frame is also the main source of structural rigidity. The subsystem and payload module printed circuit boards further increase structural rigidity. This structural approach allows for an approximate 30% increase in available volume for the spacecraft, versus a standard 10 cm x 10 cm x 11 cm configuration that does not utilize the overhang space. Designing this innovative structure required many iterations of refinement using computer assisted modeling software. The earliest of these design models prototyped the idea of using vertically mounted electrical boards. These models were also used to determine possible mounting techniques of subsystems such as the solar panels to exploit the additional space provided by the overhang. As refinement continued, the designs became more involved and included the specific, detailed plans for the mounting locations and techniques for the various subsystems. This paper presents the latest and most detailed model, which includes all of the finalized sections of the structure combined together in a single assembly. It also presents a review of the process that was undertaken to produce this design and the successes and problems encountered on the way. The paper concludes by discussing the next steps towards completing the OpenOrbiter spacecraft. Vertical Board Insertion Four printed circuit boards (PCBs) comprising the subsystems and payload are inserted into the spacecraft vertically. This prevents boards from shaking loose and provides assurance that the boards are properly seated (as the top plate cannot be locked in place if a board is not fully seated. This approach also facilitates the direct deployment of external objects (e.g., an antenna) from boards. Payload Bay The payload bay is a 5 cm x 5 cm x 10 cm opening placed at the Y & Z axis center of mass. This allows continuation of this open space throughout a multi-unit CubeSat (e.g., a 2U — 20 cm x 10 cm x 10 cm or 3U — 30 cm x 10 cm x 10 cm) for an optical assembly or other purpose. Placement of the payload bay at the center of mass is also conducive to use as a location for propellant storage. Structural Configuration The structure of the CubeSat integrates several techniques to maximize the efficiency of space usage within the satellite. The space between the sides of the CubeSat and the sides of the launcher is often overlooked and left wasted. With the OPEN design, the overhang space (0.6 cm) between the sides of the typical 10 cm x 10 cm x 10 cm CubeSat and the sides of the launcher is utilized to create extra space for use by board designers. Another structural feature of the CubeSat design is the use of subsystem PCBs as sidewalls to increase the structural rigidity without the use of space and mass consuming cross-members. Each PCB spans the whole side of the spacecraft. Most contain their own structural elements to mount solar panels and other hardware. Thus, in virtually all cases, the PCBs will provide greater levels of structural support, as compared to lightweight metal cross -braces without consuming the additional mass and volume required for the cross-braces. Additionally, the elimination of the cross-braces increases design flexibility. CAD Model Under Development Recent work has focused on the development of a CAD model of the OPEN framework. This model demonstrates the maximum size possible for side panels (including the used overhang space) and the integration approach between the boards, top and bottom plates and structural members. The CAD model has been used to 3D print a physical prototype unit to facilitate payload design and integration testing. Future Work Future work will include additional testing of the structural stability of the proposed design, thermal design and validation testing of the components and completed spacecraft. The validation testing will ensure that the spacecraft’s weight distribution and (consequentially) balance are within the parameters required by the attitude determination and control subsystem (ADCS), thermal / vacuum design suitability and vibration / shock resilience. Acknowledgements Presentation of this poster at the 2013 Spring CubeSat Workshop is made possible with support from the UND Intercollegiate Academic Fund, administered by the Office of the Provost and by North Dakota EPSCoR (NSF # EPS814442). Local businesses support is also acknowledged. Thermal Vacuum Testing Thermal vacuum testing has been conducted to test the viability of electrical components in a space-like environment. At present, this has been used to test components and commercial-off-the-shelf (COTS) hardware that is being considered for use. Chamber hardware limitations limit this testing to an environment which has analogous temperature and pressure to an altitude of 100,000 feet, for in-house testing. Future thermal vacuum testing will be required to validate newly created components and some materials that are planned for use on the spacecraft.","",""
129,"Jeff Johnson","Rethinking floating point for deep learning",2018,"","","","",951,"2024-08-22 15:04:59","","","","",,,,,129,21.50,129,1,6,"Reducing hardware overhead of neural networks for faster or lower power inference and training is an active area of research. Uniform quantization using integer multiply-add has been thoroughly investigated, which requires learning many quantization parameters, fine-tuning training or other prerequisites. Little effort is made to improve floating point relative to this baseline; it remains energy inefficient, and word size reduction yields drastic loss in needed dynamic range. We improve floating point to be more energy efficient than equivalent bit width integer hardware on a 28 nm ASIC process while retaining accuracy in 8 bits with a novel hybrid log multiply/linear add, Kulisch accumulation and tapered encodings from Gustafson's posit format. With no network retraining, and drop-in replacement of all math and float32 parameters via round-to-nearest-even only, this open-sourced 8-bit log float is within 0.9% top-1 and 0.2% top-5 accuracy of the original float32 ResNet-50 CNN model on ImageNet. Unlike int8 quantization, it is still a general purpose floating point arithmetic, interpretable out-of-the-box. Our 8/38-bit log float multiply-add is synthesized and power profiled at 28 nm at 0.96x the power and 1.12x the area of 8/32-bit integer multiply-add. In 16 bits, our log float multiply-add is 0.59x the power and 0.68x the area of IEEE 754 float16 fused multiply-add, maintaining the same signficand precision and dynamic range, proving useful for training ASICs as well.","",""
371,"Jeffrey Shafer, S. Rixner, A. Cox","The Hadoop distributed filesystem: Balancing portability and performance",2010,"","","","",615,"2024-08-22 15:04:59","","10.1109/ISPASS.2010.5452045","","",,,,,371,26.50,124,3,14,"Hadoop is a popular open-source implementation of MapReduce for the analysis of large datasets. To manage storage resources across the cluster, Hadoop uses a distributed user-level filesystem. This filesystem - HDFS - is written in Java and designed for portability across heterogeneous hardware and software platforms. This paper analyzes the performance of HDFS and uncovers several performance issues. First, architectural bottlenecks exist in the Hadoop implementation that result in inefficient HDFS usage due to delays in scheduling new MapReduce tasks. Second, portability limitations prevent the Java implementation from exploiting features of the native platform. Third, HDFS implicitly makes portability assumptions about how the native platform manages storage resources, even though native filesystems and I/O schedulers vary widely in design and behavior. This paper investigates the root causes of these performance bottlenecks in order to evaluate tradeoffs between portability and performance in the Hadoop distributed filesystem.","",""
79,"Jelmer Tiete, Federico Domínguez, B. Silva, Laurent Segers, K. Steenhaut, A. Touhafi","SoundCompass: A Distributed MEMS Microphone Array-Based Sensor for Sound Source Localization",2014,"","","","",916,"2024-08-22 15:04:59","","10.3390/s140201918","","",,,,,79,7.90,13,6,10,"Sound source localization is a well-researched subject with applications ranging from localizing sniper fire in urban battlefields to cataloging wildlife in rural areas. One critical application is the localization of noise pollution sources in urban environments, due to an increasing body of evidence linking noise pollution to adverse effects on human health. Current noise mapping techniques often fail to accurately identify noise pollution sources, because they rely on the interpolation of a limited number of scattered sound sensors. Aiming to produce accurate noise pollution maps, we developed the SoundCompass, a low-cost sound sensor capable of measuring local noise levels and sound field directionality. Our first prototype is composed of a sensor array of 52 Microelectromechanical systems (MEMS) microphones, an inertial measuring unit and a low-power field-programmable gate array (FPGA). This article presents the SoundCompass’s hardware and firmware design together with a data fusion technique that exploits the sensing capabilities of the SoundCompass in a wireless sensor network to localize noise pollution sources. Live tests produced a sound source localization accuracy of a few centimeters in a 25-m2 anechoic chamber, while simulation results accurately located up to five broadband sound sources in a 10,000-m2 open field.","",""
19,"Jens Korinth, David de la Chevallerie, A. Koch","An Open-Source Tool Flow for the Composition of Reconfigurable Hardware Thread Pool Architectures",2015,"","","","",161,"2024-08-22 15:04:59","","10.1109/FCCM.2015.22","","",,,,,19,2.11,6,3,9,"With heterogeneous parallel computing becoming more accessible from general-purpose languages, such as directive-enhanced C/C++ or X10, it is now profitable to exploit the highly energy-efficient operation of reconfigurable accelerators in such frameworks. A common paradigm to present the accelerator to the programmer is as a pool of individual threads, each executed on dedicated hardware. While the actual accelerator logic can be synthesized into IP cores from a high-level language using tools such as Vivado HLS, no tools currently exist to automatically compose multiple heterogeneous accelerator cores into a unified hardware thread pool, including the assembly of external control and memory interfaces. Thread Pool Composer closes the gap in the design flow between high-level synthesis and general-purpose IP integration by automatically composing hardware thread pools and their external interfaces from high-level descriptions and opening them to software using a common API.","",""
128,"Jerry Zhao, Abraham Gonzalez","Sonic BOOM: The 3rd Generation Berkeley Out-of-Order Machine",2020,"","","","",566,"2024-08-22 15:04:59","","","","",,,,,128,32.00,64,2,4,"We present Sonic BOOM, the third generation of the Berkeley Out-of-Order Machine (BOOM). Sonic BOOM is an open-source RTL implementation of a RISC-V superscalar out-of-order core and is the fastest open-source core by IPC available at time of publication. Sonic BOOM provides a state-of-the-art platform for research in high-performance core design by providing substantial microarchitectural improvements over BOOM version 2. The most significant performance gains are enabled by optimizations to BOOM’s execution path and a redesign of the instruction fetch unit with a new hardware implementation of the state-of-the-art TAGE branch predictor algorithm. Additionally, Sonic BOOM provides the first open implementation of a load-store unit that can provide multiple loads per cycle. With these optimizations and new features, Sonic BOOM can achieve 2x higher IPC on SPEC CPU benchmarks compared to any prior open-source out-of-order core. Additionally, Sonic BOOM achieves 6.2 CoreMark/MHz, making it the fastest currently available open-source core by IPC.","",""
52,"Jiaqi Xu, Bin Li, Bo Lu, Yunhui Liu, Q. Dou, P. Heng","SurRoL: An Open-source Reinforcement Learning Centered and dVRK Compatible Platform for Surgical Robot Learning",2021,"","","","",160,"2024-08-22 15:04:59","","10.1109/IROS51168.2021.9635867","","",,,,,52,17.33,9,6,3,"Autonomous surgical execution relieves tedious routines and surgeon’s fatigue. Recent learning-based methods, especially reinforcement learning (RL) based methods, achieve promising performance for dexterous manipulation, which usually requires the simulation to collect data efficiently and reduce the hardware cost. The existing learning-based simulation platforms for medical robots suffer from limited scenarios and simplified physical interactions, which degrades the real-world performance of learned policies. In this work, we designed SurRoL, an RL-centered simulation platform for surgical robot learning compatible with the da Vinci Research Kit (dVRK). The designed SurRoL integrates a user-friendly RL library for algorithm development and a real-time physics engine, which is able to support more PSM/ECM scenarios and more realistic physical interactions. Ten learning-based surgical tasks are built in the platform, which are common in the real autonomous surgical execution. We evaluate SurRoL using RL algorithms in simulation, provide in-depth analysis, deploy the trained policies on the real dVRK, and show that our SurRoL achieves better transferability in the real world.","",""
50,"Jiayi Weng, Min Lin, Shengyi Huang, Bo Liu, Denys Makoviichuk, Viktor Makoviychuk, Zi-Yan Liu, Yufan Song, Ting Luo, Yukun Jiang, Zhongwen Xu, Shuicheng Yan","EnvPool: A Highly Parallel Reinforcement Learning Environment Execution Engine",2022,"","","","",930,"2024-08-22 15:04:59","","10.48550/arXiv.2206.10558","","",,,,,50,25.00,5,12,2,"There has been significant progress in developing reinforcement learning (RL) training systems. Past works such as IMPALA, Apex, Seed RL, Sample Factory, and others, aim to improve the system's overall throughput. In this paper, we aim to address a common bottleneck in the RL training system, i.e., parallel environment execution, which is often the slowest part of the whole system but receives little attention. With a curated design for paralleling RL environments, we have improved the RL environment simulation speed across different hardware setups, ranging from a laptop and a modest workstation, to a high-end machine such as NVIDIA DGX-A100. On a high-end machine, EnvPool achieves one million frames per second for the environment execution on Atari environments and three million frames per second on MuJoCo environments. When running EnvPool on a laptop, the speed is 2.8x that of the Python subprocess. Moreover, great compatibility with existing RL training libraries has been demonstrated in the open-sourced community, including CleanRL, rl_games, DeepMind Acme, etc. Finally, EnvPool allows researchers to iterate their ideas at a much faster pace and has great potential to become the de facto RL environment execution engine. Example runs show that it only takes five minutes to train agents to play Atari Pong and MuJoCo Ant on a laptop. EnvPool is open-sourced at https://github.com/sail-sg/envpool.","",""
76,"Jim van Meggelen, Jared Smith, Leif Madsen","Asterisk - the future of telephony: join the open source PBX revolution",2005,"","","","",455,"2024-08-22 15:04:59","","","","",,,,,76,4.00,25,3,19,"It may be a while before Internet telephony with VoIP (Voice over Internet Protocol) reaches critical mass, but there's already tremendous movement in that direction. A lot of organizations are not only attracted to VoIP's promise of cost savings, but its ability to move data, images, and voice traffic over the same connection. Think of it: a single Internet phone call can take information sharing to a whole new level. That's why many IT administrators and developers are actively looking to set up VoIP-based private telephone switching systems within the enterprise. The efficiency that network users can reach with it is almost mind-boggling. And cheap, if the system is built with open source software like Asterisk. There are commercial VoIP options out there, but many are expensive systems running old, complicated code on obsolete hardware. Asterisk runs on Linux and can interoperate with almost all standards-based telephony equipment. And you can program it to your liking.Asterisk's flexibility comes at a price, however: it's not a simple system to learn, and the documentation is lacking. Asterisk: The Future of Telephony solves that problem by offering a complete roadmap for installing, configuring, and integrating Asterisk with existing phone systems. Our guide walks you through a basic dial plan step by step, and gives you enough working knowledge to set up a simple but complete system.What you end up with is largely up to you. Asterisk embraces the concept of standards-compliance, but also gives you freedom to choose how to implement your system. Asterisk: The Future of Telephony outlines all the options, and shows you how to set up voicemail services, call conferencing, interactive voice response, call waiting, caller ID, and more. You'll also learn how Asterisk merges voice and data traffic seamlessly across disparate networks. And you won't need additional hardware. For interconnection with digital and analog telephone equipment, Asterisk supports a number of hardware devices.Ready for the future of telephony? We'll help you hook it up.","",""
42,"Jimmy J. Lin","Scalable Language Processing Algorithms for the Masses: A Case Study in Computing Word Co-occurrence Matrices with MapReduce",2008,"","","","",855,"2024-08-22 15:04:59","","10.3115/1613715.1613769","","",,,,,42,2.63,42,1,16,"This paper explores the challenge of scaling up language processing algorithms to increasingly large datasets. While cluster computing has been available in commercial environments for several years, academic researchers have fallen behind in their ability to work on large datasets. I discuss two barriers contributing to this problem: lack of a suitable programming model for managing concurrency and difficulty in obtaining access to hardware. Hadoop, an open-source implementation of Google's MapReduce framework, provides a compelling solution to both issues. Its simple programming model hides system-level details from the developer, and its ability to run on commodity hardware puts cluster computing within the reach of many academic research groups. This paper illustrates these points with a case study in building word cooccurrence matrices from large corpora. I conclude with an analysis of an alternative computing model based on renting instead of buying computer clusters.","",""
73,"Jing Huang, Justin A. Lemkul, P. Eastman, Alexander D. MacKerell","Molecular dynamics simulations using the drude polarizable force field on GPUs with OpenMM: Implementation, validation, and benchmarks",2018,"","","","",672,"2024-08-22 15:04:59","","10.1002/jcc.25339","","",,,,,73,12.17,18,4,6,"Presented is the implementation of the Drude force field in the open‐source OpenMM simulation package allowing for access to graphical processing unit (GPU) hardware. In the Drude model, electronic degrees of freedom are represented by negatively charged particles attached to their parent atoms via harmonic springs, such that extra computational overhead comes from these additional particles and virtual sites representing lone pairs on electronegative atoms, as well as the associated thermostat and integration algorithms. This leads to an approximately fourfold increase in computational demand over additive force fields. However, by making the Drude model accessible to consumer‐grade desktop GPU hardware it will be possible to perform simulations of one microsecond or more in less than a month, indicating that the barrier to employ polarizable models has largely been removed such that polarizable simulations with the classical Drude model are readily accessible and practical.","",""
49,"Jingfei Kong, Martin Dimitrov, Yi Yang, J. Liyanage, Lin Cao, Jacob Staples, Mike Mantor, Huiyang Zhou","Accelerating MATLAB Image Processing Toolbox functions on GPUs",2010,"","","","",837,"2024-08-22 15:04:59","","10.1145/1735688.1735703","","",,,,,49,3.50,6,8,14,"In this paper, we present our effort in developing an open-source GPU (graphics processing units) code library for the MATLAB Image Processing Toolbox (IPT). We ported a dozen of representative functions from IPT and based on their inherent characteristics, we grouped these functions into four categories: data independent, data sharing, algorithm dependent and data dependent. For each category, we present a detailed case study, which reveals interesting insights on how to efficiently optimize the code for GPUs and highlight performance-critical hardware features, some of which have not been well explored in existing literature. Our results show drastic speedups for the functions in the data-independent or data-sharing category by leveraging hardware support judiciously; and moderate speedups for those in the algorithm-dependent category by careful algorithm selection and parallelization. For the functions in the last category, fine-grain synchronization and data-dependency requirements are the main obstacles to an efficient implementation on GPUs.","",""
31,"Jiyuan Wang, Qian Zhang, G. Xu, Miryung Kim","QDiff: Differential Testing of Quantum Software Stacks",2021,"","","","",942,"2024-08-22 15:04:59","","10.1109/ASE51524.2021.9678792","","",,,,,31,10.33,8,4,3,"Over the past few years, several quantum software stacks (QSS) have been developed in response to rapid hardware advances in quantum computing. A QSS includes a quantum programming language, an optimizing compiler that translates a quantum algorithm written in a high-level language into quantum gate instructions, a quantum simulator that emulates these instructions on a classical device, and a software controller that sends analog signals to a very expensive quantum hardware based on quantum circuits. In comparison to traditional compilers and architecture simulators, QSSes are difficult to tests due to the probabilistic nature of results, the lack of clear hardware specifications, and quantum programming complexity.This work devises a novel differential testing approach for QSSes, named QDiff with three major innovations: (1) We generate input programs to be tested via semantics-preserving, source to source transformation to explore program variants. (2) We speed up differential testing by filtering out quantum circuits that are not worthwhile to execute on quantum hardware by analyzing static characteristics such as a circuit depth, 2-gate operations, gate error rates, and T1 relaxation time. (3) We design an extensible equivalence checking mechanism via distribution comparison functions such as Kolmogorov–Smirnov test and cross entropy.We evaluate QDiff with three widely-used open source QSSes: Qiskit from IBM, Cirq from Google, and Pyquil from Rigetti. By running QDiff on both real hardware and quantum simulators, we found several critical bugs revealing potential instabilities in these platforms. QDiff’s source transformation is effective in producing semantically equivalent yet not-identical circuits (i.e., 34% of trials), and its filtering mechanism can speed up differential testing by 66%.","",""
196,"Jo Van Bulck, Frank Piessens, Raoul Strackx","SGX-Step: A Practical Attack Framework for Precise Enclave Execution Control",2017,"","","","",585,"2024-08-22 15:04:59","","10.1145/3152701.3152706","","",,,,,196,28.00,65,3,7,"Protected module architectures such as Intel SGX hold the promise of protecting sensitive computations from a potentially compromised operating system. Recent research convincingly demonstrated, however, that SGX's strengthened adversary model also gives rise to to a new class of powerful, low-noise side-channel attacks leveraging first-rate control over hardware. These attacks commonly rely on frequent enclave preemptions to obtain fine-grained side-channel observations. A maximal temporal resolution is achieved when the victim state is measured after every instruction. Current state-of-the-art enclave execution control schemes, however, do not generally achieve such instruction-level granularity. This paper presents SGX-Step, an open-source Linux kernel framework that allows an untrusted host process to configure APIC timer interrupts and track page table entries directly from user space. We contribute and evaluate an improved approach to single-step enclaved execution at instruction-level granularity, and we show how SGX-Step enables several new or improved attacks. Finally, we discuss its implications for the design of effective defense mechanisms.","",""
104,"Jo Van Bulck, Frank Piessens, Raoul Strackx","Nemesis: Studying Microarchitectural Timing Leaks in Rudimentary CPU Interrupt Logic",2018,"","","","",989,"2024-08-22 15:04:59","","10.1145/3243734.3243822","","",,,,,104,17.33,35,3,6,"Recent research on transient execution vulnerabilities shows that current processors exceed our levels of understanding. The prominent Meltdown and Spectre attacks abruptly revealed fundamental design flaws in CPU pipeline behavior and exception handling logic, urging the research community to systematically study attack surface from microarchitectural interactions. We present Nemesis, a previously overlooked side-channel attack vector that abuses the CPU's interrupt mechanism to leak microarchitectural instruction timings from enclaved execution environments such as Intel SGX, Sancus, and TrustLite. At its core, Nemesis abuses the same subtle microarchitectural behavior that enables Meltdown, i.e., exceptions and interrupts are delayed until instruction retirement. We show that by measuring the latency of a carefully timed interrupt, an attacker controlling the system software is able to infer instruction-granular execution state from hardware-enforced enclaves. In contrast to speculative execution vulnerabilities, our novel attack vector is applicable to the whole computing spectrum, from small embedded sensor nodes to high-end commodity x86 hardware. We present practical interrupt timing attacks against the open-source Sancus embedded research processor, and we show that interrupt latency reveals microarchitectural instruction timings from off-the-shelf Intel SGX enclaves. Finally, we discuss challenges for mitigating Nemesis-type attacks at the hardware and software levels.","",""
37,"Johannes Betz, A. Wischnewski, Alexander Heilmeier, Felix Nobis, Tim Stahl, Leonhard Hermansdorfer, M. Lienkamp","A Software Architecture for an Autonomous Racecar",2019,"","","","",681,"2024-08-22 15:04:59","","10.1109/VTCSpring.2019.8746367","","",,,,,37,7.40,5,7,5,"This paper presents a detailed description of the software architecture that is used in the autonomous Roborace vehicles by the TUM-Team. The development of the software architecture was driven by both hardware components and usage of open source languages for making the software architecture reusable and easy to understand. The architecture combines the autonomous software functions perception, planning and control which are modularized for the usage on different hardware and for the purpose of using the car on high speed racetracks. The goal of the paper is to show which software functions are necessary for letting the car drive autonomously and fast around a racetrack.","",""
311,"Johannes Meyer, A. Sendobry, S. Kohlbrecher, U. Klingauf, O. Stryk","Comprehensive Simulation of Quadrotor UAVs Using ROS and Gazebo",2012,"","","","",609,"2024-08-22 15:04:59","","10.1007/978-3-642-34327-8_36","","",,,,,311,25.92,62,5,12,"","",""
30,"Johannes Winter","Experimenting with ARM TrustZone -- Or: How I Met Friendly Piece of Trusted Hardware",2012,"","","","",577,"2024-08-22 15:04:59","","10.1109/TrustCom.2012.157","","",,,,,30,2.50,30,1,12,"ARM TrustZone is an emerging embedded security technology based on the split of a system into a secure and normal world. Currently a number of System-on-Chip platforms exist, which include support for ARM TrustZone. Unfortunately relatively little work has been done on open-source software for TrustZone systems. In our belief this is partly caused by the lack of cost-efficient development boards, which allow access to ARM TrustZone features. This paper discusses experiences made by the authors with a rather inexpensive development board and shows how system-level development on TrustZone-enabled hardware is possible in class-room settings.","",""
20,"John J. Laureto, Joshua M. Pearce","Open Source Multi-Head 3D Printer for Polymer-Metal Composite Component Manufacturing",2017,"","","","",282,"2024-08-22 15:04:59","","10.3390/TECHNOLOGIES5020036","","",,,,,20,2.86,10,2,7,"As low-cost desktop 3D printing is now dominated by free and open source self-replicating rapid prototype (RepRap) derivatives, there is an intense interest in extending the scope of potential applications to manufacturing. This study describes a manufacturing technology that enables a constrained set of polymer-metal composite components. This paper provides (1) free and open source hardware and (2) software for printing systems that achieves metal wire embedment into a polymer matrix 3D-printed part via a novel weaving and wrapping method using (3) OpenSCAD and parametric coding for customized g-code commands. Composite parts are evaluated from the technical viability of manufacturing and quality. The results show that utilizing a multi-polymer head system for multi-component manufacturing reduces manufacturing time and reduces the embodied energy of manufacturing. Finally, it is concluded that an open source software and hardware tool chain can provide low-cost industrial manufacturing of complex metal-polymer composite-based products.","",""
66,"John Kölndorfer, Nick Hopper, Yongdae Kim","Location Leaks on the GSM Air Interface",2011,"","","","",771,"2024-08-22 15:04:59","","","","",,,,,66,5.08,22,3,13,"Cellular phones have become a ubiquitous means of communications with over 5 billion users worldwide in 2010, of which 80% are GSM subscribers. Due to their use of the wireless medium and their mobile nature, those phones listen to broadcast communications that could reveal their physical location to a passive adversary. In this paper, we investigate techniques to test if a user is present within a small area, or absent from a large area by simply listening on the broadcast GSM channels. With a combination of readily available hardware and open source software, we demonstrate practical location test attacks that include circumventing the temporary identifier designed to protect the identity of the end user. Finally we propose solutions that would improve the location privacy of users with low system impact.","",""
23,"John L. Hammond, T. Minyard, J. Browne","End-to-end framework for fault management for open source clusters: Ranger",2010,"","","","",420,"2024-08-22 15:04:59","","10.1145/1838574.1838583","","",,,,,23,1.64,8,3,14,"The scale and complexity of both hardware and software on large open source software systems such as Ranger make occurrence of faults and failures inevitable. What is not inevitable is that they should be allowed to go undetected, nor that diagnosis and recovery from failures should continue to be largely manual and effort intensive. This paper presents a framework for end-to-end fault management for open source clusters which is being developed on Ranger, but which targets general open source software based clusters. The elements of the framework are: a rationalized system logging stack for Linux, low overhead log and status monitoring, and a multilevel suite of diagnostic analyses. This paper describes this framework, presents the accomplishments to date, the results which have been obtained with the elements of the framework which are in place, and the plans for future development including a solicitation for collaboration on the project.","",""
147,"John-Olof Nilsson, A. Gupta, P. Händel","Foot-mounted inertial navigation made easy",2014,"","","","",635,"2024-08-22 15:04:59","","10.1109/IPIN.2014.7275464","","",,,,,147,14.70,49,3,10,"Despite being around for almost two decades, foot-mounted inertial navigation only has gotten a limited spread. Contributing factors to this are lack of suitable hardware platforms and difficult system integration. As a solution to this, we present an open-source wireless foot-mounted inertial navigation module with an intuitive and significantly simplified dead reckoning interface. The interface is motivated from statistical properties of the underlying aided inertial navigation and argued to give negligible information loss. The module consists of both a hardware platform and embedded software. Details of the platform and the software are described, and a summarizing description of how to reproduce the module are given. System integration of the module is outlined and finally, we provide a basic performance assessment of the module. In summary, the module provides a modularization of the foot-mounted inertial navigation and makes the technology significantly easier to use.","",""
165,"John-Olof Nilsson, I. Skog, P. Händel, K. Hari","Foot-mounted INS for everybody - an open-source embedded implementation",2012,"","","","",372,"2024-08-22 15:04:59","","10.1109/PLANS.2012.6236875","","",,,,,165,13.75,41,4,12,"We present an open-source, realtime, embedded implementation of a foot-mounted, zero-velocity-update-aided inertial navigation system. The implementation includes both hardware design and software, uses off-the-shelf components and assembly methods, and features a standard USB interface. The software is written in C and can easily be modified to run user implemented algorithms. The hardware design and the software are released under permissive open-source licenses and production files, source code, documentation, and further resources are available at www.openshoe.org. The reproduction cost for a single unit is below $800, with the inertial measurement unit making up the bulk ($700). The form factor of the implementation is small enough for it to be integrated in the sole of a shoe. A performance evaluation of the system shows a position errors for short trajectories (<;100 [m]) of ± 0.2-1% of the traveled distance, depending on the shape of trajectory.","",""
34,"Jonas Forsslund, Michael C. Yip, Eva-Lotta Sallnäs","WoodenHaptics: A Starting Kit for Crafting Force-Reflecting Spatial Haptic Devices",2015,"","","","",759,"2024-08-22 15:04:59","","10.1145/2677199.2680595","","",,,,,34,3.78,11,3,9,"Spatial haptic interfaces have been around for 20 years. Yet, few affordable devices have been produced, and the design space in terms of physical workspace and haptic fidelity of devices that have been produced are limited and discrete. In this paper, an open-source, open-hardware module-based kit is presented that allows an interaction designer with little electro-mechanical experience to manufacture and assemble a fully working spatial haptic interface. It also allows for modification in shape and size as well as tuning of parameters to fit a particular task or application. Results from an evaluation showed that the haptic quality of the WoodenHaptics device was on par with a Phantom Desktop and that a novice could assemble it with guidance in a normal office space. This open source starting kit, uploaded free-to-download online, affords sketching in hardware; it unsticks the hardware from being a highly-specialized and esoteric craft to being an accessible and user-friendly technology, while maintaining the feel of high-fidelity haptics.","",""
369,"Jonathan Currie, David I. Wilson","Opti: Lowering the Barrier Between Open Source Optimizers and the Industrial MATLAB User",2012,"","","","",367,"2024-08-22 15:04:59","","","","",,,,,369,30.75,185,2,12,"For those interested in tackling industrial optimization problems, typical approaches include either purchasing a sophisticated and often specialised solver perhaps with accompanying consulting support, using an internet-based optimization server or using a Matlab toolbox. While there are a number of open source optimization solvers that enable one to solve a wide range of continuous and discrete, linear and nonlinear, medium and large-scale optimization problems, only a few contain useable pre-compiled binaries for Windows. The initiative described in this work, Opti, bridges this gap by providing an intuitive object-based general optimization platform that interfaces with many of those freely available, and those with low or no-cost licence requirements, high-quality optimization codes all accessible within the rapid development environment Matlab. The user needs not compile or build the various tools, but still leverages off the advantages of using high-end desktop hardware (such as 64bit multi-core processors) and remaining in a powerful and familiar development environment.","",""
30,"Jonathan Muñoz, Fabian Rincon, Tengfei Chang, Xavier Vilajosana, B. Vermeulen, Thijs Walcarius, Wim Van de Meerssche, T. Watteyne","OpenTestBed: Poor Man's IoT Testbed",2019,"","","","",690,"2024-08-22 15:04:59","","10.1109/INFCOMW.2019.8845269","","",,,,,30,6.00,4,8,5,"Testbeds are a key tool for evaluating and benchmarking IoT solutions. Several public testbeds are being run by institutions around the world. These are built with a variety of tools, and are typically “heavy” installations with dedicated wiring, hard installations, switches, servers, and a reservation and experiment management back-end. To complement those, we have taken the opposite, minimalistic, approach in designing the OpenTestBed. The OpenTestBed features all the tools necessary to build a testbed from off-the-shelf components such as Raspberry Pi single-board computers, OpenMote B low-power wireless devices, and glass domes. Each TestBox in the testbed connects to an MQTT broker over WiFi, no dedicated wiring or back-end is needed. The Inria-Paris OpenTestBed testbed of 80 motes has cost only 9,480 euros, and is open-access. The OpenTestBed is a fully open-source and open-hardware project, which several institutions have already adopted.","",""
5,"Jonathan T. Younker, Tim Ribaric","Beyond Open Source Software: Solving Common Library Problems Using the Open Source Hardware Arduino Platform",2013,"","","","",113,"2024-08-22 15:04:59","","10.21083/PARTNERSHIP.V8I1.2497","","",,,,,5,0.45,3,2,11,"Using open source hardware platforms like the Arduino, libraries have the ability to quickly and inexpensively prototype custom hardware solutions to common library problems.    The authors present the Arduino environment, what it is, what it does, and how it was used at the James A. Gibson Library at Brock University to create a production portable barcode-scanning utility for in-house use statistics collection as well as a prototype for a service desk statistics tabulation program’s hardware interface.","",""
335,"Jonathan Woodruff, R. Watson, D. Chisnall, S. Moore, Jonathan Anderson, Brooks Davis, B. Laurie, P. Neumann, Robert M. Norton, M. Roe","The CHERI capability model: Revisiting RISC in an age of risk",2014,"","","","",975,"2024-08-22 15:04:59","","10.1145/2678373.2665740","","",,,,,335,33.50,34,10,10,"Motivated by contemporary security challenges, we reevaluate and refine capability-based addressing for the RISC era. We present CHERI, a hybrid capability model that extends the 64-bit MIPS ISA with byte-granularity memory protection. We demonstrate that CHERI enables language memory model enforcement and fault isolation in hardware rather than software, and that the CHERI mechanisms are easily adopted by existing programs for efficient in-program memory safety. In contrast to past capability models, CHERI complements, rather than replaces, the ubiquitous page-based protection mechanism, providing a migration path towards deconflating data-structure protection and OS memory management. Furthermore. CHERI adheres to a strict RISC philosophy: it maintains a load-store architecture and requires only single-cycle instructions, and supplies protection primitives to the compiler, language runtime, and operating system. We demonstrate a mature FPGA implementation that runs the FreeBSD operating system with a full range of software and an open-source application suite compiled with an extended LLVM to use CHERI memory protection. A limit study compares published memory safety mechanisms in terms of instruction count and memory overheads. The study illustrates that CHERI is performance-competitive even while providing assurance and greater flexibility with simpler hardware.","",""
9,"Jonathan Álvarez Ariza, J. Pearce","Low-Cost Assistive Technologies for Disabled People Using Open-Source Hardware and Software: A Systematic Literature Review",2022,"","","","",5,"2024-08-22 15:04:59","","10.1109/ACCESS.2022.3221449","","",,,,,9,4.50,5,2,2,"Disabled People deal with a series of barriers that limit their inclusion, empowerment, well-being, and role in society with a special emphasis in low and medium-income countries. One of these barriers is concerning the accessibility and affordability of assistive technologies (ATs) that help to enhance the quality of life of these persons. In this context, this systematic literature review (SLR) analyzes and describes how free and open-source hardware (OSHW) and open software (OSS) are employed in the design, development, and deployment of low-cost ATs. In the SLR process, different ATs were analyzed for disabilities such as visual, mobility, upper body, prostheses, hearing & speaking, daily living, and participation in society. The ATs were designed with diverse OSHW and OSS technologies such as Arduino, Raspberry Pi, NVidia Jeston, OpenCV, YOLO, MobileNet, EEG and EMG signal conditioning devices, actuators, and sensors such as ultrasonic, LiDar, or flex. 809 studies were collected and analyzed from the database Web of Science, GitHub, and the specialized journals in OSHW HardwareX and the Journal of Open Hardware during the years 2013-2022. In the first part of the SLR, the bibliometric trends and topic clusters regarding the selected studies are described. Secondly, the ATs identified with open source technologies, e.g., sensor-based or computer vision-based, are described along with a complete state-of-art about these based on each disability recognized. Finally, the issues and challenges to this approach are explored including technical factors, documentation, government policies, and the inclusion of disabled people in open source co-creation. The purpose of this study is to inform practitioners, designers, or stakeholders about low-cost (frugal) ATs with OSHW and OSS, and thus promote their development, accessibility, and affordability, contributing to benefit the community of disabled people.","",""
29,"Jonathon C. Ralston, C. Hargrave","Software defined radar: An open source platform for prototype GPR development",2012,"","","","",379,"2024-08-22 15:04:59","","10.1109/ICGPR.2012.6254855","","",,,,,29,2.42,15,2,12,"This discussion paper explores the potential of Software Defined Radio (SDR) technology to provide flexible and low-cost subsurface radar prototypes for the GPR community. Unlike traditional fixed hardware implementations, SDR uses software configurable RF modules which can be used to implement customized signal encoding, decoding and processing. However, the full potential of SDR has not yet been fully understood or exploited for radar-based applications, and so is of special interest for GPR development. This paper introduces the fundamental concepts behind SDRs and describes the underlying hardware and software architectures that are used to implement them. It also provides a simple reference design using open source GNU Radio software and the Universal Software Radio Peripheral (USRP) hardware to indicate how low-cost radar configurations can be designed and evaluated. The benefits and challenges of SDR-based radar architectures are highlighted, and opportunities discussed for new and enhanced subsurface sensing capabilities. Overall, SDR technology is seen to provide new opportunities to boost future radar research and development to provide enhanced GPR system capabilities.","",""
56,"Joshua Colmer, C. O'Neill, R. Wells, A. Bostrom, Daniel Reynolds, Danny Websdale, Gagan Shiralagi, Wei Lu, Qiaojun Lou, Thomas Le Cornu, Joshua Ball, Jim Renema, Gema Flores Andaluz, René Benjamins, S. Penfield, Ji Zhou","SeedGerm: a cost-effective phenotyping platform for automated seed imaging and machine-learning based phenotypic analysis of crop seed germination.",2020,"","","","",619,"2024-08-22 15:04:59","","10.1111/nph.16736","","",,,,,56,14.00,6,16,4,"Efficient seed germination and establishment are important traits for field and glasshouse crops. Large-scale germination experiments are laborious and prone to observer errors, leading to the necessity for automated methods. We experimented with five crop species, including tomato, pepper, Brassica, barley, and maize, and concluded an approach for large-scale germination scoring. Here, we present the SeedGerm system, which combines cost-effective hardware and open-source software for (1) seed germination experiments, (2) automated seed imaging, and (3) machine-learning based phenotypic analysis. The software can process multiple image series simultaneously and produce reliable analysis of germination- and establishment-related traits, in both comma-separated values (CSV) and processed images (PNG) formats. In this article, we describe the hardware and software design in detail. We also demonstrate that SeedGerm could match specialists' scoring of radicle emergence. Germination curves were produced based on seed-level germination timing and rates rather than a fitted curve. In particular, by scoring germination across a diverse panel of Brassica napus varieties, SeedGerm implicates a gene important in abscisic acid (ABA) signalling in seeds. We compared SeedGerm with existing methods and concluded that it could have wide utilities in large-scale seed phenotyping and testing, for both research and routine seed technology applications.","",""
44,"Joshua J. Engelsma, Kai Cao, Anil K. Jain","RaspiReader: Open Source Fingerprint Reader",2017,"","","","",269,"2024-08-22 15:04:59","","10.1109/TPAMI.2018.2858764","","",,,,,44,6.29,15,3,7,"We open source an easy to assemble, spoof resistant, high resolution, optical fingerprint reader, called RaspiReader, using ubiquitous components. By using our open source STL files and software, RaspiReader can be built in under one hour for only US $175. As such, RaspiReader provides the fingerprint research community a seamless and simple method for quickly prototyping new ideas involving fingerprint reader hardware. In particular, we posit that this open source fingerprint reader will facilitate the exploration of novel fingerprint spoof detection techniques involving both hardware and software. We demonstrate one such spoof detection technique by specially customizing RaspiReader with two cameras for fingerprint image acquisition. One camera provides high contrast, frustrated total internal reflection (FTIR) fingerprint images, and the other outputs direct images of the finger in contact with the platen. Using both of these image streams, we extract complementary information which, when fused together and used for spoof detection, results in marked performance improvement over previous methods relying only on grayscale FTIR images provided by COTS optical readers. Finally, fingerprint matching experiments between images acquired from the FTIR output of RaspiReader and images acquired from a COTS reader verify the interoperability of the RaspiReader with existing COTS optical readers.","",""
77,"Joshua M. Pearce","Emerging Business Models for Open Source Hardware",2017,"","","","",36,"2024-08-22 15:04:59","","10.5334/JOH.4","","",,,,,77,11.00,77,1,7,"The rise of Free and Open Source models for software development has catalyzed the growth of Free and Open Source hardware (also known as “Libre Hardware”). Libre Hardware is gaining significant traction in the scientific hardware community, where there is evidence that open development creates both technically superior and far less expensive scientific equipment than proprietary models. In this article, the evidence is reviewed and a collection of examples of business models is developed to service scientists who have the option to manufacture their own equipment using Open Source designs. Profitable Libre Hardware business models are reviewed, which includes kit, specialty component, and calibration suppliers for makers. The results indicate that Libre Hardware businesses should target technically sophisticated customers first and, as usability matures, target expanded markets of conventional consumers.","",""
29,"Joshua M. Pearce","Impacts of Open Source Hardware in Science and Engineering",2017,"","","","",54,"2024-08-22 15:04:59","","","","",,,,,29,4.14,29,1,7,"There is an opportunity to radically reduce the costs of experimental research while improving it by supporting the development of free and open source hardware (FOSH) for science and engineering. By harnessing a scalable open source method, federal funding is spent just once for the development of scientific equipment and then a return on this investment is realized by direct digital replication of scientific devices for only the costs of materials. FOSH for science and engineering has been growing at a rapid pace and already supports many fields. Scaled peer production and digital replica-tion reduce traditional costs by 90-99 percent, making scientific equipment much more accessible not only for research but also for preparation of the next generation of scientists and engineers as research-grade tools are available for science, technology, engineering, and math (STEM) education. I propose four straightforward and negative-net-cost policies to support FOSH development and improve access to scientific tools in the United States. The policies will directly save millions in research and STEM education expenditures, while providing researchers and students access to better equipment, which will promote advances in technology and concomitant benefits for the US economy. Free and open source hardware can reduce research and education costs, increase access, and enhance scientific and technological progress.","",""
18,"Joshua M. Pearce","Maximizing returns for public funding of medical research with open-source hardware",2017,"","","","",73,"2024-08-22 15:04:59","","10.1016/J.HLPT.2017.09.001","","",,,,,18,2.57,18,1,7,"","",""
97,"Joshua M. Pearce","Quantifying the Value of Open Source Hardware Development",2014,"","","","",80,"2024-08-22 15:04:59","","10.4236/ME.2015.61001","","",,,,,97,9.70,97,1,10,"With the maturation of digital manufacturing technologies like 3-D printing, a new paradigm is emerging of distributed manufacturing in both scientific equipment and consumer goods. Hardware released under free licenses is known as free and open source hardware (FOSH). The availability of these FOSH designs has a large value to those with access to digital manufacturing methods and particularly for scientists with needs for highly-customized low-volume production products. It is challenging to use traditional funding models to support the necessary investment of resources in FOSH development because of the difficulty in quantifying the value of the result. In order to overcome that challenge and harvest the current opportunity in both low-cost scientific equipment and consumer products, this article evaluates the following methods to quantify the value of FOSH design including: 1) downloaded substitution valuation; 2) avoided reproduction valuation and 3) market savings valuation along with additional benefits related to market expansion, scientific innovation acceleration, educational enhancement and medical care improvement. The strengths and weaknesses of these methods are analyzed and the results show that the methods are relatively straight-forward to institute, based on reliable freely-available data, and that they minimize assumptions. A case study of a syringe pump with numerous scientific and medical applications is presented. The results found millions of dollars of economic value from a relatively simple scientific device being released under open-licenses representing orders of magnitude increase in value from conventional proprietary development. The inescapable conclusion of this study is that FOSH development should be funded by organizations interested in maximizing return on public investments particularly in technologies associated with science, medicine and education.","",""
53,"Joshua M. Pearce","Laboratory equipment: Cut costs with open-source hardware",2014,"","","","",93,"2024-08-22 15:04:59","","10.1038/505618d","","",,,,,53,5.30,53,1,10,"","",""
477,"Joshua M. Pearce","Building Research Equipment with Free, Open-Source Hardware",2012,"","","","",95,"2024-08-22 15:04:59","","10.1126/science.1228183","","",,,,,477,39.75,477,1,12,"A rapidly increasing selection of laboratory equipment can be fabricated with open-source three-dimensional printers at low cost. Most experimental research projects are executed with a combination of purchased hardware equipment, which may be modified in the laboratory and custom single-built equipment fabricated inhouse. However, the computer software that helps design and execute experiments and analyze data has an additional source: It can also be free and open-source software (FOSS) (1). FOSS has the advantage that the code is openly available for modification and is also often free of charge. In the past, customizing software has been much easier than custom-building equipment, which often can be quite costly because fabrication requires the skills of machinists, glassblowers, technicians, or outside suppliers. However, the open-source paradigm is now enabling creation of open-source scientific hardware by combining three-dimensional (3D) printing with open-source microcontrollers running on FOSS. These developments are illustrated below by several examples of equipment fabrication that can better meet particular specifications at substantially lower overall costs.","",""
19,"Joshua M. Pearce","Introduction to Open-Source Hardware for Science",2014,"","","","",103,"2024-08-22 15:04:59","","10.1016/B978-0-12-410462-4.00001-9","","",,,,,19,1.90,19,1,10,"","",""
18,"Joshua M. Pearce","Commentary: Open-source hardware for research and education",2013,"","","","",114,"2024-08-22 15:04:59","","10.1063/PT.3.2160","","",,,,,18,1.64,18,1,11,"","",""
138,"Joshua M. Pearce","Return on investment for open source scientific hardware development",2016,"","","","",132,"2024-08-22 15:04:59","","10.1093/SCIPOL/SCV034","","",,,,,138,17.25,138,1,8,"The availability of free and open source hardware designs that can be replicated with low-cost 3D printers provides large values to scientists who need highly-customized low-volume production scientific equipment. Digital manufacturing technologies have only recently become widespread and the return on investment (ROI) was not clear, so funding for open hardware development was historically sparse. This paper clarifies a method for determining an ROI for the development of scientific free and open source hardware (FOSH). By using an open source hardware design that can be manufactured digitally, the relatively minor development costs result in enormous ROIs for the scientific community. A case study is presented of a syringe pump released under open license, which results in ROIs for funders ranging from hundreds to thousands of percent after only a few months. It is clear that policies encouraging FOSH scientific hardware development should be adopted by organizations interested in maximizing return on public investments for science.","",""
16,"Joshua M. Pearce","Sponsored Libre Research Agreements to Create Free and Open Source Software and Hardware",2018,"","","","",133,"2024-08-22 15:04:59","","10.3390/INVENTIONS3030044","","",,,,,16,2.67,16,1,6,"As a growing number of companies reject intellectual property (IP) monopoly-based business models to embrace libre product development of free and open source hardware and software, there is an urgent need to refurbish the instruments of university-corporate research partnerships. These partnerships generally use a proprietary standard research agreement (PSRA), which for historical reasons contains significant IP monopoly language and restrictions for both the company and the university. Such standard research agreements thus create an artificial barrier to innovation as both companies using a libre model and universities they wish to collaborate with must invest significantly to restructure the contracts. To solve this problem, this article provides a new Sponsored Libre Research Agreement (SLRA). The differences between the agreements are detailed. The advantages of using an SLRA are provided for any type of company and include: (1) minimizing research investments on reporting requirements; (2) reducing delays related to confidentiality and publication embargos; and (3) reducing both transaction and legal costs as well as research time losses associated with IP. Moving to libre agreements both speeds up and reduces costs for setting up collaborative research. Under the SLRA, university researchers can spend more time innovating for the same investment.","",""
233,"Joshua M. Pearce","Open-Source Lab: How to Build Your Own Hardware and Reduce Research Costs",2013,"","","","",179,"2024-08-22 15:04:59","","","","",,,,,233,21.18,233,1,11,"Open-Source Lab: How to Build Your Own Hardware and Reduce Scientific Research Costs details the development of the free and open-source hardware revolution. The combination of open-source 3D printing and microcontrollers running on free software enables scientists, engineers, and lab personnel in every discipline to develop powerful research tools at unprecedented low costs. After reading Open-Source Lab, you will be able to: Lower equipment costs by making your own hardwareBuild open-source hardware for scientific researchActively participate in a community in which scientific results are more easily replicated and citedNumerous examples of technologies and the open-source user and developer communities that support themInstructions on how to take advantage of digital design sharingExplanations of Arduinos and RepRaps for scientific useA detailed guide to open-source hardware licenses and basic principles of intellectual property","",""
148,"Joshua M. Pearce","A review of open source ventilators for COVID-19 and future pandemics",2020,"","","","",875,"2024-08-22 15:04:59","","10.12688/f1000research.22942.2","","",,,,,148,37.00,148,1,4,"Coronavirus Disease 2019 (COVID-19) threatens to overwhelm our medical infrastructure at the regional level causing spikes in mortality rates because of shortages of critical equipment, like ventilators. Fortunately, with the recent development and widespread deployment of small-scale manufacturing technologies like RepRap-class 3-D printers and open source microcontrollers, mass distributed manufacturing of ventilators has the potential to overcome medical supply shortages. In this study, after providing a background on ventilators, the academic literature is reviewed to find the existing and already openly-published, vetted designs for ventilators systems. These articles are analyzed to determine if the designs are open source both in spirit (license) as well as practical details (e.g. possessing accessible design source files, bill of materials, assembly instructions, wiring diagrams, firmware and software as well as operation and calibration instructions). Next, the existing Internet and gray literature are reviewed for open source ventilator projects and designs. The results of this review found that the tested and peer-reviewed systems lacked complete documentation and the open systems that were documented were either at the very early stages of design (sometimes without even a prototype) and were essentially only basically tested (if at all). With the considerably larger motivation of an ongoing pandemic, it is assumed these projects will garner greater attention and resources to make significant progress to reach a functional and easily-replicated system. There is a large amount of future work needed to move open source ventilators up to the level considered scientific-grade equipment, and even further work needed to reach medical-grade hardware. Future work is needed to achieve the potential of this approach by developing policies, updating regulations, and securing funding mechanisms for the development and testing of open source ventilators for both the current COVID19 pandemic as well as for future pandemics and for everyday use in low-resource settings.","",""
59,"Joshua M. Pearce, N. C. Anzalone, C. Heldt","Open-Source Wax RepRap 3-D Printer for Rapid Prototyping Paper-Based Microfluidics",2016,"","","","",290,"2024-08-22 15:04:59","","10.1177/2211068215624408","","",,,,,59,7.38,20,3,8,"The open-source release of self-replicating rapid prototypers (RepRaps) has created a rich opportunity for low-cost distributed digital fabrication of complex 3-D objects such as scientific equipment. For example, 3-D printable reactionware devices offer the opportunity to combine open hardware microfluidic handling with lab-on-a-chip reactionware to radically reduce costs and increase the number and complexity of microfluidic applications. To further drive down the cost while improving the performance of lab-on-a-chip paper-based microfluidic prototyping, this study reports on the development of a RepRap upgrade capable of converting a Prusa Mendel RepRap into a wax 3-D printer for paper-based microfluidic applications. An open-source hardware approach is used to demonstrate a 3-D printable upgrade for the 3-D printer, which combines a heated syringe pump with the RepRap/Arduino 3-D control. The bill of materials, designs, basic assembly, and use instructions are provided, along with a completely free and open-source software tool chain. The open-source hardware device described here accelerates the potential of the nascent field of electrochemical detection combined with paper-based microfluidics by dropping the marginal cost of prototyping to nearly zero while accelerating the turnover between paper-based microfluidic designs.","",""
35,"Joshua M. Pearce, Usman Mushtaq","Overcoming technical constraints for obtaining sustainable development with open source appropriate technology",2009,"","","","",429,"2024-08-22 15:04:59","","10.1109/TIC-STH.2009.5444388","","",,,,,35,2.33,18,2,15,"Open source appropriate technology (OSAT) refers to technologies that provide for sustainable development while being designed in the same fashion as free and open-source software. Facilitated by advances in information technology software and hardware, new ways to disseminate information such as wikis and Internetenabled mobile phones, the global development of OSAT has emerged as a reality. This paper shows the sharing of design processes, appropriate tools, and technical information is enables more effective and rapid development of appropriate technologies for both industrialized and nonindustrialized regions. This sharing will require the appropriate technology community to adopt open standards/licenses, document knowledge, and build on previous work. This paper offers solutions in the form of both business models and tools to overcome technical constraints of OSAT development in the forms of the platforms necessary on which to share and build knowledge about appropriate technologies. These solutions are open, easily accessible for those in need, have a low barrier to entry for both users and information creators, and must be vetted in order to utilized as a trustworthy source on critical information needs. Current progress towards implementing these solutions will be reviewed and recommendations will be made to further increase the rate of OSAT development.","",""
24,"Jovana Z Milanovic, Predrag Milanović, Rastislav Kragic, M. Kostić","""Do-It-Yourself"" reliable pH-stat device by using open-source software, inexpensive hardware and available laboratory equipment",2018,"","","","",129,"2024-08-22 15:04:59","","10.1371/journal.pone.0193744","","",,,,,24,4.00,6,4,6,"In this paper, we present the construction of a reliable and inexpensive pH stat device, by using open-source “OpenPhControl” software, inexpensive hardware (a peristaltic and a syringe pump, Arduino, a step motor…), readily available laboratory devices: a pH meter, a computer, a webcam, and some 3D printed parts. We provide a methodology for the design, development and test results of each part of the device, as well as of the entire system. In addition to dosing reagents by means of a low-cost peristaltic pump, we also present carefully controlled dosing of reagents by an open-source syringe pump. The upgrading of the basic open-source syringe pump is given in terms of pump control and application of a larger syringe. In addition to the basic functions of pH stat, i.e. pH value measurement and maintenance, an improvement allowing the device to be used for potentiometric titration has been made as well. We have demonstrated the device’s utility when applied for cellulose fibers oxidation with 2,2,6,6-tetramethylpiperidine-1-oxyl radical, i.e. for TEMPO-mediated oxidation. In support of this, we present the results obtained for the oxidation kinetics, the consumption of added reagent and experimental repeatability. Considering that the open-source scientific tools are available to everyone, and that researchers can construct and adjust the device according to their needs, as well as, that the total cost of the open-source pH stat device, excluding the existing laboratory equipment (pH meter, computer and glossary) was less than 150 EUR, we believe that, at a small fraction of the cost of available commercial offers, our open-source pH stat can significantly improve experimental work where the use of pH stat is necessary.","",""
69,"Joy Dutta, Sarbani Roy","IoT-fog-cloud based architecture for smart city: Prototype of a smart building",2017,"","","","",963,"2024-08-22 15:04:59","","10.1109/CONFLUENCE.2017.7943156","","",,,,,69,9.86,35,2,7,"Here, we present a prototype of a smart building using newly surfacing technologies like IoT (Internet of Things), fog and cloud for the smart city. The demand for everything smart is increasing daily, but the main stumbling block is its high price. So, our aim is to improve the standard of living in home and in office with newly improved working facilities where the whole system will be automatic, efficient and will be under the control of the user via his/her smartphone or computer but the cost will stay within the budget of a common man. All these are done by the incorporation of IoT, fog and cloud. The assimilation is done using open source hardwares and softwares to reduce the cost dramatically than the other existing solutions and implement it in an impressive and ingenious way without compromising QoS (Quality of Service) of any of the functionalities provided by other existing solutions.","",""
2157,"Juerg Hutter, M. Iannuzzi, F. Schiffmann, J. VandeVondele","cp2k: atomistic simulations of condensed matter systems",2014,"","","","",511,"2024-08-22 15:04:59","","10.1002/wcms.1159","","",,,,,2157,215.70,539,4,10,"cp2k has become a versatile open‐source tool for the simulation of complex systems on the nanometer scale. It allows for sampling and exploring potential energy surfaces that can be computed using a variety of empirical and first principles models. Excellent performance for electronic structure calculations is achieved using novel algorithms implemented for modern and massively parallel hardware. This review briefly summarizes the main capabilities and illustrates with recent applications the science cp2k has enabled in the field of atomistic simulation. WIREs Comput Mol Sci 2014, 4:15–25. doi: 10.1002/wcms.1159","",""
80,"Juhyun Lee, Nikolay Chirkov, Ekaterina Ignasheva, Yury Pisarchyk, Mogan Shieh, F. Riccardi, Raman Sarokin, Andrei Kulik, Matthias Grundmann","On-Device Neural Net Inference with Mobile GPUs",2019,"","","","",618,"2024-08-22 15:04:59","","","","",,,,,80,16.00,9,9,5,"On-device inference of machine learning models for mobile phones is desirable due to its lower latency and increased privacy. Running such a compute-intensive task solely on the mobile CPU, however, can be difficult due to limited computing power, thermal constraints, and energy consumption. App developers and researchers have begun exploiting hardware accelerators to overcome these challenges. Recently, device manufacturers are adding neural processing units into high-end phones for on-device inference, but these account for only a small fraction of hand-held devices. In this paper, we present how we leverage the mobile GPU, a ubiquitous hardware accelerator on virtually every phone, to run inference of deep neural networks in real-time for both Android and iOS devices. By describing our architecture, we also discuss how to design networks that are mobile GPU-friendly. Our state-of-the-art mobile GPU inference engine is integrated into the open-source project TensorFlow Lite and publicly available at this https URL.","",""
68,"Julian Keil, Dennis Edler, Thomas Schmitt, F. Dickmann","Creating Immersive Virtual Environments Based on Open Geospatial Data and Game Engines",2021,"","","","",914,"2024-08-22 15:04:59","","10.1007/s42489-020-00069-6","","",,,,,68,22.67,17,4,3,"","",""
13,"Julian Stirling, R. Bowman","The COVID-19 Pandemic Highlights the Need for Open Design Not Just Open Hardware",2020,"","","","",316,"2024-08-22 15:04:59","","10.1080/14606925.2020.1859168","","",,,,,13,3.25,7,2,4,"Abstract The COVID-19 pandemic has seen a surge in development of Open Source Hardware, especially open source ventilators. Many of these open source ventilator projects have adopted an open-when-finished model due to legitimate legal and liability concerns. This, however, has led to a proliferation of projects with teams across the world independently designing over a hundred mutually incompatible ventilators, representing a huge amount of duplicated effort. A functioning design is necessary but not sufficient for a project to help patients. The device must be taken through regulatory approval by a manufacturer that understands why design decisions were taken. In this article we argue that the open design process developed for Open Source Software can be used for Open Source Hardware. This process not only allows remote teams to work together improving a single design, it also provides the rich history of design decisions that manufacturers need to take the device through regulatory approval.","",""
91,"Julius Pfrommer, A. Ebner, S. Ravikumar, B. Karunakaran","Open Source OPC UA PubSub Over TSN for Realtime Industrial Communication",2018,"","","","",241,"2024-08-22 15:04:59","","10.1109/ETFA.2018.8502479","","",,,,,91,15.17,23,4,6,"OPC UA is a client-server communication protocol for industrial use cases without hard realtime requirements. The new PubSub extension of OPC UA adds the possibility of many-to-many communication based on the Publish / Subscribe paradigm. In conjunction with the upcoming Time-Sensitive Networking (TSN) extensions of Ethernet, OPC UA Pub Sub aims to also cover time-deterministic connectivity. This poses requirements to OPC UA implementations that have traditionally not been regarded. We propose an approach to combine non-realtime OPCUA servers with realtime OPC UA Pub Sub where both can access a shared information model without the loss of realtime guarantees for the publisher. As a result, the publisher can be run inside a (hardware-triggered) interrupt to ensure short delays and small jitter. An open source implementation of OPC UA Pub Sub is provided based on the open62541 SDK. This is also the basis for measurements used to evaluate the potential of the technology.","",""
142,"Jun Liu, Feng Liu, N. Ansari","Monitoring and analyzing big traffic data of a large-scale cellular network with Hadoop",2014,"","","","",641,"2024-08-22 15:04:59","","10.1109/MNET.2014.6863129","","",,,,,142,14.20,47,3,10,"Network traffic monitoring and analysis is of theoretical and practical significance for optimizing network resource and improving user experience. However, existing solutions, which usually rely on a high-performance server with large storage capacity, are not scalable for detailed analysis of a large volume of traffic data. In this article, we present a traffic monitoring and analysis system for large-scale networks based on Hadoop, an open-source distributed computing platform for big data processing on commodity hardware. This system has been deployed in the core network of a large cellular network and extensively evaluated. The results demonstrate that the system can efficiently processes 4.2 Tbytes of traffic data from 123 Gb/s links with high performance and low cost every day.","",""
60,"K. Abdelouahab, M. Pelcat, J. Sérot, C. Bourrasset, F. Berry","Tactics to Directly Map CNN Graphs on Embedded FPGAs",2017,"","","","",694,"2024-08-22 15:04:59","","10.1109/LES.2017.2743247","","",,,,,60,8.57,12,5,7,"Deep convolutional neural networks (CNNs) are the state-of-the-art in image classification. Since CNN feed forward propagation involves highly regular parallel computation, it benefits from a significant speed-up when running on fine grain parallel programmable logic devices. As a consequence, several studies have proposed field-programmable gate array (FPGA)-based accelerators for CNNs. However, because of the large computational power required by CNNs, none of the previous studies has proposed a direct mapping of the CNN onto the physical resources of an FPGA, allocating each processing actor to its own hardware instance. In this letter, we demonstrate the feasibility of the so called direct hardware mapping (DHM) and discuss several tactics we explore to make DHM usable in practice. As a proof of concept, we introduce the HADDOC2 open source tool, that automatically transforms a CNN description into a synthesizable hardware description with platform-independent DHM.","",""
23,"K. Angstadt, J. Wadden, V. Dang, Ted Xie, D. Kramp, Westley Weimer, Mircea R. Stan, K. Skadron","MNCaRT: An Open-Source, Multi-Architecture Automata-Processing Research and Execution Ecosystem",2018,"","","","",257,"2024-08-22 15:04:59","","10.1109/LCA.2017.2780105","","",,,,,23,3.83,3,8,6,"We present MNCaRT, a comprehensive software ecosystem for the study and use of automata processing across hardware platforms. Tool support includes manipulation of automata, execution of complex machines, high-speed processing of NFAs and DFAs, and compilation of regular expressions. We provide engines to execute automata on CPUs (with VASim and Intel Hyperscan), GPUs (with custom DFA and NFA engines), and FPGAs (with an HDL translator). We also introduce MNRL, an open-source, general-purpose and extensible state machine representation language developed to support MNCaRT. The representation is flexible enough to support traditional finite automata (NFAs, DFAs) while also supporting more complex machines, such as those which propagate multi-bit signals between processing elements. We hope that our ecosystem and representation language stimulates new efforts to develop efficient and specialized automata processing applications.","",""
173,"K. Asanović, D. Patterson, Christopher Celio","The Berkeley Out-of-Order Machine (BOOM): An Industry-Competitive, Synthesizable, Parameterized RISC-V Processor",2015,"","","","",605,"2024-08-22 15:04:59","","","","",,,,,173,19.22,58,3,9,"Abstract : BOOM is a synthesizable, parameterized, superscalar out-of-order RISC-V core designed to serve as the prototypical baseline processor for future micro-architectural studies of out-of-order processors. Our goal is to provide a readable, open-source implementation for use in education, research, and industry. BOOM is written in roughly 9,000 lines of the hardware construction language Chisel. We leveraged Berkeleys open-source Rocket-chip SoC generator, allowing us to quickly bring up an entire multi-core processor system (including caches and uncore) by replacing the in-order Rocket core with an out-of-order BOOM core. BOOM supports atomics, IEEE754-2008 floating-point, and page-based virtual memory. We have demonstrated BOOM running Linux, SPEC CINT2006, and CoreMark.","",""
581,"K. Asanović, Rimas Avizienis, J. Bachrach, S. Beamer, David Biancolin, Christopher Celio, Henry Cook, Palmer Dabbelt, J. Hauser, Adam M. Izraelevitz, S. Karandikar, Benjamin Keller, Donggyu Kim, Jack Koenig, Yunsup Lee, Eric Love, Martin Maas, Albert Magyar, Howard Mao, Miquel Moretó, Albert J. Ou, D. Patterson, B. Richards, Colin Schmidt, Stephen Twigg, Huy D. Vo, Andrew Waterman","The Rocket Chip Generator",2016,"","","","",514,"2024-08-22 15:04:59","","","","",,,,,581,72.63,58,27,8,"Rocket Chip is an open-source Sysem-on-Chip design generator that emits synthesizable RTL. It leverages the Chisel hardware construction language to compose a library of sophisticated generators for cores, caches, and interconnects into an integrated SoC. Rocket Chip generates general-purpose processor cores that use the open RISC-V ISA, and provides both an in-order core generator (Rocket) and an out-of-order core generator (BOOM). For SoC designers interested in utilizing heterogeneous specialization for added efficiency gains, Rocket Chip supports the integration of custom accelerators in the form of instruction set extensions, coprocessors, or fully independent novel cores. Rocket Chip has been taped out (manufactured) eleven times, and yielded functional silicon prototypes capable of booting Linux.","",""
5,"K. Blomqvist, Raimo Sepponen, N. Lundbom, J. Lundbom","An open-source hardware for electrical bioimpedance measurement",2012,"","","","",138,"2024-08-22 15:04:59","","10.1109/BEC.2012.6376851","","",,,,,5,0.42,1,4,12,"This paper describes open-source hardware to measure both the magnitude and phase of the electrical bioimpedance in a frequency range from few kilohertz up to 100 kHz by using a four-electrode technique. The amount of current injected and the sensitivity of the system can be set to the desired range by changing the front-end resistor values. The system can be easily built and adapted with the help of the design details made available at GitHub. The practical performance was evaluated in abdominal impedance measurement, which was the primary motivation to build the system. Other experiments were performed with a 2R-1C circuit, a 10-Ω resistor, and a 100-nF capacitor, with observed relative errors in the impedances of -0.73 ± 0.34 %, -2.47 ± 1.43 % and -8.81 ± 0.64 % (mean ± SD), respectively, from 10 kHz to 100 kHz.","",""
31,"K. Friese, P. Blanke, Franz-Erich Wolter","YaDiV—an open platform for 3D visualization and 3D segmentation of medical data",2011,"","","","",651,"2024-08-22 15:04:59","","10.1007/s00371-010-0539-6","","",,,,,31,2.38,10,3,13,"","",""
94,"K. Gaj, J. Kaps, Venkata Amirineni, M. Rogawski, Ekawat Homsirikamol, Benjamin Y. Brewster","ATHENa - Automated Tool for Hardware EvaluatioN: Toward Fair and Comprehensive Benchmarking of Cryptographic Hardware Using FPGAs",2010,"","","","",602,"2024-08-22 15:04:59","","10.1109/FPL.2010.86","","",,,,,94,6.71,16,6,14,"A fair comparison of functionally equivalent digital system designs targeting FPGAs is a challenging and time consuming task. The results of the comparison depend on the inherent properties of competing algorithms, as well as on selected hardware architectures, implementation techniques, FPGA families, languages and tools. In this paper, we introduce an open-source environment, called ATHENa for fair, comprehensive, automated, and collaborative hardware benchmarking of algorithms belonging to the same class. As our first goal, we select the benchmarking of algorithms belonging to the area of cryptography. Algorithms from this area have been shown to achieve significant speed-ups and security gains compared to software when implemented in FPGAs. The capabilities of our environment are demonstrated using three examples: two different hardware architectures of the current cryptographic hash function standard, SHA-256, and one architecture of a candidate for the new standard, Fugue. All source codes, testbenches, and configuration files necessary to repeat experiments described in this paper are made available through the project web site.","",""
4,"K. Gavras, Vasilis Kostakis","Mapping the types of modularity in open-source hardware",2021,"","","","",12,"2024-08-22 15:04:59","","10.1017/dsj.2021.11","","",,,,,4,1.33,2,2,3,"Abstract The importance of intangible code modularity in open-source software, as well as of tangible product modularity in proprietary hardware, is widely acknowledged. Nevertheless, modularity in open-source hardware (OSH) remains under-researched. This article first describes qualitatively different types of modularity based on two OSH case studies and then quantifies each type of modularity, following a unified network-based approach. The results are discussed and compared within each case to test the ‘mirroring hypothesis’, and between cases to evaluate the impact of physical against intangible modularity types. The ultimate goal is to prompt a discussion into a wide but under-explored subset in OSH.","",""
24,"K. Gilbert, D. Schaeffer, J. Gati, L. M. Klassen, S. Everling, Ravi S. Menon","Open-source hardware designs for MRI of mice, rats, and marmosets: Integrated animal holders and radiofrequency coils",2019,"","","","",37,"2024-08-22 15:04:59","","10.1016/j.jneumeth.2018.11.015","","",,,,,24,4.80,4,6,5,"","",""
9,"K. Le, H. Nguyen, Sd Ranmuthugala","Development and modelling of a three-thurster remotely operated vehicle using open source hardware",2013,"","","","",107,"2024-08-22 15:04:59","","","","",,,,,9,0.82,3,3,11,"This paper presents the development and  modelling of a Remotely Operated Vehicle (ROV) which  consists of three thrusters using open source hardware. First,  the hardware of the vehicle, including the actuators, sensors  and control system, is described. Second, to study the  relationship between thrust forces and performance of the  ROV, a mathematical model of the vehicle in form of a  dynamic model with hydrodynamic coefficients is established.  Computational Fluid Dynamics (CFD) analysis is conducted  to identify the hydrodynamic coefficients of the ROV dynamic  model, including the linear damping coefficients and  quadratic damping coefficients. Based on the CFD results and  mathematical equations, a ROV simulation model is  developed to evaluate the performance and manoeuvrability  of the ROV system. Finally, closed loop control is applied for  ROV speed and depth control and the stability of the vehicle  in pitch motion is analysed in this paper.","",""
79,"K. Muriki, K. Underwood, R. Sass","RC-BLAST: towards a portable, cost-effective open source hardware implementation",2005,"","","","",173,"2024-08-22 15:04:59","","10.1109/IPDPS.2005.373","","",,,,,79,4.16,26,3,19,"Basic Local Alignment Search Tool (BLAST) is a standard computer application that molecular biologists use to search for sequence similarity in genomic databases. This paper describes the implementation of an FPGA-based hardware implementation designed to accelerate the BLAST algorithm. FPGA-based custom computing machines, more widely known as reconfigurable computing, are supported by a number of vendors and the basic cost of FPGA hardware is dramatically decreasing. Hence, the main objective of this project is to explore the feasibility of using this new technology to realize a portable, open source FPGA-based accelerator for the BLAST algorithm. The present design is targeted to an AceIIcard and the design is based on the latest version of BLAST available from NCBI. Since the entire application does not fit in hardware, a profile study was conducted that identifies the computationally intensive part of BLAST. An FPGA hardware component has been designed and implemented for this critical segment. The portability and cost-effectiveness of the design are discussed.","",""
74,"K. Nakadai, HIroshi G. Okuno, H. Nakajima, Yuji Hasegawa, H. Tsujino","An open source software system for robot audition HARK and its evaluation",2008,"","","","",438,"2024-08-22 15:04:59","","10.1109/ICHR.2008.4756031","","",,,,,74,4.63,15,5,16,"Robot capability of listening to several things at once by its own ears, that is, robot audition, is important in improving human-robot interaction. The critical issue in robot audition is real-time processing in noisy environments with high flexibility to support various kinds of robots and hardware configurations. This paper presents open-source robot audition software, called ldquoHARKrdquo, which includes sound source localization, separation, and automatic speech recognition (ASR). Since separated sounds suffer from spectral distortion due to separation, HARK generates a temporal-frequency map of reliability, called ldquomissing feature maskrdquo, for features of separated sounds. Then separated sounds are recognized by the Missing-Feature Theory (MFT) based ASR with missing feature masks. HARK is implemented on the middleware called ldquoFlowDesignerrdquo to share intermediate audio data, which provides real-time processing. HARKpsilas performance in recognition of noisy/simultaneous speech is shown by using three humanoid robots, Honda ASIMO, SIG2 and Robovie with different microphone layouts.","",""
54,"K. Singh, Ravinder Kaur","Hadoop: Addressing challenges of Big Data",2014,"","","","",730,"2024-08-22 15:04:59","","10.1109/IADCC.2014.6779407","","",,,,,54,5.40,27,2,10,"Hadoop is an open source cloud computing platform of the Apache Foundation that provides a software programming framework called MapReduce and distributed file system, HDFS. It is a Linux based set of tools that uses commodity hardware, which are relatively inexpensive, to handle, analyze and transform large quantity of data. Hadoop Distributed File System, HDFS, stores huge data set reliably and streams it to user application at high bandwidth and MapReduce is a framework that is used for processing massive data sets in a distributed fashion over a several machines. This paper gives a brief overview of Big Data, Hadoop MapReduce and Hadoop Distributed File System along with its architecture.","",""
31,"K. V. Gleissenthall, Rami Gökhan Kici, D. Stefan, Ranjit Jhala","IODINE: Verifying Constant-Time Execution of Hardware",2019,"","","","",422,"2024-08-22 15:04:59","","","","",,,,,31,6.20,8,4,5,"To be secure, cryptographic algorithms crucially rely on the underlying hardware to avoid inadvertent leakage of secrets through timing side channels. Unfortunately, such timing channels are ubiquitous in modern hardware, due to its labyrinthine fast-paths and optimizations. A promising way to avoid timing vulnerabilities is to devise --- and verify --- conditions under which a hardware design is free of timing variability, i.e., executes in constant-time. In this paper, we present Iodine: a clock precise, constant-time approach to eliminating timing side channels in hardware. Iodine succeeds in verifying various open source hardware designs in seconds and with little developer effort. Iodine also discovered two constant-time violations: one in a floating-point unit and another one in an RSA encryption module.","",""
17,"K. Zheng, Jianfeng Wang, Lin Huang, G. Decarreau","Open Wireless Software Radio on Common PC",2006,"","","","",776,"2024-08-22 15:04:59","","10.1109/PIMRC.2006.253968","","",,,,,17,0.94,4,4,18,"Software radio is the promising technology that allows the different wireless standards easily be converged. Using general purpose processors and open-source operating systems instead of dedicated hardware and software to build the wireless communication system is very flexible and low-cost. In this article,the open-source platform based on common PCs is described, which allows rapid development and verification of software radio systems. We also discuss the efficient distributed strategies essential for this platform. Finally, the demonstration system of TD-SCDMA is developed and the conclusion given","",""
34,"K. Zheng, Lin Huang, Gang Li, Hanwen Cao, Wenbo Wang, M. Dohler","Beyond 3G Evolution",2008,"","","","",863,"2024-08-22 15:04:59","","10.1109/MVT.2008.923968","","",,,,,34,2.13,6,6,16,"The exposed platform is a first step towards utilizing a flexible SDR GNU radio to quantify the real-world performance of advanced over-the-air technologies, such as 3GPP LTE-type MIMO OFDM systems. We have detailed the hardware and software blocks, demonstrating that the platform is indeed very flexible and versatile. Contrary to analysis and simulations, this platform allows us to identify problems and limits of current B3G algorithmic developments as well as implementations by means of SDR. In further developments, we will improve the platform to meet the requirements of higher throughput and even more flexibility. The testbed will also likely be opened to the greater research community in the hope that open source SDR developments will accelerate the deployment of B3G systems by means of SDRs.","",""
40,"Kai Geissdoerfer, Marco Zimmerling","Bootstrapping Battery-free Wireless Networks: Efficient Neighbor Discovery and Synchronization in the Face of Intermittency",2021,"","","","",583,"2024-08-22 15:04:59","","","","",,,,,40,13.33,20,2,3,"Due to their favorable size, cost, and sustainability, battery-free devices are preferable in various applications. However, battery-free devices operate only intermittently since ambient energy sources, such as light and radio-frequency signals, are often too weak to continuously power the devices. This paper addresses the unsolved problem of efﬁcient device-to-device communication in the face of intermittency. We present Find , the ﬁrst neighbor discovery protocol for battery-free wireless networks that uses randomized waiting to minimize discovery latency. We also introduce Flync , a new hardware/software solution that synchronizes indoor light harvesting nodes to powerline-induced brightness variations of widely used lamps, which we exploit to further speed up neighbor discovery. Experiments with an open-source prototype built from off-the-shelf hardware components show that our techniques reduce the discovery latency by 4.3 × (median) and 34.4 × (99th percentile) compared with a baseline approach without waiting.","",""
185,"Kala Karun A, Chitharanjan K","A review on hadoop — HDFS infrastructure extensions",2013,"","","","",659,"2024-08-22 15:04:59","","10.1109/CICT.2013.6558077","","",,,,,185,16.82,93,2,11,"Apache's Hadoop1 as of now is pretty good but there are scopes of extensions and enhancements. A large number of improvements are proposed to Hadoop which is an open source implementation of Google's Map/Reduce framework. It enables distributed, data intensive and parallel applications by decomposing a massive job into smaller tasks and a massive data set into smaller partitions such that each task processes a different partition in parallel. Hadoop uses Hadoop distributed File System (HDFS) which is an open source implementation of the Google File System (GFS) for storing data. Map/Reduce application mainly uses HDFS for storing data. HDFS is a very large distributed file system that uses commodity hardware and provides high throughput as well as fault tolerance. Many big enterprises believe that within a few years more than half of the world's data will be stored in Hadoop. HDFS stores files as a series of blocks and are replicated for fault tolerance. Strategic data partitioning, processing, layouts, replication and placement of data blocks will increase the performance of Hadoop and a lot of research is going on in this area. This paper reviews some of the major enhancements suggested to Hadoop especially in data storage, processing and placement.","",""
44,"Kapil Upamanyu, G. Narayanan","Improved Accuracy, Modeling, and Stability Analysis of Power-Hardware-in-Loop Simulation With Open-Loop Inverter as Power Amplifier",2020,"","","","",298,"2024-08-22 15:04:59","","10.1109/TIE.2019.2896093","","",,,,,44,11.00,22,2,4,"The accuracy of a power-hardware-in-loop (PHIL) simulation is influenced by factors such as dynamics of the power amplifier (PA) and discretization of the real-time simulated part of the system. An open-loop voltage-source inverter (VSI) without an output filter is demonstrated to be a good choice for power amplification in terms of cost, size, design effort, bandwidth, and accuracy when the load on the PA is significantly inductive. An open-loop-VSI-based PA is shown to be accurate in emulating a synchronous generator, including the fast transients in the excitation control system. The discretization effects of the real-time simulator are captured effectively by the discrete-time (DT) modeling approach proposed in this paper. The DT model is shown to replicate fast transients in the PHIL simulation better than the existing continuous-time-based model. Stability of the PHIL simulation of a benchmark circuit is analyzed using the proposed DT modeling approach. The stability analysis is validated through simulations and experiments. The stability limits derived based on the proposed analysis are capable of suggesting maximum and minimum values of certain circuit parameters, as required for stability.","",""
19,"Karol P. Szymula, Michael S. Magaraci, Michael Patterson, Andrew Clark, Sevile G. Mannickarottu, B. Chow","An Open-Source Plate Reader",2018,"","","","",884,"2024-08-22 15:04:59","","10.1101/413781","","",,,,,19,3.17,3,6,6,"Microplate readers are foundational instruments in experimental biology and bioengineering that enable multiplexed spectrophotometric measurements. To enhance their accessibility, we here report the design, construction, validation, and benchmarking of an open-source microplate reader. The system features full-spectrum absorbance and fluorescence emission detection, in situ optogenetic stimulation, and stand-alone touch screen programming of automated assay protocols. The total system costs <$3500, a fraction of the cost of commercial plate readers, and can detect the fluorescence of common dyes down to ∼10 nanomolar concentration. Functional capabilities were demonstrated in context of synthetic biology, optogenetics, and photosensory biology: by steady-state measurements of ligand-induced reporter gene expression in a model of bacterial quorum sensing, and by flavin photocycling kinetic measurements of a LOV (light-oxygen-voltage) domain photoreceptor used for optogenetic transcriptional activation. Fully detailed guides for assembling the device and automating it using the custom Python-based API (Application Program Interface) are provided. This work contributes a key technology to the growing community-wide infrastructure of open-source biology-focused hardware, whose creation is facilitated by rapid prototyping capabilities and low-cost electronics, optoelectronics, and microcomputers. Table of Contents Graphic:","",""
189,"Katrina L Kalantar, T. Carvalho, Charles F A de Bourcy, Boris Dimitrov, G. Dingle, Rebecca Egger, J. Han, Olivia Holmes, Yun-Fang Juan, Ryan King, Andrey Kislyuk, Michael F. Lin, Maria Mariano, Todd Morse, Lucia Reynoso, David Rissato Cruz, Jonathan Sheu, Jennifer Tang, James Wang, Mark A. Zhang, Emily Zhong, V. Ahyong, Sreyngim Lay, S. Chea, Jennifer A Bohl, J. Manning, C. Tato, J. Derisi","IDseq—An open source cloud-based pipeline and analysis service for metagenomic pathogen detection and monitoring",2020,"","","","",175,"2024-08-22 15:04:59","","10.1101/2020.04.07.030551","","",,,,,189,47.25,19,28,4,"Background Metagenomic next generation sequencing (mNGS) has enabled the rapid, unbiased detection and identification of microbes without pathogen-specific reagents, culturing, or a priori knowledge of the microbial landscape. mNGS data analysis requires a series of computationally intensive processing steps to accurately determine the microbial composition of a sample. Existing mNGS data analysis tools typically require bioinformatics expertise and access to local server-class hardware resources. For many research laboratories, this presents an obstacle, especially in resource limited environments. Findings We present IDseq, an open source cloud-based metagenomics pipeline and service for global pathogen detection and monitoring (https://idseq.net). The IDseq Portal accepts raw mNGS data, performs host and quality filtration steps, then executes an assembly-based alignment pipeline which results in the assignment of reads and contigs to taxonomic categories. The taxonomic relative abundances are reported and visualized in an easy-to-use web application to facilitate data interpretation and hypothesis generation. Furthermore, IDseq supports environmental background model generation and automatic internal spike-in control recognition, providing statistics which are critical for data interpretation. IDseq was designed with the specific intent of detecting novel pathogens. Here, we benchmark novel virus detection capability using both synthetically evolved viral sequences, and real-world samples, including IDseq analysis of a nasopharyngeal swab sample acquired and processed locally in Cambodia from a tourist from Wuhan, China, infected with the recently emergent SARS-CoV-2. Conclusion The IDseq Portal reduces the barrier to entry for mNGS data analysis and enables bench scientists, clinicians, and bioinformaticians to gain insight from mNGS datasets for both known and novel pathogens.","",""
92,"Kelvin J. Layton, S. Kroboth, F. Jia, S. Littin, Huijun Yu, J. Leupold, J. Nielsen, T. Stöcker, M. Zaitsev","Pulseq: A rapid and hardware‐independent pulse sequence prototyping framework",2017,"","","","",419,"2024-08-22 15:04:59","","10.1002/mrm.26235","","",,,,,92,13.14,10,9,7,"Implementing new magnetic resonance experiments, or sequences, often involves extensive programming on vendor‐specific platforms, which can be time consuming and costly. This situation is exacerbated when research sequences need to be implemented on several platforms simultaneously, for example, at different field strengths. This work presents an alternative programming environment that is hardware‐independent, open‐source, and promotes rapid sequence prototyping.","",""
40,"Ken Eguro","SIRC: An Extensible Reconfigurable Computing Communication API",2010,"","","","",842,"2024-08-22 15:04:59","","10.1109/FCCM.2010.29","","",,,,,40,2.86,40,1,14,"Reconfigurable computing applications often need to divide computation between software running on a conventional desktop processor and hardware mapped to an FPGA. However, the reconfigurable computing development platforms available today either do not provide a sufficient mechanism for the communication and synchronization that is needed or else employ a complex & proprietary API specific to a given toolflow or device, limiting code portability. The Simple Interface for Reconfigurable Computing (SIRC) project provides a straightforward, portable and extensible open-source communication and synchronization API. It consists of both a software-side interface and a hardware-side interface that allows C++ code running on a host PC to communicate and synchronize with a Verilog-based circuit mapped to a FPGA. One key feature of this API is that both the hardware and software user interfaces can remain consistent across all platforms and future releases. This allows applications built for existing systems to migrate to different platforms without significant modification to user code.","",""
15,"Kenneth D. Hoadley, M. Warner","Use of Open Source Hardware and Software Platforms to Quantify Spectrally Dependent Differences in Photochemical Efficiency and Functional Absorption Cross Section within the Dinoflagellate Symbiodinium spp.",2017,"","","","",59,"2024-08-22 15:04:59","","10.3389/fmars.2017.00365","","",,,,,15,2.14,8,2,7,"Active chlorophyll a fluorescence is an essential tool for understanding photosynthetic activity within cnidarian/dinoflagellate symbioses. Fluorescence measurement is typically achieved by utilizing a blue or red monochromatic excitation light source. However, algal photosynthetic pigments can differ in their absorption spectra, potentially leading to excitation wavelength dependent measurements of maximal and light acclimated PSII photosynthetic quantum yield (Fv/Fm or Fq’/Fm’) and functional absorption cross section (PSII or PSII’). Here we utilized an open source hardware development platform to construct a multispectral excitation fluorometer to assess spectrally dependent differences in photochemistry within four different Symbiodinium species (two of each ITS2-type A4 and B1). Multivariate analysis of light acclimated photochemical signatures showed separation between most alga types. These spectrally dependent differences in light acclimated PSII efficiency and PSII functional absorption cross section likely reflect changes in light harvesting compounds, their connectivity to the PSII reaction centers and the balance between photochemical and nonphotochemical fluorescence quenching. Additionally, acclimation to low (20 mol photons m-2 s-1) and high (200 mol photons m-2 s-1) light conditions was examined in two of these symbionts types (ITS-2 type A4 and B1) As expected, chlorophyll a cell-1 decreased under high light acclimation in both symbionts. However, only A4 saw a subsequent reduction in absorbance whereas cellular volume decreased in the B1 (S. minutum) symbiont. In response to high light acclimation, Fv/Fm was significantly lower at all excitation wavelengths for the B1 symbiont where as efficiencies remained the same for A4. However, high-light acclimated Fq’/Fm’ levels decreased in both symbionts, but only when measured using the 615nm or 625nm excitation wavelengths. Non-photochemical quenching within the antennae bed was downregulated under high light acclimation in the A4 symbiont, but only when measured using the 505nm and 530nm excitation wavelengths. Such changes in Fq’/Fm’ and antennae bed quenching highlight the benefits of spectrally resolved photochemical measurements. Additionally, the utilization of Arduino and Bitscope hardware exemplifies the potential of open source development platforms for construction of highly customizable instrumentation for photosynthetic research.","",""
48,"Kerstin Balka, C. Raasch, C. Herstatt","How Open is Open Source? – Software and Beyond",2010,"","","","",413,"2024-08-22 15:04:59","","10.1111/j.1467-8691.2010.00569.x","","",,,,,48,3.43,16,3,14,"Traditionally the protection of intellectual property is regarded as a precondition for value capture. The rise of open source (OS) software and OS tangible products, so-called open design, has challenged this understanding. Openness is often regarded as a dichotomous variable (open-source vs. closed-source) and it is assumed that online developer communities demand full opening of the product's source. In this paper we explore openness as a gradual and multi-dimensional concept. We conduct an Internet survey (N = 270) among participants of 20 open design communities in the domain of IT hardware and consumer electronics. We find that open design projects pursue complex strategies short of complete openness and that communities value openness of software more highly than openness of hardware. Our findings suggest that open design companies can successfully employ strategies of partial openness to safeguard value capture without alienating their developer community.","",""
16,"Kevin Cheang, Cameron Rasmussen, Dayeol Lee, David Kohlbrenner, K. Asanović, S. Seshia","Verifying RISC-V Physical Memory Protection",2022,"","","","",564,"2024-08-22 15:04:59","","10.48550/arXiv.2211.02179","","",,,,,16,8.00,3,6,2,"—We formally verify an open-source hardware im- plementation of physical memory protection (PMP) in RISC-V, which is a standard feature used for memory isolation in security critical systems such as the Keystone trusted execution environment. PMP provides per-hardware-thread machine- mode control registers that specify the access privileges for physical memory regions. We ﬁrst formalize the functional property of the PMP rules based on the RISC-V ISA manual. Then, we use the LIME tool to translate an open-source implementation of the PMP hardware module written in Chisel to the Uclid5 formal veriﬁcation language. We encode the formal speciﬁcation in Uclid5 and verify the functional correctness of the hardware. This is an initial effort towards verifying the Keystone framework, where the trusted computing base (TCB) relies on PMP to provide security guarantees such as integrity and conﬁdentiality.","",""
26,"Kevin E. Murray, Mohamed A. Elgammal, Vaughn Betz, Tim Ansell, K. Rothman, Alessandro Comodi","SymbiFlow and VPR: An Open-Source Design Flow for Commercial and Novel FPGAs",2020,"","","","",205,"2024-08-22 15:04:59","","10.1109/MM.2020.2998435","","",,,,,26,6.50,4,6,4,"As the benefits of Moore's Law diminish, computing performance, and efficiency gains are increasingly achieved through specializing hardware to a domain of computation. However, this limits the hardware's generality and flexibility. Field-programmable gate arrays (FPGAs), microchips which can be reprogrammed to implement arbitrary digital circuits, enable the benefits of specialization while remaining flexible. A challenge to using FPGAs is the complex computer-aided design flow required to efficiently map a computation onto an FPGA. Traditionally, these design flows are closed-source and highly specialized to a particular vendor's devices. We propose an alternate data-driven approach, which uses highly adaptable and retargettable open-source tools to target both commercial and research FPGA architectures. While challenges remain, we believe this approach makes the development of novel and commercial FPGA architectures faster and more accessible. Furthermore, it provides a path forward for industry, academia, and the open-source community to collaborate and combine their resources to advance FPGA technology.","",""
35,"Khyati Vachhani, Arvind Mallari Rao","Experimental study on wide band FM receiver using GNURadio and RTL-SDR",2015,"","","","",760,"2024-08-22 15:04:59","","10.1109/ICACCI.2015.7275878","","",,,,,35,3.89,18,2,9,"This paper focuses on the open source GNURadio Software and studies its use as a research tool coupled with USRP and RTL SDR. USRP, RTL SDR and GNU Radio software suite is introduced and briefly discussed. GNU Radio software suite can act as a simulation tool or a software subsystem to drive a SDR transceiver hardware. This is shown by implementing WBFM receiver using RTL SDR with GNU Radio. It concludes by comparing the cheap yet effective RTL SDR with the costly but accurate USRP hardware.","",""
125,"Kizheppatt Vipin, Suhaib A. Fahmy","ZyCAP: Efficient Partial Reconfiguration Management on the Xilinx Zynq",2014,"","","","",652,"2024-08-22 15:04:59","","10.1109/LES.2014.2314390","","",,,,,125,12.50,63,2,10,"New hybrid FPGA platforms that couple processors with a reconfigurable fabric, such as the Xilinx Zynq, offer an alternative view of reconfigurable computing where software applications leverage hardware resources through the use of often reconfigured accelerators. For this to be feasible, reconfiguration overheads must be reduced so that the processor is not burdened with managing the process. We discuss partial reconfiguration (PR) on these architectures, and present an open source controller, ZyCAP, that overcomes the limitations of existing methods, offering more effective use of hardware resources in such architectures. ZyCAP combines high-throughput configuration with a high-level software interface that frees the processor from detailed PR management, making PR on the Zynq easy and efficient.","",""
42,"L. Aversano, M. D. Penta, I. Baxter","Handling preprocessor-conditioned declarations",2002,"","","","",867,"2024-08-22 15:04:59","","10.1109/SCAM.2002.1134108","","",,,,,42,1.91,14,3,22,"Many software systems are developed with configurable functionality, and for multiple hardware platforms and operating systems. This can lead to thousands of possible configurations, requiring each configuration-dependent programming entity or variable to have different types. Such configuration-dependent variables are often declared inside preprocessor conditionals (e.g., C language). Preprocessor-conditioned declarations may be a source of problems. Commonly used configurations are type-checked by repeated compilation. Rarely used configurations are unlikely to be recently type checked, and in such configurations a variable may have a type not compatible to its use or it may contains uses of variables never defined. This paper proposes an approach to identify all possible types each variable declared in a software system can assume, and under which conditions. Inconsistent variable usages can then be detected for all possible configurations. Impacts of preprocessor-conditioned declaration in 17 different open source software systems are also reported.","",""
138,"L. Benini, D. Bertozzi, D. Bruni, N. Drago, F. Fummi, M. Poncino","SystemC Cosimulation and Emulation of Multiprocessor SoC Designs",2003,"","","","",811,"2024-08-22 15:04:59","","10.1109/MC.2003.1193229","","",,,,,138,6.57,23,6,21,"SystemC is an open source C/C++ simulation environment that provides several class packages for specifying hardware blocks and communication channels. The design environment specifies software algorithmically as a set of functions embedded in abstract modules that communicate with one another and with hardware components via abstract communication channels. It enables transparent integration of instruction-set simulators and prototyping boards. The authors describe a simulation environment that targets heterogeneous multiprocessor systems. They are currently working to extend their methodology to more complex on-chip architectures.","",""
252,"L. Buechley, Benjamin Mako Hill","LilyPad in the wild: how hardware's long tail is supporting new engineering and design communities",2010,"","","","",557,"2024-08-22 15:04:59","","10.1145/1858171.1858206","","",,,,,252,18.00,126,2,14,"This paper examines the distribution, adoption, and evolution of an open-source toolkit we developed called the LilyPad Arduino. We track the two-year history of the kit and its user community from the time the kit was commercially introduced, in October of 2007, to November of 2009. Using sales data, publicly available project documentation and surveys, we explore the relationship between the LilyPad and its adopters. We investigate the community of developers who has adopted the kit---paying special attention to gender---explore what people are building with it, describe how user feedback impacted the development of the kit and examine how and why people are contributing their own LilyPad-inspired tools back to the community. What emerges is a portrait of a new technology and a new engineering/design community in co-evolution.","",""
122,"L. Casado, P. Tsigas","ContikiSec: A Secure Network Layer for Wireless Sensor Networks under the Contiki Operating System",2009,"","","","",768,"2024-08-22 15:04:59","","10.1007/978-3-642-04766-4_10","","",,,,,122,8.13,61,2,15,"","",""
131,"L. Caseiro, A. Mendes","Real-Time IGBT Open-Circuit Fault Diagnosis in Three-Level Neutral-Point-Clamped Voltage-Source Rectifiers Based on Instant Voltage Error",2015,"","","","",364,"2024-08-22 15:04:59","","10.1109/TIE.2014.2341558","","",,,,,131,14.56,66,2,9,"This paper presents a real-time diagnostic algorithm for insulated-gate bipolar transistor open-circuit faults in three-level neutral-point-clamped rectifiers. This algorithm is based on the instant voltage error in the converter and requires only signals already available to the control system, avoiding the use of additional hardware. The algorithm is independent from the load and from the used control strategy and provides very fast detection and identification of the fault, with diagnostic times as low as two sample periods (in favorable conditions). Experimental results are presented for the operation of the rectifier with two distinct control and modulation strategies and in different conditions. Results show the algorithm's speed, effectiveness, and robustness.","",""
21,"L. Charest, M. Reid, E. Aboulhamid, G. Bois","A methodology for interfacing open source SystemC with a third party software",2001,"","","","",472,"2024-08-22 15:04:59","","10.1109/DATE.2001.914994","","",,,,,21,0.91,5,4,23,"SystemC is a new open source library in C++ for developing cycle-accurate or more abstract models of software algorithms, hardware architecture and system-level designs. SystemC is meant to be an interoperable, modeling platform allowing seamless tool integration. Our objective is to evaluate the feasibility of linking a third party software to SystemC without modifying the SystemC source. We chose the development of a GUI as such an application. This application illustrates a set of applications following the observer pattern defined recently in software engineering. This class of applications can be loosely coupled to a platform designed following specific rules of software reuse.","",""
23,"L. Deri","Passively Monitoring Networks at Gigabit Speeds Using Commodity Hardware and Open Source Software",2003,"","","","",329,"2024-08-22 15:04:59","","","","",,,,,23,1.10,23,1,21,"network monitoring is a complex activity that mainly consists in packet capturing and classification. Unfortunately this architecture often cannot be applied to gigabit networks, as the amount of data to capture is too large for the monitoring applications. This paper describes the challenges and lessons learnt by the author while monitoring networks at gigabit speeds and above. Finally, it describes an architecture able to successfully monitor networks at high speeds using commodity hardware and open source software. ears ago, many computer specialists predicted the need to have more bandwidth available because people were supposed to need it mostly for multimedia applications. Time has proved that this statement was half true. Although there are many attempts to provide TV/radio access over the Internet, today most bandwidth demanding applications do not belong to the family of interactive multicast-based multimedia applications but rather to peer-to-peer (P2P) [3]. In fact while multicast transmission has not really taken off, the Internet has experienced a tremendous growth of P2P applications. Various attempts to ban this kind of applications failed because an application that has been stopped (e.g. Napster), many more appeared on the scene and new ones are appearing every month. When P2P applications were first introduced, they were mostly used for exchanging songs coded in MP3, whereas today many users share DVDs and movies. The result is that in a couple of years the average size of a file exchanged using P2P applications has risen from a few MB of an MP3 file to 700 MB of a compressed movie with a 100/200-x increase. not only in terms of volume but also in terms of type, as these applications redefined the concept of client and server. Usually a server is a host that provides a service to several clients. In terms of IP traffic: • A client establishes one or more connections with a server, uses the server, and then closes the connections. • Servers can exchange data with both clients and servers, whereas clients talk only with servers. • Client to server connections are often asymmetrical (e.g. in HTTP the client sends little data with respect to the server). • Packets such as ICMP port unreachable or TCP packets with the RST flag set are relatively rare, and they are used to indicate that there is a problem somewhere. • Servers and applications usually listen on well-known ports. With the advent of P2P, the …","",""
41,"L. Emery, M. Borland","Top-up operation experience at the Advanced Photon Source",1999,"","","","",732,"2024-08-22 15:04:59","","10.1109/PAC.1999.795663","","",,,,,41,1.64,21,2,25,"The Advanced Photon Source (APS) is a 7-GeV, third-generation synchrotron radiation source. To provide more stable beam for users, in September 1998 we began commissioning a new operating mode called ""top-up."" In this mode, the beam current does not decay but is maintained at a high level using frequent injection, while photon shutters are open and photon beams are delivered to users. The hardware, software, and safety requirements for top-up are reported. Safety issues related to injection with open photon shutters are covered in companion papers in this conference. Present operational experience includes testing aspects of top-up injection and delivering beam to X-ray users for a few hours with fractional current stability of 10/sup -3/. We expect to run several top-up operation shifts in Spring 1999. Issues of importance are orbit and emittance transients during the injection and scheduling of injection pulses for the convenience of users.","",""
56,"L. Hanlen, Vasanta G. Chaganti, B. Gilbert, D. Rodda, T. Lamahewa, David Smith","Open-source testbed for Body Area Networks: 200 sample/sec, 12 hrs continuous measurement",2010,"","","","",409,"2024-08-22 15:04:59","","10.1109/PIMRCW.2010.5670518","","",,,,,56,4.00,9,6,14,"We present the design criteria and specifications of a novel Open-Source hardware channel sounder and Open-Source data sets for measurements of the Body Area Channel at the 2400MHz ISM band and 2360MHz band. We outline a need for open hardware and measurement data to facilitate robust standardization of the new Body Area Networks. We demonstrate typical analyses on a public data set, with reference to previous works, and show how complex network topologies may be simulated through simple real measurements using reciprocity.","",""
29,"L. Herger, Mercy Bodarky","Engaging students with open source technologies and Arduino",2015,"","","","",312,"2024-08-22 15:04:59","","10.1109/ISECON.2015.7119938","","",,,,,29,3.22,15,2,9,"Timing is critical when trying to engage students in various engineering career paths. While many “National Engineers Week” programs exist for primary and middle school students, there is a lack of hands on activities for students in the 9th-12th grades. It is often difficult to devise experiments for this age group that are interesting and not juvenile. Yet, it is during these crucial years that most students are lost to science, math and engineering. Engaging students and presenting opportunities for invention and excitement is important in the teen years, when peer pressure and the distractions of friends, social events, and activities are particularly high.1. There are a number of open source programming and affordable hardware platforms that can be used to implement low cost and interactive programs to promote innovation with various age groups. In this paper we share our work, as well as our learnings on how to make the workshops more effective. We have created various Arduino projects that can be customized to grade levels ranging from grades 7-12, and even college undergraduate students. The various projects we describe in this paper have been used to interact with students of different grade levels to engage in basic elements of engineering and computer programming. The classes should be set up to work in groups to promote shared innovation, teamwork and collaboration with peers. The open source and hardware experimenting exposed the students to various career paths ranging from software engineer, to electronic engineers and basic elements of various other engineering paths. This paper is designed to demonstrate the promotion of the engineering profession in schools through the use of Arduino Uno, Raspberry Pi Gemma kits, and Flora kits. The programs are also designed to accommodate classroom setting, workshops, or as an in-class field trip.","",""
36,"L. Neuhaus, R. Metzdorff, Sheon Chua, T. Jacqmin, T. Briant, A. Heidmann, P. Cohadon, S. Deléglise","PyRPL (Python Red Pitaya Lockbox) — An open-source software package for FPGA-controlled quantum optics experiments",2017,"","","","",273,"2024-08-22 15:04:59","","10.1109/CLEOE-EQEC.2017.8087380","","",,,,,36,5.14,5,8,7,"The Red Pitaya [1] is an affordable (< 250 Euros) field-programmable gate array (FPGA) board with fast analog inputs and outputs (sampled at 125 MHz). This makes it useful for quantum optics experiments, in particular as a digital feedback controller for analog systems. Based on the open source software provided by the board manufacturer, we have created the software package PyRPL [2] (Python RedPitaya Lockbox) which implements many devices that are needed for optics experiments with the Red Pitaya. The user interface and all high-level functionalities are written in Python, but an essential part of the software is contained in a custom FPGA design written in the hardware description language (HDL) Verilog. The HDL part of PyRPL implements various digital signal processing (DSP) modules: • a two-channel oscilloscope for measurement and diagnostics • two arbitrary function generators for waveform synthesis and noise generation • four proportional-integral-derivative (PID) controllers with up to fourth-order filters for feedback control • three demodulation modules for the generation of Pound-Drever-Hall-like error signals and the realization of narrow, phase-tunable band-pass filters • an infinite impulse response (IIR) filter able to realize transfer functions with up to 24 poles and 24 zeros • a network analyzer for the characterization of analog and digital systems and in-loop tuning of feedback parameters • a spectrum analyzer for the measurement and minimization of noise in closed-loop systems.","",""
51,"L. Patton","A GNU Radio Based Software-Defined Radar",2007,"","","","",848,"2024-08-22 15:04:59","","","","",,,,,51,3.00,51,1,17,"Patton, Lee. M.S.E., Department of Electrical Engineering, Wright State University, 2007. A GNU Radio Based Software-Defined Radar. GNU Radio is an open source software-defined radio project, and the Universal Software Radio Peripheral (USRP) is hardware designed specifically for use with GNU Radio. Together, these two technologies have been used to implement very sophisticated, yet low cost, software-defined radios. Since software-defined radio and software-defined radar are really one in the same technologies, it stands to reason that GNU Radio and the USRP could be utilized to form a low cost radar sensor. In this thesis, we discuss the design of a prototype software-defined radar, built using the open source GNU Radio and open specification USRP projects. The prototype design is introduced, followed by the results of laboratory testing. A discussion on the expected operational performance of the prototype is then provided. The thesis concludes with the development and analysis of a waveform optimization algorithm that is capable of improving signal to interference plus noise ratio in the presence of a band-limited interferer. The low computational complexity of this algorithm make it amenable to software-defined radar.","",""
153,"L. Sala, B. V. van Meer, L. Tertoolen, J. Bakkers, M. Bellin, Richard P. Davis, C. Denning, Michel Dieben, T. Eschenhagen, Elisa Giacomelli, C. Grandela, A. Hansen, E. Holman, M. Jongbloed, S. M. Kamel, C. D. Koopman, Quentin Lachaud, I. Mannhardt, M. Mol, Diogo Mosqueira, V. Orlova, R. Passier, Marcelo C Ribeiro, Umber Saleem, Godfrey L. Smith, F. Burton, C. Mummery","MUSCLEMOTION",2017,"","","","",606,"2024-08-22 15:04:59","","10.1161/CIRCRESAHA.117.312067","","",,,,,153,21.86,15,27,7,"Rationale: There are several methods to measure cardiomyocyte and muscle contraction, but these require customized hardware, expensive apparatus, and advanced informatics or can only be used in single experimental models. Consequently, data and techniques have been difficult to reproduce across models and laboratories, analysis is time consuming, and only specialist researchers can quantify data. Objective: Here, we describe and validate an automated, open-source software tool (MUSCLEMOTION) adaptable for use with standard laboratory and clinical imaging equipment that enables quantitative analysis of normal cardiac contraction, disease phenotypes, and pharmacological responses. Methods and Results: MUSCLEMOTION allowed rapid and easy measurement of movement from high-speed movies in (1) 1-dimensional in vitro models, such as isolated adult and human pluripotent stem cell-derived cardiomyocytes; (2) 2-dimensional in vitro models, such as beating cardiomyocyte monolayers or small clusters of human pluripotent stem cell-derived cardiomyocytes; (3) 3-dimensional multicellular in vitro or in vivo contractile tissues, such as cardiac “organoids,” engineered heart tissues, and zebrafish and human hearts. MUSCLEMOTION was effective under different recording conditions (bright-field microscopy with simultaneous patch-clamp recording, phase contrast microscopy, and traction force microscopy). Outcomes were virtually identical to the current gold standards for contraction measurement, such as optical flow, post deflection, edge-detection systems, or manual analyses. Finally, we used the algorithm to quantify contraction in in vitro and in vivo arrhythmia models and to measure pharmacological responses. Conclusions: Using a single open-source method for processing video recordings, we obtained reliable pharmacological data and measures of cardiac disease phenotype in experimental cell, animal, and human models.","",""
45,"L. Sekanina","Towards evolvable IP cores for FPGAs",2003,"","","","",868,"2024-08-22 15:04:59","","10.1109/EH.2003.1217659","","",,,,,45,2.14,45,1,21,"The paper deals with a new approach to the design of adaptive hardware using common field programmable gate arrays (FPGA). The ultimate aim is to develop evolvable IP (intellectual property) cores. The cores should be reused in the same way as ordinary IP cores are reused. In contrast to the conventional cores, the evolvable cores are able to perform autonomous evolution of their internal circuits. The cores should be available in the form of HDL source code, i.e. they should be synthesizable into any reconfigurable device of a sufficient capacity. The approach is based on implementation of a virtual reconfigurable circuit and a genetic unit in an ordinary FPGA. In the presented case study an adaptive image filter is designed, implemented and synthesized. The proposed idea of evolvable IP core could open the way towards defining a business model for evolvable hardware.","",""
91,"Lawrence O. Aghenta, M. Iqbal","Low-Cost, Open Source IoT-Based SCADA System Design Using Thinger.IO and ESP32 Thing",2019,"","","","",209,"2024-08-22 15:04:59","","10.3390/ELECTRONICS8080822","","",,,,,91,18.20,46,2,5,"Supervisory Control and Data Acquisition (SCADA) is a technology for monitoring and controlling distributed processes. SCADA provides real-time data exchange between a control/monitoring centre and field devices connected to the distributed processes. A SCADA system performs these functions using its four basic elements: Field Instrumentation Devices (FIDs) such as sensors and actuators which are connected to the distributed process plants being managed, Remote Terminal Units (RTUs) such as single board computers for receiving, processing and sending the remote data from the field instrumentation devices, Master Terminal Units (MTUs) for handling data processing and human machine interactions, and lastly SCADA Communication Channels for connecting the RTUs to the MTUs, and for parsing the acquired data. Generally, there are two classes of SCADA hardware and software; Proprietary (Commercial) and Open Source. In this paper, we present the design and implementation of a low-cost, Open Source SCADA system by using Thinger.IO local server IoT platform as the MTU and ESP32 Thing micro-controller as the RTU. SCADA architectures have evolved over the years from monolithic (stand-alone) through distributed and networked architectures to the latest Internet of Things (IoT) architecture. The SCADA system proposed in this work is based on the Internet of Things SCADA architecture which incorporates web services with the conventional (traditional) SCADA for a more robust supervisory control and monitoring. It comprises of analog Current and Voltage Sensors, the low-power ESP32 Thing micro-controller, a Raspberry Pi micro-controller, and a local Wi-Fi Router. In its implementation, the current and voltage sensors acquire the desired data from the process plant, the ESP32 micro-controller receives, processes and sends the acquired sensor data via a Wi-Fi network to the Thinger.IO local server IoT platform for data storage, real-time monitoring and remote control. The Thinger.IO server is locally hosted by the Raspberry Pi micro-controller, while the Wi-Fi network which forms the SCADA communication channel is created using the Wi-Fi Router. In order to test the proposed SCADA system solution, the designed hardware was set up to remotely monitor the Photovoltaic (PV) voltage, current, and power, as well as the storage battery voltage of a 260 W, 12 V Solar PV System. Some of the created Human Machine Interfaces (HMIs) on Thinger.IO Server where an operator can remotely monitor the data in the cloud, as well as initiate supervisory control activities if the acquired data are not in the expected range, using both a computer connected to the network, and Thinger.IO Mobile Apps are presented in the paper.","",""
189,"Leonardo Bonati, Salvatore D’oro, Michele Polese, S. Basagni, T. Melodia","Intelligence and Learning in O-RAN for Data-Driven NextG Cellular Networks",2020,"","","","",551,"2024-08-22 15:04:59","","10.1109/MCOM.101.2001120","","",,,,,189,47.25,38,5,4,"Next generation (NextG) cellular networks will be natively cloud-based and built on programmable, virtualized, and disaggregated architectures. The separation of control functions from the hardware fabric and the introduction of standardized control interfaces will enable the definition of custom closed-control loops, which will ultimately enable embedded intelligence and real-time analytics, thus effectively realizing the vision of autonomous and self-optimizing networks. This article explores the disaggregated network architecture proposed by the O-RAN Alliance as a key enabler of NextG networks. Within this architectural context, we discuss the potential, the challenges, and the limitations of data-driven optimization approaches to network control over different timescales. We also present the first large-scale integration of O-RAN-compliant software components with an open source full-stack softwarized cellular network. Experiments conducted on Colosseum, the world's largest wireless network emulator, demonstrate closed-loop integration of real-time analytics and control through deep reinforcement learning agents. We also show the feasibility of radio access network (RAN) control through xApps running on the near-real-time RAN intelligent controller to optimize the scheduling policies of coexisting network slices, leveraging the O-RAN open interfaces to collect data at the edge of the network.","",""
29,"Leonardo Juan Ramírez López, Gabriel Puerta Aponte, Arturo Rodríguez García","Internet of Things Applied in Healthcare Based on Open Hardware with Low-Energy Consumption",2019,"","","","",319,"2024-08-22 15:04:59","","10.4258/hir.2019.25.3.230","","",,,,,29,5.80,10,3,5,"Objectives The Internet of Things (IoT) and its applications are growing simultaneously. These applications need new intelligent devices along heterogeneous networking. Which makes them costly to implement indeed. Platforms and open devices designed for open-source hardware are possible solutions. This research was conducted under an IoT design, implementation, and assessment model for the remote monitoring of pulse oximetry via oxygen partial saturation (SpO2) and heart rate (HR) with low-energy consumption. Methods This study focused on the development of SpO2 and HR measurements that will allow the monitoring and estimation in real time of the user's state and health related to the established parameters. Measurements were acquired and recorded using a remote web server that recorded the acquired variables for further processing. The statistical analysis data allows comparison of the registered data measured with theoretical models. Results The IoT model was developed use Bluetooth low-energy devices, which comply with low-cost and open-hardware solutions operated via ‘HTTP requests’ for data transmission and reception from a cloud server to an edge device. Network performance assessment was conducted to guarantee the availability and integrity of the acquired values and signals. The system measured SpO2 and HR variables. The most significant result was to achieve energy consumption 20% lower than that of devices in the market. Conclusions In summary, the acquired data validation based on the IoT model had a transmission error of 0.001% which proves its applicability in healthcare.","",""
38,"Liang-Kai Wang, C. Tsen, M. Schulte, Divya Jhalani","Benchmarks and performance analysis of decimal floating-point applications",2007,"","","","",859,"2024-08-22 15:04:59","","10.1109/ICCD.2007.4601896","","",,,,,38,2.24,10,4,17,"The IEEE P754 draft standard for floating-point arithmetic provides specifications for decimal floating-point (DFP) formats and operations. Based on this standard, many developers will provide support for DFP calculations. We present a benchmark suite for DFP applications and use this suite to evaluate the performance of hardware and software DFP solutions. Our benchmarks include banking, commerce, risk-management, tax, and telephone billing applications organized into a suite of five macro benchmarks. In addition to developing our own applications, we leverage open-source projects and academic financial analysis applications. The benchmarks are modular, making them easy to adapt for different DFP solutions. We use the benchmarks to evaluate the performance of the decNumber DFP library and an extended version of the SimpleScalar PISA architecture with hardware and instruction set support for DFP operations. Our analysis shows that providing processor support for high-speed DFP operations significantly improves the performance of DFP applications.","",""
86,"Lianjie Cao, P. Sharma, S. Fahmy, Vinay Saxena","NFV-VITAL: A framework for characterizing the performance of virtual network functions",2015,"","","","",667,"2024-08-22 15:04:59","","10.1109/NFV-SDN.2015.7387412","","",,,,,86,9.56,22,4,9,"Network Function Virtualization (NFV) brings a cloud service automation paradigm to demand-driven elastic flexing of infrastructure resources. Thus, it is essential to characterize the impact of hardware and virtualization options on the virtual network function (VNF) performance, and on the load on underlying infrastructure. In this paper, we present VNF characterization case studies with three sample open-source VNF platforms, the Clearwater IMS VNF and two intrusion detection system VNFs (Snort and Suricata). We demonstrate that VNF characterization is vital for optimizing VNF performance, as well as efficient utilization of infrastructure resources. We use the lessons learned from our case studies to design and implement a VNF characterization framework, NFV-VITAL, to characterize VNFs based on user preferences and available resources. We demonstrate how NFV-VITAL can automatically determine optimal configurations under different workloads with the three sample VNFs.","",""
101,"Lin Meng, Takuma Hirayama, S. Oyanagi","Underwater-Drone With Panoramic Camera for Automatic Fish Recognition Based on Deep Learning",2018,"","","","",622,"2024-08-22 15:04:59","","10.1109/ACCESS.2018.2820326","","",,,,,101,16.83,34,3,6,"Highly developed drone technology enables the use of drones in a wide variety of areas. However, those drones are mainly used in the unmanned aerial vehicles. We believe that underwater drones will become a big research topic and find a market in the near future. We developed an underwater drone with a 360° panoramic camera acting as the “eye” of the drone. The designs are based on the open-source hardware and will be shared as an open-source for contributing to the innovation of manufacturing including drone. The function of the 360° panoramic camera is generated by correcting the images taken by two fisheye lenses. The underwater drone was designed by extending the Raspberry Pi compute module, the frame was designed by OpenSCAD, and the printed circuit board was designed by MakePro. As for the application of the underwater drone, we focused on fish recognition for investigating fish species in a natural lake to help protect the original environment. Fish recognition is based on deep learning, which is the biggest topic in the artificial intelligence research field today. Experimental results show that the function of the underwater drone achieved at diving in the leak automatically. The 360° panoramic images were generated correctly. Fish recognition achieved 87% accuracy by deep learning.","",""
18,"Lin Zhang, P. Slaets, H. Bruyninckx","An open embedded hardware and software architecture applied to industrial robot control",2012,"","","","",477,"2024-08-22 15:04:59","","10.1109/ICMA.2012.6285098","","",,,,,18,1.50,6,3,12,"This paper presents an open embedded hardware and software architecture for industrial robot control. Open hardware refers to open source IP-core provided by the authors, while open software implies the use of open source software, specifically Linux and OROCOS [1]. Embedded implies integration of various functional blocks on one System-On-Chip board, for data acquisition, computation and control tasks, of relatively small size and low power consumption, compared to regular PC-based industrial controllers. The proposed architecture is a hardware and software co-design where an operating system running on an embedded processor drives the FPGA hardware controllers. It is industrial robot type independent, as long as the motors are equipped with incremental position encoders and driven by PWM signals. The architecture has been tested on an industrial Performer MK2 robot setup. Low cost, low power consumption, remarkable stability, high flexibility and expandability are the key advantages of the architecture for industrial robot control.","",""
17,"Lin Zhu, Chengwen Zhang, H. Yin, Dingrui Li, Yu Su, Ishita Ray, Jiaojiao Dong, Fred Wang, L. Tolbert, Yilu Liu, Yiwei Ma, Bruce Rogers, Jim Glass, Lilian Bruce, Sam Delay, Peter Gregory, M. Garcia‐Sanz, M. Marden","A Smart and Flexible Microgrid With A Low-Cost Scalable Open-Source Controller",2021,"","","","",172,"2024-08-22 15:04:59","","10.1109/ACCESS.2021.3131995","","",,,,,17,5.67,2,18,3,"In contrast with conventional microgrids (MGs) with fixed boundaries, a smart and flexible MG with dynamic boundary is introduced in this paper. Such a MG can dynamically change its boundary by picking up or shedding load sections of a distribution feeder depending on its available power, leading to more flexible operation, better utilization of renewables, smaller size of energy storage system, higher reliability, and lower cost. To achieve a flexible MG, the main challenges in MG design are addressed, including recloser placement, MG asset sizing considering resilience, system grounding design, and protection system design. Meanwhile, a hierarchical structure is employed to design and implement the MG controller. On top of the functions defined in IEEE 2030.7-2018, a few new functions, e.g., online topology identification and PQ balance, are added, while the planned/unplanned islanding and reconnection functions are enhanced. The controller is implemented on a CompactRIO, a general-purpose hardware platform provided by National Instruments (NI), and tested on a controller hardware-in-the-loop setup based on an OPAL-RT real-time simulator and a reconfigurable power electronic converter-based hardware testbed. The test results have validated the performance of the developed controllers. Such a flexible MG and its controller have been deployed at a municipal utility, and part of the controller’s functions have been tested on-site.","",""
138,"Ling-Jyh Chen, Yao-Hua Ho, Hu-Cheng Lee, Hsuan-Cho Wu, Hao-Min Liu, Hsin-Hung Hsieh, Yu-Te Huang, S. Lung","An Open Framework for Participatory PM2.5 Monitoring in Smart Cities",2017,"","","","",448,"2024-08-22 15:04:59","","10.1109/ACCESS.2017.2723919","","",,,,,138,19.71,17,8,7,"As the population in cities continues to increase rapidly, air pollution becomes a serious issue from public health to social economy. Among all pollutants, fine particulate matters (PM2.5) directly related to various serious health concerns, e.g., lung cancer, premature death, asthma, and cardiovascular and respiratory diseases. To enhance the quality of urban living, sensors are deployed to create smart cities. In this paper, we present a participatory urban sensing framework for PM2.5 monitoring with more than 2500 devices deployed in Taiwan and 29 other countries. It is one of the largest deployment project for PM2.5 monitor in the world as we know until May 2017. The key feature of the framework is its open system architecture, which is based on the principles of open hardware, open source software, and open data. To facilitate the deployment of the framework, we investigate the accuracy issue of low-cost particle sensors with a comprehensive set of comparison evaluations to identify the most reliable sensor. By working closely with government authorities, industry partners, and maker communities, we can construct an effective eco-system for participatory urban sensing of PM2.5 particles. Based on our deployment achievements to date, we provide a number of data services to improve environmental awareness, trigger on-demand responses, and assist future government policymaking. The proposed framework is highly scalable and sustainable with the potential to facilitate the Internet of Things, smart cities, and citizen science in the future.","",""
18,"Linus Nyman","Understanding Code Forking in Open Source Software: An examination of code forking, its effect on open source software, and how it is viewed and practiced by developers",2015,"","","","",323,"2024-08-22 15:04:59","","","","",,,,,18,2.00,18,1,9,"A project fork occurs when software developers take a copy of source code from one software package and use it to begin an independent development work that is maintained separately from its origin. Although forking in open source software does not require the permission of the original authors, the new version, nevertheless, competes for the attention of the same developers that have worked on the original version. The motivations developers have for performing forks are many, but in general they have received little attention. In this paper, we present the results of a study of forks performed in SourceForge (http://sourceforge.net/) and list the developers’ motivations for their actions. The main motivation, seen in close to half of the cases of forking, was content modification; either adding content to the original program or focusing the content to the needs of a specific segment of users. In a quarter of the cases the motivation was technical modification; either porting the program to new hardware or software, or improving the original.","",""
65,"Linus Nyman, T. Mikkonen","To Fork or Not to Fork: Fork Motivations in SourceForge Projects",2011,"","","","",787,"2024-08-22 15:04:59","","10.1007/978-3-642-24418-6_18","","",,,,,65,5.00,33,2,13,"","",""
135,"Linus Torvalds, David Diamond","Just for Fun: The Story of an Accidental Revolutionary",2001,"","","","",808,"2024-08-22 15:04:59","","","","",,,,,135,5.87,68,2,23,"From the Publisher:  Ten years ago, college student Linus Torvalds retreated to his own computer to write code. He quips, ""I couldn't afford software that I liked, so I wrote my own operating system."" Not only did he write the operating system, he gave it away and invited other software engineers to improve it.  The rest is history. Today, Torvalds has become the key figure in the open source software movement. The powerful operating system he wrote, Linux, has grown into a major force in the computer industry, while its voluntary development model has made Linux the world's largest collaborative project. Hundreds of the world's best engineers contribute to the improvement of Linux. Over 12 million machines, including many of the servers that power the World Wide Web, now run on Linux, as do the top-of-the-line offerings from such hardware giants as IBM and Compaq.  Just for Fun chronicles Torvalds's amazing lifefrom his eccentric childhood in Finland, to his gangly, geeky teenage years when his greatest joy was writing programs on his grandfather's VIC-20 computer, to his rise to world-wide fame with Linux. Brimming with Torvalds's candid observations and opinions, this is a must-read for anyone who wants to know where high tech and business are going in the future.","",""
17,"Liqiang Zhao, Guorong Zhou, G. Zheng, I. Chih-Lin, X. You, L. Hanzo","Open-Source Multi-Access Edge Computing for 6G: Opportunities and Challenges",2021,"","","","",165,"2024-08-22 15:04:59","","","","",,,,,17,5.67,3,6,3,"Multi-access edge computing (MEC) is capable of meeting the challenging requirements of next-generation networks, e.g., 6G, as a benefit of providing computing and caching capabilities in the close proximity of the users. However, the traditional MEC architecture relies on specialized hardware and its bespoke software functions are closely integrated with the hardware, hence it is too rigid for supporting the rapidly evolving scenarios in the face of the demanding requirements of 6G. As a remedy, we conceive the compelling concept of open-source cellular networking and intrinsically amalgamate it with MEC, which is defined by open-source software running on general-purpose hardware platforms. Specifically, an open-source MEC (OS-MEC) scheme is presented relying on a pair of core principles: the decoupling of the MEC functions and resources from each other with the aid of network function virtualization (NFV); as well as the reconfiguration of the disaggregated MEC functions and resources into customized edge instances. This philosophy allows operators to adaptively customize their users' networks. Then, we develop improved networking functions for OS-MEC decoupling and discuss both its key components as well as the process of OS-MEC reconfiguration. The typical use cases of the proposed OS-MEC scheme are characterized with the aid of a small-scale test network. Finally, we discuss some of the potential open-source-related technical challenges when facing 6G.","",""
422,"Liqun Li, Pan Hu, Chunyi Peng, G. Shen, Feng Zhao","Epsilon: A Visible Light Based Positioning System",2014,"","","","",968,"2024-08-22 15:04:59","","","","",,,,,422,42.20,84,5,10,"Exploiting the increasingly wide use of Light-emitting Diode (LED) lighting, in this paper, we study the problem of using visible LED lights for accurate localization. The basic idea is to leverage the existing lighting infrastructure and apply trilateration to localize any devices with light sensing capability (e.g., a smartphone), using LED lamps as anchors. Through the design of Epsilon, we identify and tackle several technique challenges. In particular, we establish and experimentally verify the optical channel model for localization. We adopt BFSK and channel hopping to enable reliable location beaconing from multiple, uncoordinated light sources over the shared optical medium. We handle realistic situations towards robust localization, for example, we exploit user involvement to resolve the ambiguity in case of insufficient LED anchors. We have implemented the Epsilon system and evaluated it with a small scale hardware testbed as well as moderate-size simulations. Experimental results confirmed the effectiveness of Epsilon: the 90th percentile accuracies are 0.4m, 0.7m and 0.8m for three typical office environments. Even in the extreme situation with a single light, the 90th percentile accuracy is 1.1m. We believe that visible light based localization is promising to significantly improve the positioning accuracy, despite few open problems in practice.","",""
531,"Lorenz Meier, D. Honegger, M. Pollefeys","PX4: A node-based multithreaded open source robotics framework for deeply embedded platforms",2015,"","","","",886,"2024-08-22 15:04:59","","10.1109/ICRA.2015.7140074","","",,,,,531,59.00,177,3,9,"We present a novel, deeply embedded robotics middleware and programming environment. It uses a multithreaded, publish-subscribe design pattern and provides a Unix-like software interface for micro controller applications. We improve over the state of the art in deeply embedded open source systems by providing a modular and standards-oriented platform. Our system architecture is centered around a publish-subscribe object request broker on top of a POSIX application programming interface. This allows to reuse common Unix knowledge and experience, including a bash-like shell. We demonstrate with a vertical takeoff and landing (VTOL) use case that the system modularity is well suited for novel and experimental vehicle platforms. We also show how the system architecture allows a direct interface to ROS and to run individual processes either as native ROS nodes on Linux or nodes on the micro controller, maximizing interoperability. Our microcontroller-based execution environment has substantially lower latency and better hardware connectivity than a typical Robotics Linux system and is therefore well suited for fast, high rate control tasks.","",""
30,"Lorenz Meier, Petri Tanskanen, F. Fraundorfer, M. Pollefeys","THE PIXHAWK OPEN-SOURCE COMPUTER VISION FRAMEWORK FOR MAVS",2012,"","","","",380,"2024-08-22 15:04:59","","10.5194/ISPRSARCHIVES-XXXVIII-1-C22-13-2011","","",,,,,30,2.50,8,4,12,"Unmanned aerial vehicles (UAV) and micro air vehicles (MAV) are already intensively used in geodetic applications. State of the art autonomous systems are however geared towards the application area in safe and obstacle-free altitudes greater than 30 meters. Applications at lower altitudes still require a human pilot. A new application ﬁeld will be the reconstruction of structures and buildings, including the facades and roofs, with semi-autonomous MAVs. Ongoing research in the MAV robotics ﬁeld is focusing on enabling this system class to operate at lower altitudes in proximity to nearby obstacles and humans. PIXHAWK is an open source and open hardware toolkit for this purpose. The quadrotor design is optimized for onboard computer vision and can connect up to four cameras to its onboard computer. The validity of the system design is shown with a fully autonomous capture ﬂight along a building.","",""
14,"Louis Pisha, H. Garudadri, Julian Warchall, Tamara Zubatiy, Sean Hamilton, Ching-Hua Lee, G. Chockalingam, P. Mercier, Rajesh E. Gupta, B. Rao","A Wearable, Extensible, Open-Source Platform for Hearing Healthcare Research",2019,"","","","",237,"2024-08-22 15:04:59","","10.1109/ACCESS.2019.2951145","","",,,,,14,2.80,1,10,5,"Hearing loss is one of the most common conditions affecting older adults worldwide. Frequent complaints from the users of modern hearing aids include poor speech intelligibility in noisy environments and high cost, among other issues. However, the signal processing and audiological research needed to address these problems has long been hampered by proprietary development systems, underpowered embedded processors, and the difficulty of performing tests in real-world acoustical environments. To facilitate existing research in hearing healthcare and enable new investigations beyond what is currently possible, we have developed a modern, open-source hearing research platform, Open Speech Platform (OSP). This paper presents the system design of the complete OSP wearable platform, from hardware through firmware and software to user applications. The platform provides a complete suite of basic and advanced hearing aid features which can be adapted by researchers. It serves web apps directly from a hotspot on the wearable hardware, enabling users and researchers to control the system in real time. In addition, it can simultaneously acquire high-quality electroencephalography (EEG) or other electrophysiological signals closely synchronized to the audio. All of these features are provided in a wearable form factor with enough battery life for hours of operation in the field.","",""
17,"Lucia Corsini, Valeria Dammicco, J. Moultrie","Critical Factors for Implementing Open Source Hardware in a Crisis: Lessons Learned from the COVID-19 Pandemic",2020,"","","","",17,"2024-08-22 15:04:59","","10.5334/joh.24","","",,,,,17,4.25,6,3,4,"The rapid spread of COVID-19 has created an urgent demand for critical items including clinical care equipment and protective personal equipment. The failure of traditional industry to meet this demand has led to a huge response from the maker community, who are rapidly mobilising to produce Open Source Hardware (OSH) solutions. Community-driven, distributed manufacturing is enabling production on a global scale never seen before. In this paper, we focus on sensemaking as a process by which meaning is given to collective experiences. We identify six case studies of OSH projects responding to the COVID-19 pandemic, and report on their activities between March-June 2020. In doing so, we uncover several novel collaborations that are emerging between the informal maker community and other formal institutions, including research institutions, non-government organisations and incumbent manufacturers. By observing and reflecting upon these experiences, we identify potential critical factors for implementing OSH in a crisis. We highlight the importance of establishing legitimacy and community management, as well as the enabling conditions in the ecosystem that make OSH more favourable. These findings have implications for various actors beyond the Maker community. In conclusion, we suggest several promising areas for further research. In particular, we believe that this initial study of OSH during the COVID-19 provides a foundation for further longitudinal studies of OSH in a crisis.","",""
25,"Luigi Marini, I. Gutierrez-Polo, R. Kooper, Sandeep Puthanveetil Satheesan, M. Burnette, J. Lee, Todd Nicholson, Yan Zhao, Kenton McHenry","Clowder: Open Source Data Management for Long Tail Data",2018,"","","","",261,"2024-08-22 15:04:59","","10.1145/3219104.3219159","","",,,,,25,4.17,3,9,6,"Clowder is an open source data management system to support data curation of long tail data and metadata across multiple research domains and diverse data types. Institutions and labs can install and customize their own instance of the framework on local hardware or on remote cloud computing resources to provide a shared service to distributed communities of researchers. Data can be ingested directly from instruments or manually uploaded by users and then shared with remote collaborators using a web front end. We discuss some of the challenges encountered in designing and developing a system that can be easily adapted to different scientific areas including digital preservation, geoscience, material science, medicine, social science, cultural heritage and the arts. Some of these challenges include support for large amounts of data, horizontal scaling of domain specific preprocessing algorithms, ability to provide new data visualizations in the web browser, a comprehensive Web service API for automatic data ingestion and curation, a suite of social annotation and metadata management features to support data annotation by communities of users and algorithms, and a web based front-end to interact with code running on heterogeneous clusters, including HPC resources.","",""
20,"Luis M. Aristizábal, Santiago Rúa, Carlos Esteban Gaviria, S. P. Osorio, C. Zuluaga, Norha L. Posada, Rafael E. Vásquez","Design of an open source-based control platform for an underwater remotely operated vehicle",2016,"","","","",307,"2024-08-22 15:04:59","","10.15446/DYNA.V83N195.49828","","",,,,,20,2.50,3,7,8,"This paper reports on the design of an open source-based control platform for the underwater remotely operated vehicle (ROV) Visor3. The vehicle’s original closed source-based control platform is first described. Due to the limitations of the previous infrastructure, modularity and flexibility are identified as the main guidelines for the proposed design. This new design includes hardware, firmware, software, and control architectures. Open-source hardware and software platforms are used for the development of the new system’s architecture, with support from the literature and the extensive experience acquired with the development of robotic exploration systems. This modular approach results in several frameworks that facilitate the functional expansion of the whole solution, the simplification of fault diagnosis and repair processes, and the reduction of development time, to mention a few.","",""
78,"Lukas Geiger, Plumerai Team","Larq: An Open-Source Library for Training Binarized Neural Networks",2020,"","","","",190,"2024-08-22 15:04:59","","10.21105/joss.01746","","",,,,,78,19.50,39,2,4,"Modern deep learning methods have been successfully applied to many different tasks and have the potential to revolutionize everyday lives. However, existing neural networks that use 32 bits to encode each weight and activation often have an energy budget that far exceeds the capabilities of mobile or embedded devices. One common way to improve computational efficiency is to reduce the precision of the network to 16-bit or 8-bit, also known as quantization. Binarized Neural Networks (BNNs) represent an extreme case of quantized networks, that cannot be viewed as approximations to real-valued networks and therefore requires special tools and optimization strategies (Helwegen et al., 2019). In these networks both weights and activations are restricted to {−1,+1} (Hubara, Courbariaux, Soudry, El-Yaniv, & Bengio, 2016). Compared to an equivalent 8-bit quantized network BNNs require 8 times smaller memory size and 8 times fewer memory accesses, which reduces energy consumption drastically when deployed on optimized hardware (Hubara et al., 2016). However, many open research questions remain until the use of BNNs and other extremely quantized neural networks becomes widespread in industry. larq is an ecosystem of Python packages for BNNs and other Quantized Neural Networks (QNNs). It is intended to facilitate researchers to resolve these outstanding questions.","",""
53,"Luke Campagnola, Megan B. Kratz, P. Manis","ACQ4: an open-source software platform for data acquisition and analysis in neurophysiology research",2014,"","","","",893,"2024-08-22 15:04:59","","10.3389/fninf.2014.00003","","",,,,,53,5.30,18,3,10,"The complexity of modern neurophysiology experiments requires specialized software to coordinate multiple acquisition devices and analyze the collected data. We have developed ACQ4, an open-source software platform for performing data acquisition and analysis in experimental neurophysiology. This software integrates the tasks of acquiring, managing, and analyzing experimental data. ACQ4 has been used primarily for standard patch-clamp electrophysiology, laser scanning photostimulation, multiphoton microscopy, intrinsic imaging, and calcium imaging. The system is highly modular, which facilitates the addition of new devices and functionality. The modules included with ACQ4 provide for rapid construction of acquisition protocols, live video display, and customizable analysis tools. Position-aware data collection allows automated construction of image mosaics and registration of images with 3-dimensional anatomical atlases. ACQ4 uses free and open-source tools including Python, NumPy/SciPy for numerical computation, PyQt for the user interface, and PyQtGraph for scientific graphics. Supported hardware includes cameras, patch clamp amplifiers, scanning mirrors, lasers, shutters, Pockels cells, motorized stages, and more. ACQ4 is available for download at http://www.acq4.org.","",""
24,"Luke Russell, Alan L. Steele, Rafik Goubran","Low-cost, rapid prototyping of IMU and pressure monitoring system using an open source hardware design",2012,"","","","",125,"2024-08-22 15:04:59","","10.1109/I2MTC.2012.6229719","","",,,,,24,2.00,8,3,12,"Open source hardware is a type of hardware where the schematics and designs are made unrestricted and available to all. They are often accompanied by open source software. This can bring reliability, ease of debugging, and modular development for rapid prototyping using pre-written libraries. Merits of using open source hardware are discussed and then applied to a portable sensor system based on the open hardware Arduino-derived Jeenode microcontroller board. The system uses an inertial measurement unit (IMU) and seamless integration of other sensors, including a piezo-resistive pressure sensor. It is shown that open source hardware can help to increase rapid development, reduce costs, and encourage further development.","",""
290,"M. A. Faruque, Korosh Vatanparvar","Energy Management-as-a-Service Over Fog Computing Platform",2015,"","","","",570,"2024-08-22 15:04:59","","10.1145/2735960.2735986","","",,,,,290,32.22,145,2,9,"By introducing microgrids, energy management is required to control the power generation and consumption for residential, industrial, and commercial domains, e.g., in residential microgrids and homes. Energy management may also help us to reach zero net energy (ZNE) for the residential domain. Improvement in technology, cost, and feature size has enabled devices everywhere, to be connected and interactive, as it is called Internet of Things (IoT). The increasing complexity and data, due to the growing number of devices like sensors and actuators, require powerful computing resources, which may be provided by cloud computing. However, scalability has become the potential issue in cloud computing. In this paper, fog computing is introduced as a novel platform for energy management. The scalability, adaptability, and open source software/hardware featured in the proposed platform enable the user to implement the energy management with the customized control-as-services, while minimizing the implementation cost and time-to-market. To demonstrate the energy management-as-a-service over fog computing platform in different domains, two prototypes of home energy management (HEM) and microgrid-level energy management have been implemented and experimented.","",""
33,"M. Applegate, Kavon Karrobi, Joseph P. Angelo Jr., Wyatt M. Austin, Syeda Tabassum, E. Aguénounon, Karissa B. Tilbury, R. Saager, S. Gioux, D. Roblyer","OpenSFDI: an open-source guide for constructing a spatial frequency domain imaging system",2020,"","","","",876,"2024-08-22 15:04:59","","10.1117/1.JBO.25.1.016002","","",,,,,33,8.25,3,10,4,"Abstract. Significance: Spatial frequency domain imaging (SFDI) is a diffuse optical measurement technique that can quantify tissue optical absorption (μa) and reduced scattering (μs′) on a pixel-by-pixel basis. Measurements of μa at different wavelengths enable the extraction of molar concentrations of tissue chromophores over a wide field, providing a noncontact and label-free means to assess tissue viability, oxygenation, microarchitecture, and molecular content. We present here openSFDI: an open-source guide for building a low-cost, small-footprint, three-wavelength SFDI system capable of quantifying μa and μs′ as well as oxyhemoglobin and deoxyhemoglobin concentrations in biological tissue. The companion website provides a complete parts list along with detailed instructions for assembling the openSFDI system. Aim: We describe the design of openSFDI and report on the accuracy and precision of optical property extractions for three different systems fabricated according to the instructions on the openSFDI website. Approach: Accuracy was assessed by measuring nine tissue-simulating optical phantoms with a physiologically relevant range of μa and μs′ with the openSFDI systems and a commercial SFDI device. Precision was assessed by repeatedly measuring the same phantom over 1 h. Results: The openSFDI systems had an error of 0  ±  6  %   in μa and −2  ±  3  %   in μs′, compared to a commercial SFDI system. Bland–Altman analysis revealed the limits of agreement between the two systems to be   ±  0.004  mm  −  1 for μa and −0.06 to 0.1  mm  −  1 for μs′. The openSFDI system had low drift with an average standard deviation of 0.0007  mm  −  1 and 0.05  mm  −  1 in μa and μs′, respectively. Conclusion: The openSFDI provides a customizable hardware platform for research groups seeking to utilize SFDI for quantitative diffuse optical imaging.","",""
265,"M. B. Svendsen, P. Bushnell, J. Steffensen","Design and setup of intermittent-flow respirometry system for aquatic organisms.",2016,"","","","",976,"2024-08-22 15:04:59","","10.1111/jfb.12797","","",,,,,265,33.13,88,3,8,"Intermittent-flow respirometry is an experimental protocol for measuring oxygen consumption in aquatic organisms that utilizes the best features of closed (stop-flow) and flow-through respirometry while eliminating (or at least reducing) some of their inherent problems. By interspersing short periods of closed-chamber oxygen consumption measurements with regular flush periods, accurate oxygen uptake rate measurements can be made without the accumulation of waste products, particularly carbon dioxide, which may confound results. Automating the procedure with easily available hardware and software further reduces error by allowing many measurements to be made over long periods thereby minimizing animal stress due to acclimation issues. This paper describes some of the fundamental principles that need to be considered when designing and carrying out automated intermittent-flow respirometry (e.g. chamber size, flush rate, flush time, chamber mixing, measurement periods and temperature control). Finally, recent advances in oxygen probe technology and open source automation software will be discussed in the context of assembling relatively low cost and reliable measurement systems.","",""
239,"M. Banzi","Getting Started with Arduino",2008,"","","","",722,"2024-08-22 15:04:59","","","","",,,,,239,14.94,239,1,16,"This valuable little book offers a thorough introduction to the open-source electronics prototyping platform that's taking the design and hobbyist world by storm. Getting Started with Arduino gives you lots of ideas for Arduino projects and helps you get going on them right away. From getting organized to putting the final touches on your prototype, all the information you need is right in the book. Inside, you'll learn about:Interaction design and physical computing The Arduino hardware and software development environment Basics of electricity and electronics Prototyping on a solderless breadboard Drawing a schematic diagram And more. With inexpensive hardware and open-source software components that you can download free, getting started with Arduino is a snap. To use the introductory examples in this book, all you need is a USB Arduino, USB A-B cable, and an LED.Join the tens of thousands of hobbyists who have discovered this incredible (and educational) platform. Written by the co-founder of the Arduino project, with illustrations by Elisa Canducci, Getting Started with Arduino gets you in on the fun! This 128-page book is a greatly expanded follow-up to the author's original short PDF that's available on the Arduino website.","",""
68,"M. Bartos, B. Wong, B. Kerkez","Open storm: a complete framework for sensing and control of urban watersheds",2017,"","","","",493,"2024-08-22 15:04:59","","10.1039/C7EW00374A","","",,,,,68,9.71,23,3,7,"Leveraging recent advances in technologies surrounding the Internet of Things, “smart” water systems are poised to transform water resources management by enabling ubiquitous real-time sensing and control. Recent applications have demonstrated the potential to improve flood forecasting, enhance rainwater harvesting, and prevent combined sewer overflows. However, adoption of smart water systems has been hindered by a limited number of proven case studies, along with a lack of guidance on how smart water systems should be built. To this end, we review existing solutions, and introduce open storm—an open-source, end-to-end platform for real-time monitoring and control of watersheds. Open storm includes (i) a robust hardware stack for distributed sensing and control in harsh environments (ii) a cloud services platform that enables system-level supervision and coordination of water assets, and (iii) a comprehensive, web-based “how-to” guide, available on open-storm.org, that empowers newcomers to develop and deploy their own smart water networks. We illustrate the capabilities of the open storm platform through two ongoing deployments: (i) a high-resolution flash-flood monitoring network that detects and communicates flood hazards at the level of individual roadways and (ii) a real-time stormwater control network that actively modulates discharges from stormwater facilities to improve water quality and reduce stream erosion. Through these case studies, we demonstrate the real-world potential for smart water systems to enable sustainable management of water resources.","",""
33,"M. Bolado, H. Posadas, J. Castillo, P. Huerta, P. Sánchez, C. Sánchez, H. Fouren, Francisco Blasco","Platform based on open-source cores for industrial applications",2004,"","","","",468,"2024-08-22 15:04:59","","10.1109/DATE.2004.1269026","","",,,,,33,1.65,4,8,20,"The latest version of the international technology roadmap for semiconductors predicts that design reuse will be essential in the near future to face the constantly increasing design complexity. The concept comes from software engineering in which reuse is a fundamental technology. In order to provide libraries and applications to reuse in software development, some open-source initiatives (e.g. Linux, gcc, X, mysql) have appeared during the last decades. The basic idea is to distribute the library or application source code (normally free-of-charge) and allow any developer to use, modify, debug and improve it. Several initiatives have tried to port this idea to hardware development. The main goal of this paper is to develop a synthesizable platform described in SystemC from an open architecture. The platform includes a CPU (OpenRISC) and some basic peripherals. A set of software development tools (compiler, assembler, debugger) and RTOS (eCos) has also been developed. This work enables the evaluation of the advantages and disadvantages of the open-source model in electronic system design.","",""
42,"M. C. Rodríguez-Sánchez, A. Torrado-Carvajal, Joaquín Vaquero López, S. Borromeo, J. Tamames","An Embedded Systems Course for Engineering Students Using Open-Source Platforms in Wireless Scenarios",2016,"","","","",293,"2024-08-22 15:04:59","","10.1109/TE.2016.2526676","","",,,,,42,5.25,8,5,8,"This paper presents a case study analyzing the advantages and disadvantages of using project-based learning (PBL) combined with collaborative learning (CL) and industry best practices, integrated with information communication technologies, open-source software, and open-source hardware tools, in a specialized microcontroller and embedded systems engineering Master's course. In addition to addressing industry requirements in both contents and methodology, the course develops capabilities and competencies in problem solving, independent learning, teamwork, and technical knowledge. Since PBL methodology alone does not ensure teamwork, it was complemented with CL. Design review meetings (as described in IEC 61160), deliverables, and organizational resources were also introduced to mirror industry demands. This structure integrated course content and student academic achievement in a simulated industrial environment. The course had students build a modular management system for home appliances, implementing control software on the “Arduino” open-source platform, as well as using wireless communications. The results show that teaching, learning, and student assessment processes can be improved by using PBL with CL. In addition, the introduction of industry practices, such us peer review meetings, brings academia closer to a real-world context.","",""
134,"M. Crosas","The Dataverse Network®: An Open-Source Application for Sharing, Discovering and Preserving Data",2011,"","","","",385,"2024-08-22 15:04:59","","10.1045/JANUARY2011-CROSAS","","",,,,,134,10.31,134,1,13,"The Dataverse Network is an open-source application for publishing, referencing, extracting and analyzing research data. The main goal of the Dataverse Network is to solve the problems of data sharing through building technologies that enable institutions to reduce the burden for researchers and data publishers, and incentivize them to share their data. By installing Dataverse Network software, an institution is able to host multiple individual virtual archives, called ""dataverses"" for scholars, research groups, or journals, providing a data publication framework that supports author recognition, persistent citation, data discovery and preservation. Dataverses require no hardware or software costs, nor maintenance or backups by the data owner, but still enable all web visibility and credit to devolve to the data owner","",""
114,"M. Fingerhuth, Tomás Babej, P. Wittek","Open source software in quantum computing",2018,"","","","",243,"2024-08-22 15:04:59","","10.1371/journal.pone.0208561","","",,,,,114,19.00,38,3,6,"Open source software is becoming crucial in the design and testing of quantum algorithms. Many of the tools are backed by major commercial vendors with the goal to make it easier to develop quantum software: this mirrors how well-funded open machine learning frameworks enabled the development of complex models and their execution on equally complex hardware. We review a wide range of open source software for quantum computing, covering all stages of the quantum toolchain from quantum hardware interfaces through quantum compilers to implementations of quantum algorithms, as well as all quantum computing paradigms, including quantum annealing, and discrete and continuous-variable gate-model quantum computing. The evaluation of each project covers characteristics such as documentation, licence, the choice of programming language, compliance with norms of software engineering, and the culture of the project. We find that while the diversity of projects is mesmerizing, only a few attract external developers and even many commercially backed frameworks have shortcomings in software engineering. Based on these observations, we highlight the best practices that could foster a more active community around quantum computing software that welcomes newcomers to the field, but also ensures high-quality, well-documented code.","",""
1048,"M. Fonstad, J. Dietrich, Brittany C. Courville, Jennifer L. R. Jensen, P. Carbonneau","Topographic structure from motion: a new development in photogrammetric measurement",2013,"","","","",957,"2024-08-22 15:04:59","","10.1002/esp.3366","","",,,,,1048,95.27,210,5,11,"The production of topographic datasets is of increasing interest and application throughout the geomorphic sciences, and river science is no exception. Consequently, a wide range of topographic measurement methods have evolved. Despite the range of available methods, the production of high resolution, high quality digital elevation models (DEMs) requires a significant investment in personnel time, hardware and/or software. However, image‐based methods such as digital photogrammetry have been decreasing in costs. Developed for the purpose of rapid, inexpensive and easy three‐dimensional surveys of buildings or small objects, the ‘structure from motion’ photogrammetric approach (SfM) is an image‐based method which could deliver a methodological leap if transferred to geomorphic applications, requires little training and is extremely inexpensive. Using an online SfM program, we created high‐resolution digital elevation models of a river environment from ordinary photographs produced from a workflow that takes advantage of free and open source software. This process reconstructs real world scenes from SfM algorithms based on the derived positions of the photographs in three‐dimensional space. The basic product of the SfM process is a point cloud of identifiable features present in the input photographs. This point cloud can be georeferenced from a small number of ground control points collected in the field or from measurements of camera positions at the time of image acquisition. The georeferenced point cloud can then be used to create a variety of digital elevation products. We examine the applicability of SfM in the Pedernales River in Texas (USA), where several hundred images taken from a hand‐held helikite are used to produce DEMs of the fluvial topographic environment. This test shows that SfM and low‐altitude platforms can produce point clouds with point densities comparable with airborne LiDAR, with horizontal and vertical precision in the centimeter range, and with very low capital and labor costs and low expertise levels. Copyright © 2012 John Wiley & Sons, Ltd.","",""
43,"M. Fouquet, H. Niedermayer, G. Carle","Cloud computing for the masses",2009,"","","","",854,"2024-08-22 15:04:59","","10.1145/1659029.1659038","","",,,,,43,2.87,14,3,15,"Cloud Computing provides virtual server infrastructures for companies. The intended benefit is that enterprises do not have to buy their own hardware to provide services for their customers. Therefore, end-users usually do not directly access the raw cloud service (Infrastructure as a Service) as of yet, they use derived services instead.  In this position paper we present a novel way of making cloud-based infrastructure directly useful for end-users by integrating it into peer-to-peer systems. We show one example application which could make use of the cloud without requiring a business relationship between the software vendor and the cloud operator. This software could for example be distributed as open source.","",""
33,"M. Garrich, F. Moreno-Muro, María-Victoria Bueno Delgado, Pablo Pavón Mariño","Open-Source Network Optimization Software in the Open SDN/NFV Transport Ecosystem",2019,"","","","",227,"2024-08-22 15:04:59","","10.1109/JLT.2018.2869242","","",,,,,33,6.60,8,4,5,"Transport ecosystems that combine software defined networking (SDN) and network function virtualization (NFV) are characterized by an unprecedented network control and resource dynamicity. Manual optimization is unmanageable. In this context, open systems that manage and orchestrate SDN/NFV-enabled networks offer programming frameworks that abstract the low-level particularities in the data-plane forwarding devices and in the hardware appliances that provide the IT resources. Although these open systems present notable complexity, their programming abstractions promote a client layer where third-party applications can provide different functionalities thus enabling optimization-as-a-service business opportunities. In this paper, we cover open-source optimization software initiatives for offline planning and online provisioning and orchestration of SDN/NFV networks. With this goal in mind, we first focus on open software (and framework) initiatives through a set of realistic use cases that require optimization in multi-layer optical transport scenarios and ecosystems that combine transport with IT resources. The importance of a joint optimization of both network and IT domains is emphasized, a new paradigm triggered by SDN/NFV technologies. We discuss the theoretical limits to algorithm performances, and review available open-source frameworks for problem modeling that enable the interaction with solvers. Finally, we focus on the Net2Plan open-source network planning tool, a Java-based software that suitably embraces the multiple features required in the optimization of joint transport network and IT resource SDN/NFV ecosystems. Recent works based on Net2Plan are reviewed to illustrate its suitability for rapid algorithm prototyping, and for interaction with SDN/NFV-enabled networks.","",""
39,"M. Gronle, W. Lyda, M. Wilke, C. Kohler, W. Osten","itom: an open source metrology, automation, and data evaluation software.",2014,"","","","",333,"2024-08-22 15:04:59","","10.1364/AO.53.002974","","",,,,,39,3.90,8,5,10,"Modern optical sensors and measurement systems usually are a powerful combination of optical elements, active hardware components like actuators or sensing devices as well as a sophisticated control software and data evaluation algorithms. In order to develop and operate such systems, it is necessary to have a flexible, intuitive, and fast underlying software framework that also allows for rapid prototyping of a sensor in a dynamic lab environment. This software must be able to control and communicate with all necessary hardware devices and has to provide all the highly performant evaluation, data, and image processing algorithms required. In this publication, we want to present the open source measurement and data evaluation software suite itom, which has been designed considering the denoted requirements and whose development began in 2011.","",""
21,"M. Hale, Dalton Ellis, R. Gamble, Charles Walter, Jessica Lin","Secu Wear: An Open Source, Multi-component Hardware/Software Platform for Exploring Wearable Security",2015,"","","","",149,"2024-08-22 15:04:59","","10.1109/MobServ.2015.23","","",,,,,21,2.33,4,5,9,"Wearables are the next big development in the mobile internet of things. Operating in a body area network around a smartphone user they serve a variety of commercial, medical, and personal uses. Whether used for fitness tracking, mobile health monitoring, or as remote controllers, wearable devices can include sensors that collect a variety of data and actuators that provide hap tic feedback and unique user interfaces for controlling software and hardware. Wearables are typically wireless and use Bluetooth LE (low energy) to transmit data to a waiting smartphone app. Frequently, apps forward this data onward to online web servers for tracking. Security and privacy concerns abound when wearables capture sensitive data or provide critical functionality. This paper develops a platform, called SecuWear, for conducting wearable security research, collecting data, and identifying vulnerabilities in hardware and software. SecuWear combines open source technologies to enable researchers to rapidly prototype security vulnerability test cases, evaluate them on actual hardware, and analyze the results to understand how best to mitigate problems. The paper includes two types of evaluation in the form of a comparative analysis and empirical study. The results reveal how several passive observation attacks present themselves in wearable applications and how the SecuWear platform can capture the necessary information needed to identify and combat such attacks.","",""
22,"M. Hirafuji, H. Yoichi, T. Kiura, Keiko Matsumoto, T. Fukatsu, Kei Tanaka, Y. Shibuya, Atsushi Itoh, H. Nesumi, N. Hoshi, S. Ninomiya, J. Adinarayana, D. Sudharsan, Yasunori Saito, Kazuki Kobayashi, Takanobu Suzuki","Creating high-performance/low-cost ambient sensor cloud system using OpenFS (Open Field Server) for high-throughput phenotyping",2011,"","","","",660,"2024-08-22 15:04:59","","","","",,,,,22,1.69,2,16,13,"Recently high-performance sequencers can read whole DNA sequence in short-time. On the other hand, phenotypic information is too short to analyze genomic data. Such phenotypic data will be collected in various environmental conditions (i.e. many places) by long-term observations for individual plants. It can be technologically realized by using low-cost multifunctional sensor networks and free cloud services instantly. We developed OpenFS (Open Field Server) employing open-source hardware. Also free cloud data service such as Twitter is employed to share observed data. Concept of ambient sensor cloud system is proposed by using both OpenFS and cloud computing.","",""
17,"M. Hopkins, Alexander Michael Kibbe","Open-Source Hardware in Controls Education",2014,"","","","",91,"2024-08-22 15:04:59","","10.18260/1-2--22888","","",,,,,17,1.70,9,2,10,"In teaching undergraduate automatic controls, the laboratory experience is an important and irreplaceable component. Historically, good platforms for a controls laboratory have been expensive, because the equipment has typically been very specialized for educational purposes. Moreover, the equipment often is not physically robust in the face of student manhandling, creating major difficulties and costs in maintaining such a lab. The advent of inexpensive open-source controller hardware is revolutionizing this situation because it is now possible to have good controls-hardware capability at relatively low cost. The Arduino Mega 2560, in particular, is supported by Matlab, Simulink and LabView, and thus provides a great deal of flexibility in developing laboratory procedures for students to study controls. The Arduino is an open-source electronics prototyping platform based on flexible, easy-to-use hardware and software. The “motor shield” is an add-on (daughterboard) to the Arduino that further enables control of dc motors. This paper explains a method and hardware to connect an Arduino to a separately-powered dc-motor unit. Matlab and Simulink provide full support of the Arduino board for feedback-controller design. The Arduino board is powered by, and communicates with Simulink, through a standard USB connection. Keywords — computers in education, controls education, controls laboratory, laboratory hardware, Arduino board, dc motor, motor control, motor control hardware.","",""
177,"M. Hunter, B. Segelke, M. Messerschmidt, Garth J. Williams, N. Zatsepin, A. Barty, W. Benner, D. Carlson, M. Coleman, A. Graf, S. Hau-Riege, T. Pardini, M. Seibert, James E. Evans, S. Boutet, M. Frank","Fixed-target protein serial microcrystallography with an x-ray free electron laser",2014,"","","","",962,"2024-08-22 15:04:59","","10.1038/srep06026","","",,,,,177,17.70,18,16,10,"","",""
150,"M. I. David. M. Laverty, R. Best, Iyad Paul Brogan, Member Ieee Al Khatib, Member Ieee Luigi Vanfretti, M. I. D. John Morrow","The OpenPMU Platform for Open-Source Phasor Measurements",2013,"","","","",345,"2024-08-22 15:04:59","","10.1109/TIM.2013.2240920","","",,,,,150,13.64,25,6,11,"OpenPMU is an open platform for the development of phasor measurement unit (PMU) technology. A need has been identified for an open-source alternative to commercial PMU devices tailored to the needs of the university researcher and for enabling the development of new synchrophasor instruments from this foundation. OpenPMU achieves this through open-source hardware design specifications and software source code, allowing duplicates of the OpenPMU to be fabricated under open-source licenses. This paper presents the OpenPMU device based on the Labview development environment. The device is performance tested according to the IEEE C37.118.1 standard. Compatibility with the IEEE C37.118.2 messaging format is achieved through middleware which is readily adaptable to other PMU projects or applications. Improvements have been made to the original design to increase its flexibility. A new modularized architecture for the OpenPMU is presented using an open messaging format which the authors propose is adopted as a platform for PMU research.","",""
14,"M. Ishikawa, I. Maruta","Rapid Prototyping for Control Education using Arduino and Open-Source Technologies",2009,"","","","",433,"2024-08-22 15:04:59","","10.3182/20091021-3-JP-2009.00060","","",,,,,14,0.93,7,2,15,"Abstract In this article, we introduce our recent development of small-sized experimental devices for control research and education, with a special focus on the use of open-source technologies such as Arduino and Processing. Arduino is a pronominal open-source hardware whose architecture, implementation and other necessary resources are accessible to every users, while Processing is its software counterpart which supports rapid development of controller/interface programs without much expertise. We demonstrate their advantage with a kinematic nonholonomic system called the trident snake robot and an under-actuated mechanical system called the inverted unicycle robot.","",""
26,"M. J. Walker, Sascha Bischoff, S. Diestelhorst, G. Merrett, B. Al-Hashimi","Hardware-Validated CPU Performance and Energy Modelling",2018,"","","","",923,"2024-08-22 15:04:59","","10.1109/ISPASS.2018.00013","","",,,,,26,4.33,5,5,6,"Full-system simulation frameworks such as gem5 are used extensively to evaluate research ideas and for design-space exploration. Moreover, energy-efficiency has become the key design constraint in recent years and many works use a separate power modelling framework to evaluate energy consumption. While such tools are convenient and flexible, they are known to contain sources of error which are often not fully understood and potentially impact the conclusions drawn from investigations. This work enables accurate, hardware-validated performance, power, and energy modelling of CPUs by first presenting a methodology to evaluate and identify sources of error in CPU performance models, and secondly developing empirical power models optimised for use with such performance models. Hierarchical clustering, correlation analysis, and regression techniques are used to identify sources of error without requiring detailed CPU specifications and enable existing models to be improved, new models to be developed, validation of simulator changes, and testing of model suitability for specific use-cases. Furthermore, the GemStone open-source software tool is presented, which automates the process of characterising hardware platforms, identifying sources of error in gem5 models, applying power analysis, and quantifying the effect of errors on the performance, power, and energy estimations. In addition, the mean percentage error in execution time was found to swing from -51% to +10% between two versions of the same gem5 model, underlining the need for an automated tool to validate models against reference hardware, ensuring accuracy and consistency.","",""
56,"M. Jaiswal, Hayden Kwok-Hay So","PACoGen: A Hardware Posit Arithmetic Core Generator",2019,"","","","",393,"2024-08-22 15:04:59","","10.1109/ACCESS.2019.2920936","","",,,,,56,11.20,28,2,5,"This paper proposes open-source hardware Posit Arithmetic Core Generator (PACoGen) for the recently developed universal number posit number system, along with a set of pipelined architectures. The posit number system composed of a run-time varying exponent component, which is defined by a composition of varying length “regime-bit” and “exponent-bit” (with a maximum size of ES bits, the exponent size). This in effect also makes the fraction part to vary at run-time in size and position. These run-time variations inherit an interesting hardware design challenge for posit arithmetic architectures. The posit number system, being at an infant stage of its development, possess very limited hardware solutions for its arithmetic architectures. In this view, this paper targets the algorithmic development and generic HDL generators (PACoGen) for basic posit arithmetic. The proposed open source PACoGen currently includes the adder/subtractor, multiplier, and division arithmetic. The PACoGen can provide the Verilog HDL code respective posit arithmetic for any given posit word width (N) and exponent size (ES), as defined under the posit number system. Further, pipelined architectures of 32-bit posit with 6-bit exponent size are also proposed and discussed for addition/subtraction, multiplication, and division arithmetic. The proposed posit arithmetic architectures are demonstrated on the Virtex-7 (xc7vx330t-3ffg1157) FPGA device as well as Nangate 15 nm ASIC platform. The PACoGen would open a gateway for further posit arithmetic hardware exploration and evaluation.","",""
37,"M. Jaiswal, Hayden Kwok-Hay So","Universal number posit arithmetic generator on FPGA",2018,"","","","",710,"2024-08-22 15:04:59","","10.23919/DATE.2018.8342187","","",,,,,37,6.17,19,2,6,"Posit number system format includes a run-time varying exponent component, defined by a combination of regime-bit (with run-time varying length) and exponent-bit (with size of up to ES bits, the exponent size). This also leads to a run-time variation in its mantissa field size and position. This run-time variation in posit format poses a hardware design challenge. Being a recent development, posit lacks for its adequate hardware arithmetic architectures. Thus, this paper is aimed towards the posit arithmetic algorithmic development and their generic hardware generator. It is focused on basic posit arithmetic (floating-point to posit conversion, posit to floating point conversion, addition/subtraction and multiplication). These are also demonstrated on a FPGA platform. Target is to develop an open-source solution for generating basic posit arithmetic architectures with parameterized choices. This contribution would enable further exploration and evaluation of posit system.","",""
35,"M. Khalil-Hani, V. P. Nambiar, M. N. Marsono","Hardware Acceleration of OpenSSL Cryptographic Functions for High-Performance Internet Security",2010,"","","","",628,"2024-08-22 15:04:59","","10.1109/ISMS.2010.89","","",,,,,35,2.50,12,3,14,"The Transport Layer Security (TLS) protocol is currently the predominant method of implementing Internet security. This paper proposes an FPGA-based embedded system integrating hardware that accelerates the cryptographic algorithms used in the SSL/TLS protocol. OpenSSL, an open source implementation of the SLL v3 and TLS v1 protocol, is deployed in the proposed embedded system powered with a Nios-2 embedded soft-core processor. Nios2-Linux RTOS is applied, which serves to provide Ethernet connectivity, multitasking, and support for the OpenSSL library. Key cipher functions used in SSL-driven connections, which include AES-256 symmetric encryption, SHA-2 hashing, RSA-2048 publickey cryptography, are accelerated in hardware. The embedded cryptosystem is prototyped completely on an Altera Stratix II FPGA development board. Experimental results show significant improvements in performance of the SSL transactions when the proposed embedded cryptosystem is deployed in the networking system.","",""
93,"M. Kolarík, Radim Burget, V. Uher, K. Říha, M. Dutta","Optimized High Resolution 3D Dense-U-Net Network for Brain and Spine Segmentation",2019,"","","","",982,"2024-08-22 15:04:59","","10.3390/APP9030404","","",,,,,93,18.60,19,5,5,"The 3D image segmentation is the process of partitioning a digital 3D volumes into multiple segments. This paper presents a fully automatic method for high resolution 3D volumetric segmentation of medical image data using modern supervised deep learning approach. We introduce 3D Dense-U-Net neural network architecture implementing densely connected layers. It has been optimized for graphic process unit accelerated high resolution image processing on currently available hardware (Nvidia GTX 1080ti). The method has been evaluated on MRI brain 3D volumetric dataset and CT thoracic scan dataset for spine segmentation. In contrast with many previous methods, our approach is capable of precise segmentation of the input image data in the original resolution, without any pre-processing of the input image. It can process image data in 3D and has achieved accuracy of 99.72% on MRI brain dataset, which outperformed results achieved by human expert. On lumbar and thoracic vertebrae CT dataset it has achieved the accuracy of 99.80%. The architecture proposed in this paper can also be easily applied to any task already using U-Net network as a segmentation algorithm to enhance its results. Complete source code was released online under open-source license.","",""
50,"M. Kourtis, M. Mcgrath, G. Gardikis, G. Xilouris, Vincenzo Riccobene, Panagiotis Papadimitriou, E. Trouva, F. Liberati, M. Trubian, Josep Batalle, H. Koumaras, David Dietrich, Aurora Ramos, J. Ferrer Riera, José Bonnet, A. Pietrabissa, A. Ceselli, A. Petrini","T-NOVA: An Open-Source MANO Stack for NFV Infrastructures",2017,"","","","",265,"2024-08-22 15:04:59","","10.1109/TNSM.2017.2733620","","",,,,,50,7.14,5,18,7,"One of the primary challenges associated with network functions virtualization (NFV) is the automated management of the service lifecycle. In this paper, we present a full software-based management and orchestration (MANO) stack which operates with OpenStack and OpenDaylight controllers and has the in-built functionality to automate the key phases of the NFV service lifecycle, namely resource discovery and matching, service mapping, service deployment, and monitoring. The MANO stack is being implemented by the EU FP7 project T-NOVA, with the components being released as open-source software. Service mapping and service deployment solutions developed in the scope of T-NOVA are presented in detail. As a proof-of-concept, we evaluate the performance of a virtualized traffic classifier network function, demonstrating the gains of virtualized hardware acceleration.","",""
17,"M. Lankamp, R. Poss, Qiang Yang, Jian Fu, M. I. Uddin, C. Jesshope","MGSim - Simulation tools for multi-core processor architectures",2013,"","","","",845,"2024-08-22 15:04:59","","","","",,,,,17,1.55,3,6,11,"MGSim is an open source discrete event simulator for on-chip hardware components, developed at the University of Amsterdam. It is intended to be a research and teaching vehicle to study the fine-grained hardware/software interactions on many-core and hardware multithreaded processors. It includes support for core models with dierent instruction sets, a configurable multi-core interconnect, multiple configurable cache and memory models, a dedicated I/O subsystem, and comprehensive monitoring and interaction facilities. The default model configuration shipped with MGSim implements Microgrids, a many-core architecture with hardware concurrency management. MGSim is furthermore written mostly in C++ and uses object classes to represent chip components. It is optimized for architecture models that can be described as process networks.","",""
10,"M. Mardonova, Yosoon Choi","Toward Open-Source Hardware and Software for the Mining Industry: a Case Study of Low-Cost Environmental Monitoring System for Non-Metallic Underground Mines",2019,"","","","",32,"2024-08-22 15:04:59","","10.1007/s42461-019-0093-3","","",,,,,10,2.00,5,2,5,"","",""
17,"M. Merenda, D. Iero, G. Pangallo, Paolo Falduto, G. Adinolfi, A. Merola, G. Graditi, F. D. Corte","Open-Source Hardware Platforms for Smart Converters with Cloud Connectivity",2019,"","","","",28,"2024-08-22 15:04:59","","10.3390/ELECTRONICS8030367","","",,,,,17,3.40,2,8,5,"This paper presents the design and hardware implementation of open-source hardware dedicated to smart converter systems development. Smart converters are simple or interleaved converters. They are equipped with controllers that are able to online impedance match for the maximum power transfer. These conversion systems are particularly feasible for photovoltaic and all renewable energies systems working in continuous changing operating conditions. Smart converters represent promising solutions in recent energetic scenarios, in fact their application is deepening and widening. In this context, the availability of a hardware platform could represent a useful tool. The platform was conceived and released as an open hardware instrument for academy and industry to benefit from the improvements brought by the researchers’ community. The usage of a novel, open-source platform would allow many developers to design smart converters, focusing on algorithms instead of electronics, which could result in a better overall development ecosystem and rapid growth in the number of smart converter applications. The platform itself is proposed as a benchmark in the development and testing of different maximum power point tracking algorithms. The designed system is capable of accurate code implementations, allowing the testing of different current and voltage-controlled algorithms for different renewable energies systems. The circuit features a bi-directional radio frequency communication channel that enables real-time reading of measurements and parameters, and remote modification of both algorithm types and settings. The proposed system was developed and successfully tested in laboratory with a solar module simulator and with real photovoltaic generators. Experimental results indicate state-of-art performances as a converter, while enhanced smart features pave the way to system-level management, real-time diagnostics, and on-the-flight parameters change. Furthermore, the deployment feasibility allows different combinations and arrangements of several energy sources, converters (both single and multi-converters), and modulation strategies. To our knowledge, this project remains the only open-source hardware smart converter platform used for educational, research, and industrial purposes so far.","",""
86,"M. Minervini, M. Giuffrida, P. Perata, S. Tsaftaris","Phenotiki: an open software and hardware platform for affordable and easy image‐based phenotyping of rosette‐shaped plants",2017,"","","","",343,"2024-08-22 15:04:59","","10.1111/tpj.13472","","",,,,,86,12.29,22,4,7,"Phenotyping is important to understand plant biology, but current solutions are costly, not versatile or are difficult to deploy. To solve this problem, we present Phenotiki, an affordable system for plant phenotyping that, relying on off-the-shelf parts, provides an easy to install and maintain platform, offering an out-of-box experience for a well-established phenotyping need: imaging rosette-shaped plants. The accompanying software (with available source code) processes data originating from our device seamlessly and automatically. Our software relies on machine learning to devise robust algorithms, and includes an automated leaf count obtained from 2D images without the need of depth (3D). Our affordable device (~€200) can be deployed in growth chambers or greenhouse to acquire optical 2D images of approximately up to 60 adult Arabidopsis rosettes concurrently. Data from the device are processed remotely on a workstation or via a cloud application (based on CyVerse). In this paper, we present a proof-of-concept validation experiment on top-view images of 24 Arabidopsis plants in a combination of genotypes that has not been compared previously. Phenotypic analysis with respect to morphology, growth, color and leaf count has not been performed comprehensively before now. We confirm the findings of others on some of the extracted traits, showing that we can phenotype at reduced cost. We also perform extensive validations with external measurements and with higher fidelity equipment, and find no loss in statistical accuracy when we use the affordable setting that we propose. Device set-up instructions and analysis software are publicly available ( http://phenotiki.com).","",""
73,"M. Montón, A. Portero, Marc Moreno, Borja Martínez, J. Carrabina","Mixed SW/SystemC SoC Emulation Framework",2007,"","","","",824,"2024-08-22 15:04:59","","10.1109/ISIE.2007.4374971","","",,,,,73,4.29,15,5,17,"Developing HW modules for standard platforms like PCs or embedded devices requires a complete system emulator availability to detect and fix bugs on developed HW, Operating Systems (OS) drivers and applications. This paper presents a set of plug-ins to an open-source CPU emulator that enables mixed simulations between platforms emulators and hardware (HW) modules described in SystemC. In this paper three plugins for QEMU are described: one for connecting TLM SystemC modules to any bus QEMU emulates, one for connecting SystemC to PCI bus for PC based platform and one plug-in for connecting SystemC to AMBA bus for ARM platforms. With this framework, it is possible to develop OS drivers at the same time HW is developed and final application tested running in this virtual platform.","",""
92,"M. Moy, F. Maraninchi, L. Maillet-Contoz","Pinapa: an extraction tool for SystemC descriptions of systems-on-a-chip",2005,"","","","",815,"2024-08-22 15:04:59","","10.1145/1086228.1086286","","",,,,,92,4.84,31,3,19,"SystemC is becoming a de-facto standard for the description of complex systems-on-a-chip. It enables system-level descriptions of SoCs: the same language is used for the description of the architecture, software and hardware parts.A tool like Pinapa is compulsory to work on realistic SoCs designs for anything else than simulation: it is able to extract both architecture and behavior information from SystemC code, with very few limitations. Pinapa can be used as a front-end for various analysis tools, ranging from ""superlint"" to model-checking. It is open source and available from http://greensocs.sourceforge.net/pinapa/. There exists no equivalent tool for SystemC up to now.","",""
144,"M. Nascimento, Christian Esteve Rothenberg, M. Salvador, Carlos N. A. Corrêa, S. C. D. Lucena, M. Magalhães","Virtual routers as a service: the RouteFlow approach leveraging software-defined networks",2011,"","","","",728,"2024-08-22 15:04:59","","10.1145/2002396.2002405","","",,,,,144,11.08,24,6,13,"The networking equipment market is being transformed by the need for greater openness and flexibility, not only for research purposes but also for in-house innovation by the equipment owners. In contrast to networking gear following the model of computer mainframes, where closed software runs on proprietary hardware, the software-defined networking approach effectively decouples the data from the control plane via an open API (i.e., OpenFlow protocol) that allows the (remote) control of packet forwarding engines. Motivated by this scenario, we propose RouteFlow, a commodity routing architecture that combines the line-rate performance of commercial hardware with the flexibility of open-source routing stacks (remotely) running on general purpose computers. The outcome is a novel point in the design space of commodity routing solutions with far-reaching implications towards virtual routers and IP networks as a service. This paper documents the progress achieved in the design and prototype implementation of our work and outlines our research agenda that calls for a community-driven approach.","",""
53,"M. Nascimento, Christian Esteve Rothenberg, M. Salvador, M. Magalhães","QuagFlow: partnering Quagga with OpenFlow",2010,"","","","",829,"2024-08-22 15:04:59","","10.1145/1851182.1851252","","",,,,,53,3.79,13,4,14,"Computing history has shown that open, multi-layer hardware and software stacks encourage innovation and bring costs down. Only recently this trend is meeting the networking world with the availability of entire open source networking stacks being closer than ever. Towards this goal, we are working on QuagFlow, a transparent interplay between the popular Quagga open source routing suite and the low level vendor-independent OpenFlow interface. QuagFlow is a distributed system implemented as a NOX controller application and a series of slave daemons running along the virtual machines hosting the Quagga routing instances.","",""
28,"M. Oellermann, J. Jolles, D. Ortiz, Rui Seabra, Tobias Wenzel, Hannah Wilson, Richelle L. Tanner","Open Hardware in Science: The Benefits of Open Electronics",2022,"","","","",208,"2024-08-22 15:04:59","","10.1093/icb/icac043","","",,,,,28,14.00,4,7,2,"Abstract Openly shared low-cost electronic hardware applications, known as open electronics, have sparked a new open-source movement, with much untapped potential to advance scientific research. Initially designed to appeal to electronic hobbyists, open electronics have formed a global “maker” community and are increasingly used in science and industry. In this perspective article, we review the current costs and benefits of open electronics for use in scientific research ranging from the experimental to the theoretical sciences. We discuss how user-made electronic applications can help (I) individual researchers, by increasing the customization, efficiency, and scalability of experiments, while improving data quantity and quality; (II) scientific institutions, by improving access to customizable high-end technologies, sustainability, visibility, and interdisciplinary collaboration potential; and (III) the scientific community, by improving transparency and reproducibility, helping decouple research capacity from funding, increasing innovation, and improving collaboration potential among researchers and the public. We further discuss how current barriers like poor awareness, knowledge access, and time investments can be resolved by increased documentation and collaboration, and provide guidelines for academics to enter this emerging field. We highlight that open electronics are a promising and powerful tool to help scientific research to become more innovative and reproducible and offer a key practical solution to improve democratic access to science.","",""
186,"M. Ortiz-Catalán, R. Brånemark, B. Håkansson","BioPatRec: A modular research platform for the control of artificial limbs based on pattern recognition algorithms",2013,"","","","",964,"2024-08-22 15:04:59","","10.1186/1751-0473-8-11","","",,,,,186,16.91,62,3,11,"","",""
7,"M. Perez-Jimenez, P. Ramón-Soria, B. Arrue, Aníbal Ollero","Hecatonquiros: Open-source hardware for aerial manipulation applications",2020,"","","","",23,"2024-08-22 15:04:59","","10.1177/1729881420921622","","",,,,,7,1.75,2,4,4,"This article presents Hecatonquiros, a complete open-source ecosystem for low cost and lightweight robotic manipulators. It has been released to focus on aerial manipulation applications but can be used in any other robotic application that requires the use of manipulators. The proposed framework provides the control system, a simulation environment, and a set of back ends to allow reusing the algorithms with different hardware setups. Additionally, it is released with a set of tools to ease its usage and various examples to teach the users. Several manipulators models and end-effectors are available for the users to adapt to their different requirements. All the hardware is designed to be three-dimensional printed and its components are low cost and available in common robotic stores, so anyone can reproduce and use them. The software is available in the GitHub repository https://github.com/Bardo91/hecatonquiros.","",""
50,"M. Perrotin, Eric Conquet, Julien Delange, A. Schiele, T. Tsiodras","TASTE: A Real-Time Software Engineering Tool-Chain Overview, Status, and Future",2011,"","","","",817,"2024-08-22 15:04:59","","10.1007/978-3-642-25264-8_4","","",,,,,50,3.85,10,5,13,"","",""
224,"M. Prats, Javier Pérez, J. J. Fernández, P. Sanz","An open source tool for simulation and supervision of underwater intervention missions",2012,"","","","",371,"2024-08-22 15:04:59","","10.1109/IROS.2012.6385788","","",,,,,224,18.67,56,4,12,"This paper presents UWSim: a new software tool for visualization and simulation of underwater robotic missions. The software visualizes an underwater virtual scenario that can be configured using standard modeling software. Controllable underwater vehicles, surface vessels and robotic manipulators, as well as simulated sensors, can be added to the scene and accessed externally through network interfaces. This allows to easily integrate the simulation and visualization tool with existing control architectures, thus allowing hardware-in-the-loop simulations (HIL). UWSim has been successfully used for simulating the logics of underwater intervention missions and for reproducing real missions from the captured logs. The software is offered as open source, thus filling a gap in the underwater robotics community, where commercial simulators oriented to ROV pilot training predominate.","",""
78,"M. Rasch, Diego Moreda, T. Gokmen, M. L. Gallo, F. Carta, Cindy Goldberg, K. E. Maghraoui, A. Sebastian, V. Narayanan","A Flexible and Fast PyTorch Toolkit for Simulating Training and Inference on Analog Crossbar Arrays",2021,"","","","",553,"2024-08-22 15:04:59","","10.1109/AICAS51828.2021.9458494","","",,,,,78,26.00,9,9,3,"We introduce the IBM ANALOG HARDWARE ACCELERATION KIT, a new and first of a kind open source toolkit to simulate analog crossbar arrays in a convenient fashion from within PYTORCH (freely available at https://github.com/IBM/aihwkit). The toolkit is under active development and is centered around the concept of an “analog tile” which captures the computations performed on a crossbar array. Analog tiles are building blocks that can be used to extend existing network modules with analog components and compose arbitrary artificial neural networks (ANNs) using the flexibility of the PYTORCH framework. Analog tiles can be conveniently configured to emulate a plethora of different analog hardware characteristics and their non-idealities, such as device-to-device and cycle-to-cycle variations, resistive device response curves, and weight and output noise. Additionally, the toolkit makes it possible to design custom unit cell configurations and to use advanced analog optimization algorithms such as Tiki-Taka. Moreover, the backward and update behavior can be set to “ideal"" to enable hardware-aware training features for chips that target inference acceleration only. To evaluate the inference accuracy of such chips over time, we provide statistical programming noise and drift models calibrated on phase-change memory hardware. Our new toolkit is fully GPU accelerated and can be used to conveniently estimate the impact of material properties and non-idealities of future analog technology on the accuracy for arbitrary ANNs.","",""
28,"M. Sarker, Chang Hwan Kim, Jeong-San Cho, Bum-Jae You","Development of a Network-based Real-Time Robot Control System over IEEE 1394: Using Open Source Software Platform",2006,"","","","",466,"2024-08-22 15:04:59","","10.1109/ICMECH.2006.252588","","",,,,,28,1.56,7,4,18,"Network-based distributed processing and hard real-time requirement significantly increase the complexity of a robot hardware and software system. This paper describes the open and modular approach to design and implement a real-time robot control system using open source software (OSS) which include a Linux-based real-time operating system (RTOS), Xenomai (formerly known as the fusion branch of real time application interface, RTAI/fusion), real-time IEEE 1394 device driver and other middleware components. The real-time performance of our system has been evaluated in a mobile robot control platform and we have compared the performance of our system with that of a commercial RTOS, RTLinux Pro, based system using the same set of hardware. From the comparison it is seen that our system is also capable of satisfying the similar hard-real time requirements with a greater flexibility in overall implementation. In this work, the high performance IEEE 1394 serial bus is used as the field-bus of our robot control system. Though IEEE 1394 (also known as FireWire) is widely used in consumer electronics or home video network we have successfully adopted this emerging technology in robot control and as a side effect of our research, we have seen that IEEE 1394 can be used as a better alternative to the old generation slower filed-bus like CAN bus","",""
56,"M. Sruthi, M. Abirami, Akhil Manikkoth, R. Gandhiraj, K. P. Soman","Low cost digital transceiver design for Software Defined Radio using RTL-SDR",2013,"","","","",761,"2024-08-22 15:04:59","","10.1109/IMAC4S.2013.6526525","","",,,,,56,5.09,11,5,11,"The field of wireless communication has become the hottest area and Software Defined Radio (SDR) is revolutionizing it. By bringing much functionality as software, SDR reduces the cost of hardware maintenance and up-gradation. Open source hardware such as USRP (Universal Software Radio Peripheral) and software called GNU Radio-Companion are commonly used to do experiments in SDR. Since the cost of USRP is high, a low cost set up is needed which is affordable by the student community. In this paper a low cost alternative to USRP is proposed using RTL-SDR (Realtek Software Defined Radio) which is only used for reception. For transmitting purpose, a mixer circuit can be used to map the baseband signal to the band that can be received by RTL-SDR on the other end on Linux / Windows platform. Initially, the experiment is done in simulation. After that, it is tested with low cost hardware such as mixer and RTL-SDR. The cost for total transceiver system can be less than USD 100 which is 10 times less than the existing one.","",""
20,"M. Stoeckli, D. Staab","Reproducible Matrix Deposition for MALDI MSI Based on Open-Source Software and Hardware",2015,"","","","",152,"2024-08-22 15:04:59","","10.1007/s13361-015-1099-9","","",,,,,20,2.22,10,2,9,"","",""
37,"M. Stoeckli, D. Staab, M. Wetzel, M. Brechbuehl","iMatrixSpray: a free and open source sample preparation device for mass spectrometric imaging.",2014,"","","","",332,"2024-08-22 15:04:59","","10.2533/chimia.2014.146","","",,,,,37,3.70,9,4,10,"A device was built for matrix deposition in mass spectrometric imaging. This spray-type instrument requires no user interaction other than providing the spray solution and selecting the pre-defined or custom-built method. Robustness was achieved by utilizing a delta-robotics design in combination with a simple liquid system. All the information describing the systems is provided as open source and hardware and the design is therefore suitable for wide distribution and adaption by the scientific community.","",""
434,"M. Stoyanova, Y. Nikoloudakis, S. Panagiotakis, E. Pallis, E. Markakis","A Survey on the Internet of Things (IoT) Forensics: Challenges, Approaches, and Open Issues",2020,"","","","",375,"2024-08-22 15:04:59","","10.1109/COMST.2019.2962586","","",,,,,434,108.50,87,5,4,"Today is the era of the Internet of Things (IoT). The recent advances in hardware and information technology have accelerated the deployment of billions of interconnected, smart and adaptive devices in critical infrastructures like health, transportation, environmental control, and home automation. Transferring data over a network without requiring any kind of human-to-computer or human-to-human interaction, brings reliability and convenience to consumers, but also opens a new world of opportunity for intruders, and introduces a whole set of unique and complicated questions to the field of Digital Forensics. Although IoT data could be a rich source of evidence, forensics professionals cope with diverse problems, starting from the huge variety of IoT devices and non-standard formats, to the multi-tenant cloud infrastructure and the resulting multi-jurisdictional litigations. A further challenge is the end-to-end encryption which represents a trade-off between users’ right to privacy and the success of the forensics investigation. Due to its volatile nature, digital evidence has to be acquired and analyzed using validated tools and techniques that ensure the maintenance of the Chain of Custody. Therefore, the purpose of this paper is to identify and discuss the main issues involved in the complex process of IoT-based investigations, particularly all legal, privacy and cloud security challenges. Furthermore, this work provides an overview of the past and current theoretical models in the digital forensics science. Special attention is paid to frameworks that aim to extract data in a privacy-preserving manner or secure the evidence integrity using decentralized blockchain-based solutions. In addition, the present paper addresses the ongoing Forensics-as-a-Service (FaaS) paradigm, as well as some promising cross-cutting data reduction and forensics intelligence techniques. Finally, several other research trends and open issues are presented, with emphasis on the need for proactive Forensics Readiness strategies and generally agreed-upon standards.","",""
27,"M. Taylor","INVITED: BaseJump STL: SystemVerilog Needs a Standard Template Library for Hardware Design",2018,"","","","",456,"2024-08-22 15:04:59","","10.1145/3195970.3199848","","",,,,,27,4.50,27,1,6,"We propose a Standard Template Library (STL) for synthesizeable SystemVerilog that sharply reduces the time required to design digital circuits. We overview the principles that underly the design of the open-source BaseJump STL, including light-weight latency-insensitive interfaces that yield fast microarchitectures and low bug density; thin handshaking rules; fast porting of hardened chip regions across nodes; pervasive parameterization and specialization, and static error checking. We suggest extensions to SystemVerilog that will make it a more functional design language, and discuss our validation, including with the DARPA CRAFT-sponsored 16nm TSMC Celerity SoC with 511 RISC-V cores and 385M transistors. 80% of the modules for the design were instantiated directly from BaseJump STL, reducing verification time, accelerating development, and showing the promise of the approach.","",""
130,"M. Vanhoef, Frank Piessens","Advanced Wi-Fi attacks using commodity hardware",2014,"","","","",469,"2024-08-22 15:04:59","","10.1145/2664243.2664260","","",,,,,130,13.00,65,2,10,"We show that low-layer attacks against Wi-Fi can be implemented using user-modifiable firmware. Hence cheap off-the-shelf Wi-Fi dongles can be used carry out advanced attacks. We demonstrate this by implementing five low-layer attacks using open source Atheros firmware. The first attack consists of unfair channel usage, giving the user a higher throughput while reducing that of others. The second attack defeats countermeasures designed to prevent unfair channel usage. The third attack performs continuous jamming, making the channel unusable for other devices. For the fourth attack we implemented a selective jammer, allowing one to jam specific frames already in the air. The fifth is a novel channel-based Man-in-the-Middle (MitM) attack, enabling reliable manipulation of encrypted traffic. These low-layer attacks facilitate novel attacks against higher-layer protocols. To demonstrate this we show how our MitM attack facilitates attacks against the Temporal Key Integrity Protocol (TKIP) when used as a group cipher. Since a substantial number of networks still use TKIP as their group cipher, this shows that weaknesses in TKIP have a higher impact than previously thought.","",""
52,"M. Vasilevski, F. Pêcheux, N. Beilleau, H. Aboushady, K. Einwich","Modeling and Refining Heterogeneous Systems With SystemC-AMS: Application to WSN",2008,"","","","",840,"2024-08-22 15:04:59","","10.1145/1403375.1403410","","",,,,,52,3.25,10,5,16,"The paper presents a system-level approach for the modeling and simulation of a paradigmatic wireless sensor network composed of two nodes using SystemC-AMS, an open-source C++ extension to the OSCI SystemC standard dedicated to the description of heterogeneous systems containing digital, analog, RF hardware IPs as well as embedded software. The paper is composed of three parts. The first part details the modeled WSN (physical sensor, sigma-delta ADC, ATMEGA128 8- bit microcontroller running the embedded application, QPSK-based 2.4 GHz RF transceiver), presents the corresponding implementation in SystemC-AMS, and gives an insight on how multi-frequency simulation is handled in SystemC-AMS. The second part shows how to introduce several RF designer specifications (noise figure, IIP3, ...) into models and how to express them in SystemC-AMS. The third part proves that the combination of C++ and RF baseband equivalent dramatically reduces simulation time while keeping excellent accuracy and code readability. The paper concludes on the possibilities offered by this approach in terms of validation and optimization of heteregeneous systems through open-source simulation.","",""
463,"M. Weiser","Source Code",1987,"","","","",997,"2024-08-22 15:04:59","","","","",,,,,463,12.51,463,1,37,"interfaces, formal proofs, manuals, and documentation all remain distant from what the program is really doing. Only source code is not artificially distancing-when it tells a lie (e.g., because of a compiler bug), no principled barrier prevents searching out the lie; only limitations of time and energy (and the source code ofthe compiler) do that. This is a crucial distinction between an abstract interface and source code. The correctness of a system for which we have complete source code is in principle completely knowable from information internal to the system. The correctness of the abstract interface as a description of what a computer is doing is not an internal fact about the computer but depends upon bridging the gap between two very different worlds. Whether the worlds bridged are English and embedded programs or algebraic axioms and embedded programs, the bridging occurs outside what can be known within the computer system. For instance, if all I know of a program is its formal specification, then I cannot know how the program will behave in the presence of bugs resulting from the surrounding environment. Why should the process of mechanical translation make source code more trustworthy than the process of human translation between the specification and code? Compilers and hardware can, after all, have bugs, rendering even source inaccurate. The reason is that mechanical translation is, at least in principle, fully open for inspection to any extent desired. Whether or not you are in the habit of checking the accuracy of your compiler, there is a difference between knowing that you can inspect what it is doing and being completely at its mercy. There is no way to be sure that a program, when it is running in the world, corresponds to either an Program proving will never be practical In May 1979 a paper entitled ""Social Processes and Proofs of Theorems and Programs"" appeared in the Communications of the ACM. The authors were Richard DeMillo, Richard Lipton, and Alan Perlis. Their thesis is that proving programs correct is impractical, not necessarily because it is too difficult, but because a mathematical proof can be trusted only when it has entered the body of knowledge of mathematicians. A proof must stand the test of time before any mathematician, even its author, will fully rely on it. Widespread program proving can never be trusted in the same way that results of mathematics are, say DeMillo, Lipton, and Perlis, because program proofs, applying as they do to a single program, are too mathematically uninteresting ever to enter the mathematical culture. Not just program proofs, but any mathematical proof must be interesting to be trustworthy. DeMillo, Lipton, and Perlis present several examples of important published mathematical theorems that later turned out to be incorrect. For instance, the four-color problem was falsely solved many times before a correct solution was found just a few years ago. Each false result had been published in a major mathematical journal, and so presumably each had been read by several mathematicians. Eventually each was found out, in part because such an important result was subject to intense discussion and amplification in the community of mathematicians. It would be a rare program proof that could excite such discussion; thus it would be unwise to depend on mathematics to solve the problem of understanding any particular program. November 1987 *It is outside the scope of this article to discuss whether or not a symbolic description could in theory fully represent reality. Since this article is about software engineering, it is enough to note that such a representation would be wildly impractical at the present time.","",""
42,"M. Yamamoto","Digital beacon receiver for ionospheric TEC measurement developed with GNU Radio",2008,"","","","",851,"2024-08-22 15:04:59","","10.1186/BF03353137","","",,,,,42,2.63,42,1,16,"","",""
29,"Manabu Tsukada, Takaharu Oi, Akihide Ito, Mai Hirata, H. Esaki","AutoC2X: Open-source software to realize V2X cooperative perception among autonomous vehicles",2020,"","","","",203,"2024-08-22 15:04:59","","10.1109/VTC2020-Fall49728.2020.9348525","","",,,,,29,7.25,6,5,4,"The realization of vehicle-to-everything (V2X) communication enhances the capabilities of autonomous vehicles in terms of safety efficiency and comfort. In particular, sensor data sharing, known as cooperative perception, is a crucial technique to accommodate vulnerable road users in a cooperative intelligent transport system (ITS). In this regard, open-source software plays a significant role in prototyping, validation, and deployment. Specifically, in the developer community, Autoware is a popular open-source software for self-driving vehicles, and OpenC2X is an open-source experimental and prototyping platform for cooperative ITS. This paper reports on a system named AutoC2X to enable cooperative perception by using OpenC2X for Autoware-based autonomous vehicles. The developed system is evaluated by conducting field experiments involving real hardware. The results demonstrate that AutoC2X can deliver the cooperative perception message within 100 ms in the worst case.","",""
41,"Mani Singh, Gareema Sanaman","Open Source Integrated Library Management Systems: Comparative Analysis of Koha and NewGenLib",2012,"","","","",376,"2024-08-22 15:04:59","","10.1108/02640471211282127","","",,,,,41,3.42,21,2,12,"Purpose – This paper aims to study the open source integrated library management systems, i.e. Koha and NewGenLib, to inform librarians about what considerations to make when choosing an open source integrated library management system (ILMS) for their library.Design/methodology/approach – The paper provides a detailed comparative analysis of both types of software, i.e. Koha (3.2.4) and NewGenLib (3.0), which are undertaken in the study. The methodology used for the study is “Evaluation method” which is followed with the help of structured evaluation checklist prepared after the thorough study of reference tools, reference statistical data available and related literature. Both types of software are evaluated and compared qualitatively and quantitatively.Findings – Both types of software are web‐enabled and support library automation. Koha has more specific characteristics of open source ILMS. Koha needs to upgrade, modify and improve its features. Koha requires very little hardware and is easy to instal...","",""
12,"Manuel Moritz, T. Redlich, J. Wulfsberg","Best Practices and Pitfalls in Open Source Hardware",2018,"","","","",51,"2024-08-22 15:04:59","","10.1007/978-3-319-73450-7_20","","",,,,,12,2.00,4,3,6,"","",""
20,"Manuel Moritz, T. Redlich, P. Grames, J. Wulfsberg","Value creation in open-source hardware communities: Case study of Open Source Ecology",2016,"","","","",71,"2024-08-22 15:04:59","","10.1109/PICMET.2016.7806517","","",,,,,20,2.50,5,4,8,"Technical progress in production technology, the advancement and spread of information and communication technologies (ICT) as well as the spill-over of the highly efficient and innovative open source principles to the world of physical products represent a new set of tools and concepts to address the challenges of sustainable economic development. Correspondingly, we can observe (new) modes of value creation that put into question traditional economic strategies and assumptions by stressing collaboration instead of competition and knowledge sharing instead of black box engineering. Open Source Ecology (OSE) is a famous example of a nonprofit organization which fosters worldwide participation and collaboration to jointly develop open source hardware for operation in both developing and industrialized countries. Based on the concepts open source appropriate technology (OSAT), the community aims at the free access to the knowledge and knowhow of low-cost and easy-to-build products to empower people to build and run a civilization. This case study describes and analyzes the value creation processes of OSE and derives new opportunities for business models based on openness.","",""
16,"Manuel Moritz, T. Redlich, Süleyman Günyar, L. Winter, J. Wulfsberg","On the Economic Value of Open Source Hardware – Case Study of an Open Source Magnetic Resonance Imaging Scanner",2019,"","","","",29,"2024-08-22 15:04:59","","10.5334/JOH.14","","",,,,,16,3.20,3,5,5,"Increasing maturation and dissemination of easy-to-use and affordable means of digital production (e.g. 3D printing), access to these in makerspaces and FabLabs as well as powerful tools and online platforms for virtual and collaborative product design enabled the highly efficient and innovative mode of open source to spill over from software to hardware. Open source technology has enormous potential to spur innovation and enhance technological literacy and thus contribute to socioeconomic and ecological sustainability. Like in software, open source hardware (OSH) projects and online communities have evolved in a broad range of technologies and applications. In these communities, people from all over the world with diverse backgrounds (students, researchers, consumers, users etc.) gather online to jointly develop, revise, improve and freely share hardware designs and documentation. Additionally, people may build, adapt, use and sell physical artefacts based on these designs in accordance with the notion of open source. The (potential) economic impact and value of open source hardware is hard to quantify as contributors usually do not get paid and users do not necessarily buy products from vendors. Nonetheless, value is created as in the case of Linux or Wikipedia. We applied established valuation methods for open source hardware to quantify cost savings and as a result the value of an open source magnetic resonance imaging device (MRI) currently under development by the Open Source Imaging Initiative (OSI2). Depending on the scenario and the valuation method, we found that savings for healthcare systems from US$1.8 million up to US$222 million per year are possible in the near future making the case for public funding and private investment in open source technology development.","",""
60,"Manuel Wüthrich, F. Widmaier, F. Grimminger, J. Akpo, S. Joshi, Vaibhav Agrawal, Bilal Hammoud, M. Khadiv, Miroslav Bogdanovic, V. Berenz, Julian Viereck, M. Naveau, L. Righetti, B. Scholkopf, Stefan Bauer","TriFinger: An Open-Source Robot for Learning Dexterity",2020,"","","","",188,"2024-08-22 15:04:59","","","","",,,,,60,15.00,6,15,4,"Dexterous object manipulation remains an open problem in robotics, despite the rapid progress in machine learning during the past decade. We argue that a hindrance is the high cost of experimentation on real systems, in terms of both time and money. We address this problem by proposing an open-source robotic platform which can safely operate without human supervision. The hardware is inexpensive (about \SI{5000}[\$]{}) yet highly dynamic, robust, and capable of complex interaction with external objects. The software operates at 1-kilohertz and performs safety checks to prevent the hardware from breaking. The easy-to-use front-end (in C++ and Python) is suitable for real-time control as well as deep reinforcement learning. In addition, the software framework is largely robot-agnostic and can hence be used independently of the hardware proposed herein. Finally, we illustrate the potential of the proposed platform through a number of experiments, including real-time optimal control, deep reinforcement learning from scratch, throwing, and writing.","",""
21,"Marco Forconesi, G. Sutter, S. López-Buedo, J. D. Vergara, J. Aracil","Bridging the gap between hardware and software open source network developments",2014,"","","","",166,"2024-08-22 15:04:59","","10.1109/MNET.2014.6915434","","",,,,,21,2.10,4,5,10,"The rise of network speeds to tens of gigabits per second poses a challenge to develop packet processing applications that can cope with such bit rates. Therefore, the need for a suitable open source system that can be used as a prototype platform to test new network functionality while ensuring line-rate processing, accurate timestamping, and reduced power consumption has become evident. All these requirements cannot be achieved by using software-only solutions, but rather with hardware-based platforms such as NetFPGA. The main obstacle when using this type of open source FPGA-based solution is the cost of development, in both time and hardware development skills required. The spread of new circuit synthesis tools using high-level languages opens the door for the development of hardware-based networking applications with reasonable development effort, compared to the use of traditional hardware description languages. In this article, we describe how existing open source hardware-based platforms for networking applications will be fueled by the change in the programming model of FPGAs provided by modern high-level synthesis tools. For this, we implemented a network flow monitor using high-level languages and compared the effort spent with respect to a traditional hardware development cycle. Preliminary results are very promising, given that development time is reduced from months to weeks.","",""
14,"Mariia Krainiuk, M. Goli, V. Pascuzzi","oneAPI Open-Source Math Library Interface",2021,"","","","",168,"2024-08-22 15:04:59","","10.1109/P3HPC54578.2021.00006","","",,,,,14,4.67,5,3,3,"To HPC and AI analytics engineers, math primitives such as basic linear algebra subprograms or random number generators are key functionality that have highly optimized implementations for different CPUs, GPUs, and other accelerators. However, developers must deal with different programming models and interfaces provided by various hardware vendors due to a lack of industry-standard interfaces for math primitives. This paper introduces the oneMKL open-source interfaces project, a SYCL-based math primitives library, as a viable approach for bridging the cross-platform performance portability gap for math primitives across various HPC architectures. By exploiting SYCL interoperability, this project enables integration of optimized vendor-dependent libraries to maximize code reusability without compromising the performance. The cross-platform performance portability of the project is carried out on two major HPC hardware platforms, including Intel CPU, NVIDIA GPU, and also an integrated Intel GPU. Our results show competitive performance with native optimized vendor-dependent libraries.","",""
56,"Mark A Hallen, Jeffrey W. Martin, Adegoke A. Ojewole, J. D. Jou, Anna U. Lowegard, Marcel S. Frenkel, P. Gainza, Hunter M. Nisonoff, Aditya Mukund, Siyu Wang, Graham T. Holt, David Zhou, Elizabeth Dowd, B. Donald","OSPREY 3.0: Open-Source Protein Redesign for You, with Powerful New Features",2018,"","","","",245,"2024-08-22 15:04:59","","10.1002/jcc.25522","","",,,,,56,9.33,6,14,6,"We present OSPREY 3.0, a new and greatly improved release of the osprey protein design software. osprey 3.0 features a convenient new Python interface, which greatly improves its ease of use. It is over two orders of magnitude faster than previous versions of osprey when running the same algorithms on the same hardware. Moreover, osprey 3.0 includes several new algorithms, which introduce substantial speedups as well as improved biophysical modeling. It also includes GPU support, which provides an additional speedup of over an order of magnitude. Like previous versions of osprey, osprey 3.0 offers a unique package of advantages over other design software, including provable design algorithms that account for continuous flexibility during design and model conformational entropy. Finally, we show here empirically that osprey 3.0 accurately predicts the effect of mutations on protein-protein binding. osprey 3.0 is available at http://www.cs.duke.edu/donaldlab/osprey.php as free and open-source software. We present the third major release of the OSPREY protein design software, along with comparisons to experimental data that confirm its ability to optimize protein mutants for desired functions. osprey 3.0 has significant efficiency, ease-of-use, and algorithmic improvements over previous versions, including GPU acceleration and a new Python interface.","",""
16,"Martin D. Brennan, Fahad F. Bokhari, D. Eddington","Open Design 3D-Printable Adjustable Micropipette that Meets the ISO Standard for Accuracy",2017,"","","","",527,"2024-08-22 15:04:59","","10.1101/109231","","",,,,,16,2.29,5,3,7,"Scientific communities are drawn to the open source model as an increasingly utilitarian method to produce and share work. Initially used as a means to develop freely available software, open source projects have been applied to hardware including scientific tools. Increasing convenience of 3D printing has fueled the proliferation of open labware projects aiming to develop and share designs for scientific tools that can be produced in-house as cheap alternatives to commercial products. We present our design of a micropipette that is assembled from 3D-printable parts and some hardware that works by actuating a disposable syringe to a user adjustable limit. Graduations on the syringe are used to accurately adjust the set point to the desired volume. Our open design printed micropipette is assessed in comparison to a commercial pipette and meets ISO 8655 standards.","",""
517,"Martin Kaltenbrunner, Ross Bencina","reacTIVision: a computer-vision framework for table-based tangible interaction",2007,"","","","",607,"2024-08-22 15:04:59","","10.1145/1226969.1226983","","",,,,,517,30.41,259,2,17,"This article provides an introductory overview to first-time users of the reacTIVision framework -- an open-source cross-platform computer-vision framework primarily designed for the construction of table-based tangible user interfaces. The central component of the framework is a standalone application for fast and robust tracking of fiducial markers in a real-time video stream. The framework also defines a transport protocol for efficient and reliable transmission of object states via a local or wide area network. In addition, the distribution includes a collection of client example projects for various programming environments that allow the rapid development of unique tangible user interfaces. This article also provides a discussion of key points relevant to the construction of the necessary table hardware and surveys some projects that have been based on this technology.","",""
0,"Martin Schoeberl","Open-Source Hardware Design",2022,"","","","",9,"2024-08-22 15:04:59","","10.2139/ssrn.4291384","","",,,,,0,0.00,0,1,2,"","",""
21,"María Angeles Rodríguez, L. Cuenca, Á. O. Bas","FIWARE Open Source Standard Platform in Smart Farming - A Review",2018,"","","","",264,"2024-08-22 15:04:59","","10.1007/978-3-319-99127-6_50","","",,,,,21,3.50,7,3,6,"","",""
216,"Mathieu Le Goc, Lawrence H. Kim, Ali Parsaei, Jean-Daniel Fekete, Pierre Dragicevic, Sean Follmer","Zooids: Building Blocks for Swarm User Interfaces",2016,"","","","",580,"2024-08-22 15:04:59","","10.1145/2984511.2984547","","",,,,,216,27.00,36,6,8,"This paper introduces swarm user interfaces, a new class of human-computer interfaces comprised of many autonomous robots that handle both display and interaction. We describe the design of Zooids, an open-source open-hardware platform for developing tabletop swarm interfaces. The platform consists of a collection of custom-designed wheeled micro robots each 2.6 cm in diameter, a radio base-station, a high-speed DLP structured light projector for optical tracking, and a software framework for application development and control. We illustrate the potential of tabletop swarm user interfaces through a set of application scenarios developed with Zooids, and discuss general design considerations unique to swarm user interfaces.","",""
49,"Matt Schmittle, Anna Lukina, L. Vacek, J. Das, C. V. Buskirk, Stephen A. Rees, J. Sztipanovits, R. Grosu, Vijay R. Kumar","OpenUAV: A UAV Testbed for the CPS and Robotics Community",2018,"","","","",708,"2024-08-22 15:04:59","","10.1109/ICCPS.2018.00021","","",,,,,49,8.17,5,9,6,"Multirotor Unmanned Aerial Vehicles (UAV) have grown in popularity for research and education, overcoming challenges associated with fixed wing and ground robots. Unfortunately, extensive physical testing can be expensive and time consuming because of short flight times due to battery constraints and safety precautions. Simulation tools offer a low barrier to entry and enable testing and validation before field trials. However, most of the well-known simulators today have a high barrier to entry due to the need for powerful computers and the time required for initial set up. In this paper, we present OpenUAV, an open source test bed for UAV education and research that overcomes these barriers. We leverage the Containers as a Service (CaaS) technology to enable students and researchers carry out simulations on the cloud. We have based our framework on open-source tools including ROS, Gazebo, Docker, PX4, and Ansible, we designed the simulation framework so that it has no special hardware requirements. Two use-cases are presented. First, we show how a UAV can navigate around obstacles, and second, we test a multi-UAV swarm formation algorithm. To our knowledge, this is the first open-source, cloud-enabled testbed for UAVs. The code is available on GitHub: https://github.com/Open-UAV.","",""
22,"Matteo Chiesi, M. Guermandi, Silvio Placati, E. F. Scarselli, R. Guerrieri","Creamino: A Cost-Effective, Open-Source EEG-Based BCI System",2019,"","","","",228,"2024-08-22 15:04:59","","10.1109/TBME.2018.2863198","","",,,,,22,4.40,4,5,5,"This paper presents an open source framework called Creamino. It consists of an Arduino-based cost-effective quick-setup EEG platform built with off-the-shelf components and a set of software modules that easily allow users to connect this system to Simulink or BCI-oriented tools (such as BCI2000 or OpenViBE) and set up a wide number of neuroscientific experiments. Creamino is capable of processing multiple EEG channels in real-time and operates under Windows, Linux, and Mac OS X in real-time on a standard PC. Its objective is to provide a system that can be readily fabricated and used for neurophysiological experiments and, at the same time, can serve as the basis for development of novel BCI platforms by accessing and modifying its open source hardware and software libraries. Schematics, gerber files, bill of materials, source code, software modules, demonstration videos, and instructions on how to use these modules are available free of charge for research and educational purposes online at https://github.com/ArcesUnibo/creamino. Application cases show how the system can be used for neuroscientific or BCI experiments. Thanks to its low production cost and its compatibility with open-source BCI tools, the system presented is particularly suitable for use in BCI research and educational applications.","",""
55,"Matthew Hicks, C. Sturton, Samuel T. King, Jonathan M. Smith","SPECS: A Lightweight Runtime Mechanism for Protecting Software from Security-Critical Processor Bugs",2015,"","","","",716,"2024-08-22 15:04:59","","10.1145/2694344.2694366","","",,,,,55,6.11,14,4,9,"Processor implementation errata remain a problem, and worse, a subset of these bugs are security-critical. We classified 7 years of errata from recent commercial processors to understand the magnitude and severity of this problem, and found that of 301 errata analyzed, 28 are security-critical. We propose the SECURITY-CRITICAL PROCESSOR ER- RATA CATCHING SYSTEM (SPECS) as a low-overhead solution to this problem. SPECS employs a dynamic verification strategy that is made lightweight by limiting protection to only security-critical processor state. As a proof-of- concept, we implement a hardware prototype of SPECS in an open source processor. Using this prototype, we evaluate SPECS against a set of 14 bugs inspired by the types of security-critical errata we discovered in the classification phase. The evaluation shows that SPECS is 86% effective as a defense when deployed using only ISA-level state; incurs less than 5% area and power overhead; and has no software run-time overhead.","",""
122,"Matthew Jacobsen, Dustin Richmond, Matthew Hogains, R. Kastner","RIFFA 2.1",2015,"","","","",633,"2024-08-22 15:04:59","","10.1145/2815631","","",,,,,122,13.56,31,4,9,"We present RIFFA 2.1, a reusable integration framework for Field-Programmable Gate Array (FPGA) accelerators. RIFFA provides communication and synchronization for FPGA accelerated applications using simple interfaces for hardware and software. Our goal is to expand the use of FPGAs as an acceleration platform by releasing, as open source, a framework that easily integrates software running on commodity CPUs with FPGA cores. RIFFA uses PCI Express (PCIe) links to connect FPGAs to a CPU’s system bus. RIFFA 2.1 supports FPGAs from Xilinx and Altera, Linux and Windows operating systems, and allows multiple FPGAs to connect to a single host PC system. It has software bindings for C/C++, Java, Python, and Matlab. Tests show that data transfers between hardware and software can reach 97% of the achievable PCIe link bandwidth.","",""
44,"Matthew Jacobsen, Ryan Kastner","RIFFA 2.0: A reusable integration framework for FPGA accelerators",2013,"","","","",802,"2024-08-22 15:04:59","","10.1109/FPL.2013.6645504","","",,,,,44,4.00,22,2,11,"We present RIFFA 2.0, a reusable integration framework for FPGA accelerators. RIFFA 2.0 provides communication and synchronization for FPGA accelerated applications using simple interfaces for hardware and software. Our goal is to expand the use of FPGAs as an acceleration platform by releasing, as open source, a framework that easily integrates software running on commodity CPUs with FPGA cores. RIFFA 2.0 uses PCIe to connect FPGAs to a CPU's system bus. RIFFA 2.0 extends the original RIFFA project by supporting more classes of Xilinx FPGAs, multiple FPGAs in a system, more PCIe link configurations, higher bandwidth, and Linux and Windows operating systems. This release also supports C/C++, Java, and Python bindings. Tests show that data transfers between hardware and software can saturate the PCIe link to achieve the highest bandwidth possible.","",""
66,"Matthew Jacobsen, Y. Freund, R. Kastner","RIFFA: A Reusable Integration Framework for FPGA Accelerators",2012,"","","","",766,"2024-08-22 15:04:59","","10.1109/FCCM.2012.44","","",,,,,66,5.50,22,3,12,"We present RIFFA, a reusable integration framework for FPGA accelerators. RIFFA provides communication and synchronization for FPGA accelerated software using a standard interface. Our goal is to expand the use of FPGAs as an acceleration platform by releasing, as open source, a no cost framework that easily integrates software on traditional CPUs with FPGA based IP cores, over PCIe, with minimal custom configuration. RIFFA requires no specialized hardware or fee licensed IP cores. It can be deployed on common Linux workstations with a PCIe bus and has been tested on two different Linux distributions using Xilinx FPGAs.","",""
258,"Matthew McCormick, Xiaoxiao Liu, L. Ibáñez, J. Jomier, Charles Marion","ITK: enabling reproducible research and open science",2014,"","","","",915,"2024-08-22 15:04:59","","10.3389/fninf.2014.00013","","",,,,,258,25.80,52,5,10,"Reproducibility verification is essential to the practice of the scientific method. Researchers report their findings, which are strengthened as other independent groups in the scientific community share similar outcomes. In the many scientific fields where software has become a fundamental tool for capturing and analyzing data, this requirement of reproducibility implies that reliable and comprehensive software platforms and tools should be made available to the scientific community. The tools will empower them and the public to verify, through practice, the reproducibility of observations that are reported in the scientific literature. Medical image analysis is one of the fields in which the use of computational resources, both software and hardware, are an essential platform for performing experimental work. In this arena, the introduction of the Insight Toolkit (ITK) in 1999 has transformed the field and facilitates its progress by accelerating the rate at which algorithmic implementations are developed, tested, disseminated and improved. By building on the efficiency and quality of open source methodologies, ITK has provided the medical image community with an effective platform on which to build a daily workflow that incorporates the true scientific practices of reproducibility verification. This article describes the multiple tools, methodologies, and practices that the ITK community has adopted, refined, and followed during the past decade, in order to become one of the research communities with the most modern reproducibility verification infrastructure. For example, 207 contributors have created over 2400 unit tests that provide over 84% code line test coverage. The Insight Journal, an open publication journal associated with the toolkit, has seen over 360,000 publication downloads. The median normalized closeness centrality, a measure of knowledge flow, resulting from the distributed peer code review system was high, 0.46.","",""
124,"Matthew O'Kelly, Hongrui Zheng, D. Karthik, Rahul Mangharam","F1TENTH: An Open-source Evaluation Environment for Continuous Control and Reinforcement Learning",2019,"","","","",194,"2024-08-22 15:04:59","","","","",,,,,124,24.80,31,4,5,"The deployment and evaluation of learning algorithms on autonomous vehicles (AV) is expensive, slow, and potentially unsafe. This paper details the F1TENTH autonomous racing platform, an open-source evaluation framework for training, testing, and evaluating autonomous systems. With 1/10th-scale low-cost hardware and multiple virtual environments, F1TENTH enables safe and rapid experimentation of AV algorithms even in laboratory research settings. We present three benchmark tasks and baselines in the setting of autonomous racing, demonstrating the (cid:13)exibility and features of our evaluation environment","",""
5,"Matthias Krebs","Manufacturing Expertise for the People: The Open‐Source Hardware Movement in Japan",2014,"","","","",97,"2024-08-22 15:04:59","","10.1111/1559-8918.01003","","",,,,,5,0.50,5,1,10,"Manufacturing itself is changing as open-source sentiment grows with the “maker” movement, especially in FabLabs around the world. “Makers” are open-source hardware enthusiasts who want anyone to be able to make almost anything. This ethnographic research, conducted in 2013, centers on the “makers” in FabLabs in Japan. The research addresses cultural coherence among actors – human and machine – in these FabLabs, and changing notions of expertise enabled by open-source, DIY manufacturing practices. Are modern machines like 3D printers changing manufacturing? Will they change the world?","",""
67,"Matthieu Lapeyre, Pierre Rouanet, Jonathan Grizou, S. N'Guyen, Fabien Depraetre, Alexandre Le Falher, Pierre-Yves Oudeyer","Poppy Project: Open-Source Fabrication of 3D Printed Humanoid Robot for Science, Education and Art",2014,"","","","",327,"2024-08-22 15:04:59","","","","",,,,,67,6.70,10,7,10,"Poppyisthefirstcompleteopen-source3Dprintedhumanoid platform. Robust and accessible, it allows scientists, students, geeks, en- gineers or artists to explore fast and easily the fabrication and program- ming of various robotic morphologies. Both hardware and software are open-source, and a web platform allows interdisciplinary contributions, sharing and collaborations.","",""
34,"Maurício O. Tsugawa, Andréa M. Matsunaga, J. Fortes","Cloud Computing Security: What Changes with Software-Defined Networking?",2014,"","","","",772,"2024-08-22 15:04:59","","10.1007/978-1-4614-9278-8_4","","",,,,,34,3.40,11,3,10,"","",""
144,"Max Heimel, Michael Saecker, H. Pirk, S. Manegold, V. Markl","Hardware-Oblivious Parallelism for In-Memory Column-Stores",2013,"","","","",506,"2024-08-22 15:04:59","","10.14778/2536360.2536370","","",,,,,144,13.09,29,5,11,"The multi-core architectures of today's computer systems make parallelism a necessity for performance critical applications. Writing such applications in a generic, hardware-oblivious manner is a challenging problem: Current database systems thus rely on labor-intensive and error-prone manual tuning to exploit the full potential of modern parallel hardware architectures like multi-core CPUs and graphics cards. We propose an alternative design for a parallel database engine, based on a single set of hardware-oblivious operators, which are compiled down to the actual hardware at runtime. This design reduces the development overhead for parallel database engines, while achieving competitive performance to hand-tuned systems.    We provide a proof-of-concept for this design by integrating operators written using the parallel programming framework OpenCL into the open-source database MonetDB. Following this approach, we achieve efficient, yet highly portable parallel code without the need for optimization by hand. We evaluated our implementation against MonetDB using TPC-H derived queries and observed a performance that rivals that of MonetDB's query execution on the CPU and surpasses it on the GPU. In addition, we show that the same set of operators runs nearly unchanged on a GPU, demonstrating the feasibility of our approach.","",""
23,"Max Langenkamp, Daniel N. Yue","How Open Source Machine Learning Software Shapes AI",2022,"","","","",135,"2024-08-22 15:04:59","","10.1145/3514094.3534167","","",,,,,23,11.50,12,2,2,"If we want a future where AI serves a plurality of interests, then we should pay attention to the factors that drive its success. While others have studied the importance of data, hardware, and models in directing the trajectory of AI, we argue that open source software is a neglected factor shaping AI as a discipline. We start with the observation that almost all AI research and applications are built on machine learning open source software (MLOSS). This paper presents three contributions. First, it quantifies the outsized impact of MLOSS by using Github contributions data. By contrasting the costs of MLOSS and its economic benefits, we find that the average dollar of MLOSS investment corresponds to at least \$100 of global economic value created, corresponding to \$30B of economic value created this year. Second, we leverage interviews with AI researchers and developers to develop a causal model of the effect of open sourcing on economic value. We argue that open sourcing creates value through three primary mechanisms: standardization of MLOSS tools, increased experimentation in AI research, and creation of communities. Finally, we consider the incentives for developing MLOSS and the broader implications of these effects. We intend this paper to be useful for technologists and academics who want to analyze and critique AI, and policymakers who want to better understand and regulate AI systems.","",""
59,"Max Pfeiffer, Tim Duente, Michael Rohs","Let your body move: a prototyping toolkit for wearable force feedback with electrical muscle stimulation",2016,"","","","",703,"2024-08-22 15:04:59","","10.1145/2935334.2935348","","",,,,,59,7.38,20,3,8,"Electrical muscle stimulation (EMS) is a promising wearable haptic output technology as it can be miniaturized considerably and delivers a wide range of haptic output. However, prototyping EMS applications is challenging. It requires detailed knowledge and skills about hardware, software, and physiological characteristics. To simplify prototyping with EMS in mobile and wearable situations we present the Let Your Body Move toolkit. It consists of (1) a hardware control module with Bluetooth communication that uses off-the-shelf EMS devices as signal generators, (2) a simple communications protocol to connect mobile devices, and (3) a set of control applications as starting points for EMS prototyping. We describe EMS-specific parameters, electrode placements on the skin, and user calibration. The toolkit was evaluated in a workshop with 10 researchers in haptics. The results show that the toolkit allows to quickly generate non-trivial prototypes. The hardware schematics and software components are available as open source software.","",""
54,"Mayuresh Desai, Arati S. Phadke","Internet of Things based vehicle monitoring system",2017,"","","","",700,"2024-08-22 15:04:59","","10.1109/WOCN.2017.8065840","","",,,,,54,7.71,27,2,7,"Advances in technologies and availability of economical open source hardware systems are setting a new trend in system designing. Use of technologies like Internet of Things (IoT) can ease the process of data collection and analysis. The main objective of the paper is to describe a system which can monitor or track the location and vehicle parameters of different test vehicles from a centralized place for research and development purposes and to store data of testing parameters of those vehicles on the server for further analysis and records. System design will be generalized for monitoring different parameters like Location, Vehicle speed, Engine compartment temperature, Fuel consumption and many more. Proposed system uses Open source controller and GPS/GSM/GPRS module for data transfer application.","",""
12,"Melisa Orta Martinez, Joseph Campion, Tara Gholami, Michal K. Rittikaidachar, Aaron C. Barron, A. Okamura","Open source, modular, customizable, 3-D printed kinesthetic haptic devices",2017,"","","","",300,"2024-08-22 15:04:59","","10.1109/WHC.2017.7989891","","",,,,,12,1.71,2,6,7,"Open Source Hardware allows users to share, customize, and improve designs, thus enabling technological advancement through communities of practice. We propose open source hardware for educational haptics that permits researchers, educators, and students to share designs arising from their different perspectives, with the potential to expand educational applications. In this paper we present a family of open source kinesthetic haptic devices that build upon the design of a previous educational haptic device, Hapkit 3.0. First, we discuss methods for Hapkit personalization and customization that can be achieved by K-12 students and educators. Next, we describe two kinesthetic haptic device designs that evolved from the original Hapkit 3.0. One uses two standard Hapkits with additional components to form a Pantograph mechanism, and the other uses customized Hapkit elements along with a novel kinematic design to form a serial mechanism. These designs are modular; after building two Hapkits, a user acquires a small number of additional parts to transform them into a two-degree-of-freedom device. The Pantograph mechanism was used in an undergraduate class to teach robotics and haptics to both engineering and nonengineering students. Open source designs for all devices as well as tutorials for customization are available at http://hapkit.stanford.edu.","",""
149,"Meltem Ozsoy, Caleb Donovick, Iakov Gorelik, N. Abu-Ghazaleh, D. Ponomarev","Malware-aware processors: A framework for efficient online malware detection",2015,"","","","",990,"2024-08-22 15:04:59","","10.1109/HPCA.2015.7056070","","",,,,,149,16.56,30,5,9,"Security exploits and ensuant malware pose an increasing challenge to computing systems as the variety and complexity of attacks continue to increase. In response, software-based malware detection tools have grown in complexity, thus making it computationally difficult to use them to protect systems in real-time. Therefore, software detectors are applied selectively and at a low frequency, creating opportunities for malware to remain undetected. In this paper, we propose Malware-Aware Processors (MAP) - processors augmented with an online hardware-based detector to serve as the first line of defense to differentiate malware from legitimate programs. The output of this detector helps the system prioritize how to apply more expensive software-based solutions. The always-on nature of MAP detector helps protect against intermittently operating malware. Our work improves on the state of the art in the following ways: (1) We define and explore the use of sub-semantic features for online detection of malware. (2) We explore hardware implementations and show that simple classifiers appropriate for such implementations can effectively classify malware. We also study different classifiers, develop implementation optimizations, and explore complexity to performance trade-offs. (3) We propose a two-level detection framework where the hardware classifier prioritizes the work of a more accurate but more expensive software defense mechanism. (4) We integrate the MAP implementation with an open-source x86-compatible core, synthesizing the resulting design to run on an FPGA.","",""
81,"Meltem Ozsoy, Khaled N. Khasawneh, Caleb Donovick, Iakov Gorelik, N. Abu-Ghazaleh, D. Ponomarev","Hardware-Based Malware Detection Using Low-Level Architectural Features",2016,"","","","",924,"2024-08-22 15:04:59","","10.1109/TC.2016.2540634","","",,,,,81,10.13,14,6,8,"Security exploits and ensuant malware pose an increasing challenge to computing systems as the variety and complexity of attacks continue to increase. In response, software-based malware detection tools have grown in complexity, thus making it computationally difficult to use them to protect systems in real-time. Therefore, software detectors are applied selectively and at a low frequency, creating opportunities for malware to remain undetected. In this paper, we propose Malware-Aware Processors (MAP) - processors augmented with a hardware-based online malware detector to serve as the first line of defense to differentiate malware from legitimate programs. The output of this detector helps the system prioritize how to apply more expensive software-based solutions. The always-on nature of MAP detector helps protect against intermittently operating malware. We explore the use of different features for classification and study both logistic regression and neural networks. We show that the detectors can achieve excellent performance, with little hardware overhead. We integrate the MAP implementation with an open-source x86-compatible core, synthesizing the resulting design to run on an FPGA.","",""
23,"Member Ieee Brian Paul, Member Ieee Sean Ahern, M. I. E. Wes Bethel, E. Brugger, Rich Cook, Jamison Daniel, Ken Lewis, Jens Owen, D. Southard","Chromium Renderserver: Scalable and Open Remote Rendering Infrastructure",2008,"","","","",718,"2024-08-22 15:04:59","","10.1109/TVCG.2007.70631","","",,,,,23,1.44,3,9,16,"Chromium Renderserver (CRRS) is a software infrastructure that provides the ability for one or more users to run and view image output from unmodified, interactive OpenGL and X11 applications on a remote parallel computational platform equipped with graphics hardware accelerators via industry-standard Layer-7 network protocols and client viewers. The new contributions of this work include a solution to the problem of synchronizing X11 and OpenGL command streams, remote delivery of parallel hardware-accelerated rendering, and a performance analysis of several different optimizations that are generally applicable to a variety of rendering architectures. CRRS is fully operational, open source software.","",""
111,"Michael Ahn, Henry Zhu, Kristian Hartikainen, Hugo Ponte, Abhishek Gupta, S. Levine, Vikash Kumar","ROBEL: Robotics Benchmarks for Learning with Low-Cost Robots",2019,"","","","",590,"2024-08-22 15:04:59","","","","",,,,,111,22.20,16,7,5,"ROBEL is an open-source platform of cost-effective robots designed for reinforcement learning in the real world. ROBEL introduces two robots, each aimed to accelerate reinforcement learning research in different task domains: D'Claw is a three-fingered hand robot that facilitates learning dexterous manipulation tasks, and D'Kitty is a four-legged robot that facilitates learning agile legged locomotion tasks. These low-cost, modular robots are easy to maintain and are robust enough to sustain on-hardware reinforcement learning from scratch with over 14000 training hours registered on them to date. To leverage this platform, we propose an extensible set of continuous control benchmark tasks for each robot. These tasks feature dense and sparse task objectives, and additionally introduce score metrics as hardware-safety. We provide benchmark scores on an initial set of tasks using a variety of learning-based methods. Furthermore, we show that these results can be replicated across copies of the robots located in different institutions. Code, documentation, design files, detailed assembly instructions, final policies, baseline details, task videos, and all supplementary materials required to reproduce the results are available at www.roboticsbenchmarks.org.","",""
51,"Michael Attig, J. Lockwood","SIFT: snort intrusion filter for TCP",2005,"","","","",857,"2024-08-22 15:04:59","","10.1109/CONECT.2005.33","","",,,,,51,2.68,26,2,19,"Intrusion rule processing in reconfigurable hardware enables intrusion detection and prevention services to run at multiGigabit/second rates. High-level intrusion rules mapped directly into hardware separate malicious content from benign content in network traffic. Hardware parallelism allows intrusion systems to scale to support fast network links, such as OC-192 and 10 Gbps Ethernet. In this paper, a snort intrusion filter for TCP (SIFT) is presented that operates as a preprocessor to prevent benign traffic from being inspected by an intrusion monitor running Snort. Snort is a popular open-source rule-processing intrusion system. SIFT selectively forwards IP packets that contain questionable headers or defined signatures to a PC where complete rule processing is performed. SIFT alleviates the need for most network traffic from being inspected by software. Statistics, like how many packets match rules, are used to optimize rule processing systems. SIFT has been implemented and tested in FPGA hardware and used to process Internet traffic from a campus Internet backbone with live data.","",""
35,"Michael Bilzor, Ted Huffmire, C. Irvine, T. Levin","Evaluating security requirements in a general-purpose processor by combining assertion checkers with code coverage",2012,"","","","",831,"2024-08-22 15:04:59","","10.1109/HST.2012.6224318","","",,,,,35,2.92,9,4,12,"The problem of malicious inclusions in hardware is an emerging threat, and detecting them is a difficult challenge. In this research, we enhance an existing method for creating assertion-based dynamic checkers, and demonstrate how behavioral security requirements can be derived from a processor's architectural specification, then converted into security checkers that are part of the processor's design. The novel contributions of this research are: - We demonstrate the method using a set of assertions, derived from the architectural specification, on a full-scale open-source general-purpose processor design, called OpenRISC. Previous work used only a single assertion on a toy processor design. - We demonstrate the use of our checker-generator tool, called psl2hdl, which was created for this research. - We illustrate how the method can be used in concert with code coverage techniques, to either detect malicious inclusions or greatly narrow the search for malicious inclusions that use rare-event triggers.","",""
10,"Michael C. Yip, Jonas Forsslund","Spurring Innovation in Spatial Haptics: How Open-Source Hardware Can Turn Creativity Loose",2017,"","","","",69,"2024-08-22 15:04:59","","10.1109/MRA.2016.2646748","","",,,,,10,1.43,5,2,7,"This article discusses an open-hardware robotics kit approach for designing spatial haptic interfaces. Our development of an open-source haptic device kit called WoodenHaptics, for which blueprints have been made available online for free download, enables interaction designers with little electromechanical experience to modify, manufacture, and assemble fully working haptic devices. This article addresses the processes of open-sourcing spatial haptic devices by covering the key mechanical and electrical principles needed for high-fidelity haptic rendering, the mathematical foundations for spatial haptics, the challenges to open-sourcing software and hardware and teaching it to different communities, and the history of the WoodenHaptics project itself.","",""
74,"Michael D. M. Dryden, R. Fobel, C. Fobel, A. R. Wheeler","Upon the Shoulders of Giants: Open-Source Hardware and Software in Analytical Chemistry.",2017,"","","","",43,"2024-08-22 15:04:59","","10.1021/acs.analchem.7b00485","","",,,,,74,10.57,19,4,7,"Isaac Newton famously observed that ""if I have seen further it is by standing on the shoulders of giants."" We propose that this sentiment is a powerful motivation for the ""open-source"" movement in scientific research, in which creators provide everything needed to replicate a given project online, as well as providing explicit permission for users to use, improve, and share it with others. Here, we write to introduce analytical chemists who are new to the open-source movement to best practices and concepts in this area and to survey the state of open-source research in analytical chemistry. We conclude by considering two examples of open-source projects from our own research group, with the hope that a description of the process, motivations, and results will provide a convincing argument about the benefits that this movement brings to both creators and users.","",""
247,"Michael Frantzen, Michael Shuey","StackGhost: Hardware Facilitated Stack Protection",2001,"","","","",640,"2024-08-22 15:04:59","","","","",,,,,247,10.74,124,2,23,"Conventional Security have relied on overwriting the saved return pointer on the stack to hijack the path of execution. Under Sun Microsystem's Sparc processor architecture, we were able to implement a kernel modification to transparently and automatically guard application's return pointers.    Our implementation called Stack Ghost Open-BSD 2.8 acts as a ghost in the machine. Stack-Ghost advances exploit prevention in that it protects every application run on the system without their knowledge nor does it require their source or binary modification.    We will document several of the methods devised to preserve the sanctity of the system and will explore the performance ramifications of Stack Ghost.","",""
36,"Michael McKeown, Alexey Lavrov, Mohammad Shahrad, Paul J. Jackson, Yaosheng Fu, Jonathan Balkind, Tri M. Nguyen, Katie Lim, Yanqi Zhou, D. Wentzlaff","Power and Energy Characterization of an Open Source 25-Core Manycore Processor",2018,"","","","",883,"2024-08-22 15:04:59","","10.1109/HPCA.2018.00070","","",,,,,36,6.00,4,10,6,"The end of Dennard’s scaling and the looming power wall have made power and energy primary design goals for modern processors. Further, new applications such as cloud computing and Internet of Things (IoT) continue to necessitate increased performance and energy efficiency. Manycore processors show potential in addressing some of these issues. However, there is little detailed power and energy data on manycore processors. In this work, we carefully study detailed power and energy characteristics of Piton, a 25-core modern open source academic processor, including voltage versus frequency scaling, energy per instruction (EPI), memory system energy, network-on-chip (NoC) energy, thermal characteristics, and application performance and power consumption. This is the first detailed power and energy characterization of an open source manycore design implemented in silicon. The open source nature of the processor provides increased value, enabling detailed characterization verified against simulation and the ability to correlate results with the design and register transfer level (RTL) model. Additionally, this enables other researchers to utilize this work to build new power models, devise new research directions, and perform accurate power and energy research using the open source processor. The characterization data reveals a number of interesting insights, including that operand values have a large impact on EPI, recomputing data can be more energy efficient than loading it from memory, on-chip data transmission (NoC) energy is low, and insights on energy efficient multithreaded core design. All data collected and the hardware infrastructure used is open source and available for download at http://www.openpiton.org.","",""
37,"Michael R. Behrens, Haley C Fuller, Emily R. Swist, Jingwen Wu, Md. Mydul Islam, Zhicheng Long, Warren C. Ruder, R. Steward","Open-source, 3D-printed Peristaltic Pumps for Small Volume Point-of-Care Liquid Handling",2020,"","","","",193,"2024-08-22 15:04:59","","10.1038/s41598-020-58246-6","","",,,,,37,9.25,5,8,4,"","",""
37,"Michael Rubenstein, Bo Cimino, R. Nagpal, Justin Werfel","AERobot: An affordable one-robot-per-student system for early robotics education",2015,"","","","",747,"2024-08-22 15:04:59","","10.1109/ICRA.2015.7140056","","",,,,,37,4.11,9,4,9,"There is a widely recognized need for improved STEM education and increased technological literacy. Robots represent a promising educational tool with potentially large impact, due to their broad appeal and wide relevance; however, many existing educational robot platforms have cost as a barrier to widespread use. Here we present AERobot, a simple low-cost robot that can be easily used for introductory programming and robotics teaching, starting from a primary or middle school level. The hardware is open-source and can be built for ~$10 per robot, making it possible for each student to have (and keep) their own robot, while still encompassing a rich sensor suite enabling a variety of activities. A free, open-source graphical programming environment allows students without previous programming experience to command the robot. We report on the results of three sessions of a one-week pilot course held in the summer of 2014 by STEM summer camp i2 Camp.","",""
12,"Michael Tempelmeier, F. D. Santis, G. Sigl, J. Kaps","The CAESAR-API in the real world — Towards a fair evaluation of hardware CAESAR candidates",2018,"","","","",927,"2024-08-22 15:04:59","","10.1109/HST.2018.8383893","","",,,,,12,2.00,3,4,6,"In 2013 the Competition for Authenticated Encryption: Security, Applicability, and Robustness (CAESAR) was started. It aims at determining a portfolio of ciphers for authenticated encryption that has advantages over AES-GCM in terms of performance, security, and ease of implementation. This competition, for the first time, provides a standardized hardware API, which allows a fair comparison of hardware implementations. However, the community still lacks a common platform to automatically test hardware implementations, confirm implementation claims, and benchmark performance figures on real hardware in terms of runtime, area, power and energy consumption. In this work, we present a common platform using the CAESAR-API in a Xilinx Zynq-7000 System on Chip (SoC) with ARM processors and an AXI interface. This reflects a typical real world usage scenario for hardware-accelerators and thus extends the work for a fair comparison of hardware implementations in three dimensions: first the API is evaluated on a real SoC, which shows, e.g. the performance of the API. Second, it provides a hardware platform to test the proposed implementations of the candidates easily. This can be used by future designers, as we will provide it as open source hardware. Finally, we ran all published hardware implementations of the current 3rd-round candidates during which we identified several implementation weaknesses, e.g. presumably unintended latches in the design, hence emphasizing the importance of testing hardware proposals on real hardware.","",""
48,"Michel A. Kinsy, Michael Pellauer, S. Devadas","Heracles: a tool for fast RTL-based design space exploration of multicore processors",2013,"","","","",788,"2024-08-22 15:04:59","","10.1145/2435264.2435287","","",,,,,48,4.36,16,3,11,"This paper presents Heracles, an open-source, functional, parameterized, synthesizable multicore system toolkit. Such a multi/many-core design platform is a powerful and versatile research and teaching tool for architectural exploration and hardware-software co-design. The Heracles toolkit comprises the soft hardware (HDL) modules, application compiler, and graphical user interface. It is designed with a high degree of modularity to support fast exploration of future multicore processors of dierent topologies, routing schemes, processing elements (cores), and memory system organizations. It is a component-based framework with parameterized interfaces and strong emphasis on module reusability. The compiler toolchain is used to map C or C++ based applications onto the processing units. The GUI allows the user to quickly congure and launch a system instance for easy factorial development and evaluation. Hardware modules are implemented in synthesizable Verilog and are FPGA platform independent. The Heracles tool is freely available under the open-source MIT license at: http://projects.csail.mit.edu/heracles.","",""
21,"Michele Polese, Francesco Restuccia, A. Gosain, J. Jornet, S. Bhardwaj, V. Ariyarathna, S. Mandal, Kai Zheng, Aditya Dhananjay, M. Mezzavilla, Jim Buckwalter, M. Rodwell, Xin Wang, M. Zorzi, A. Madanayake, T. Melodia","MillimeTera: Toward A Large-Scale Open-Source mmWave and Terahertz Experimental Testbed",2019,"","","","",233,"2024-08-22 15:04:59","","10.1145/3349624.3356764","","",,,,,21,4.20,2,16,5,"The promise of widespread 5th generation (5G) and beyond wireless systems can only be fulfilled through extensive experimental campaigns aimed at validating the large body of theoretical findings on millimeter wave (mmWave) and Terahertz (THz) frequencies. However, experimental research efforts in this field are often stymied by the lack of open hardware, open-source software, and affordable testbeds accessible by the research community at large, who is now forced to perform simulation-based research or - if at all possible - small-scale, ad hoc experiments. After discussing existing research challenges in mmWave and THz testbeds, in this paper we propose MillimeTera, a vision for a new gen- eration of disruptive experimental platforms that will radically transform the status quo in mmWave and THz research. We next discuss our preliminary hardware and software efforts, and finally provide a roadmap of our main design and development goals in the years to come.","",""
40,"Michelle Collins, J. Hasler, Suma George","An Open-Source Tool Set Enabling Analog-Digital-Software Co-Design",2016,"","","","",295,"2024-08-22 15:04:59","","10.3390/JLPEA6010003","","",,,,,40,5.00,13,3,8,"This paper presents an analog-digital hardware-software co-design environment for simulating and programming reconfigurable systems. The tool simulates, designs, as well as enables experimental measurements after compiling to configurable systems in the same integrated design tool framework. High level software in Scilab/Xcos (open-source programs similar to MATLAB/Simulink) that converts the high-level block description by the user to blif format (sci2blif), which acts as an input to the modified VPR tool, including the code v p r 2 s w c s , encoding the specific platform through specific architecture files, resulting in a targetable switch list on the resulting configurable analog–digital system. The resulting tool uses an analog and mixed-signal library of components, enabling users and future researchers access to the basic analog operations/computations that are possible.","",""
253,"Mihai Pop, A. Phillippy, A. Delcher, S. Salzberg","Comparative genome assembly",2004,"","","","",739,"2024-08-22 15:04:59","","10.1093/BIB/5.3.237","","",,,,,253,12.65,63,4,20,"One of the most complex and computationally intensive tasks of genome sequence analysis is genome assembly. Even today, few centres have the resources, in both software and hardware, to assemble a genome from the thousands or millions of individual sequences generated in a whole-genome shotgun sequencing project. With the rapid growth in the number of sequenced genomes has come an increase in the number of organisms for which two or more closely related species have been sequenced. This has created the possibility of building a comparative genome assembly algorithm, which can assemble a newly sequenced genome by mapping it onto a reference genome. We describe here a novel algorithm for comparative genome assembly that can accurately assemble a typical bacterial genome in less than four minutes on a standard desktop computer. The software is available as part of the open-source AMOS project.","",""
12,"Mike Davis, William E. O'Donovan, John Fritz, C. Childress","Linux and Open Source in the academic enterprise",2000,"","","","",474,"2024-08-22 15:04:59","","10.1145/354908.354923","","",,,,,12,0.50,3,4,24,"Open Source Software (OSS) has made great strides toward mainstream acceptance over the past two years. However, many IT managers, both in business and academia, are still cautious about OSS. Is it reliable? Is there support? Will it last? Linux has further complicated the issue not only because its operating system is OSS, but because it runs on inexpensive commodity hardware. Often IT managers are hesitant to move from long trusted proprietary hardware and software and trust major projects to OSS and commodity hardware. Past SIGUCCS presentations by Virginia Commonwealth University have detailed our use of standards based email and directory services to replace legacy systems. That email migration put us on a path toward the implementation of a variety of Open Source Software and commodity hardware solutions. In 1997, the primary Open Source Software in use on our campus was Perl. In the past three years, we have implemented OSS solutions for email, webserving, webmail, software development, directory services, and database development. While implementing OSS we have also begun to implement commodity hardware solutions running the Linux Operating System in those areas where it provides benefits. While Linux webservers have become the norm, we have brought other Linux based machines online for directory services, webmail, and research. Recently, we investigated, benchmarked and purchased a Beowulf Linux cluster to significantly expand our ability to provide resources for our computationally intensive research. Open Source Software and the Linux operating system provide two very important tools to allow universities to leverage skilled and trained staffs to meet user needs and expectations in a highly cost effective manner without sacrificing quality of service. This paper will examine VCU’s transition from proprietary hardware and software solutions to OSS and commodity hardware. It will focus on selection criteria, testing methods, implementation, the evaluation process and the ""selling"" of OSS and commodity hardware to IT managers.","",""
52,"Miroslav Knezevic, Kazuyuki Kobayashi, Jun Ikegami, Shin'ichiro Matsuo, Akashi Satoh, Ünal Koçabas, Junfeng Fan, T. Katashita, T. Sugawara, K. Sakiyama, I. Verbauwhede, K. Ohta, N. Homma, T. Aoki","Fair and Consistent Hardware Evaluation of Fourteen Round Two SHA-3 Candidates",2012,"","","","",555,"2024-08-22 15:04:59","","10.1109/TVLSI.2011.2128353","","",,,,,52,4.33,5,14,12,"The first contribution of our paper is that we propose a platform, a design strategy, and evaluation criteria for a fair and consistent hardware evaluation of the second-round SHA-3 candidates. Using a SASEBO-GII field-programmable gate array (FPGA) board as a common platform, combined with well defined hardware and software interfaces, we compare all 256-bit version candidates with respect to area, throughput, latency, power, and energy consumption. Our approach defines a standard testing harness for SHA-3 candidates, including the interface specification for the SHA-3 module on our testing platform. The second contribution is that we provide both FPGA and 90-nm CMOS application-specific integrated circuit (ASIC) synthesis results and thereby are able to compare the results. Our third contribution is that we release the source code of all the candidates and by using a common, fixed, publicly available platform, our claimed results become reproducible and open for a public verification.","",""
233,"Mojtaba Eskandari, Z. H. Janjua, M. Vecchio, Fabio Antonelli","Passban IDS: An Intelligent Anomaly-Based Intrusion Detection System for IoT Edge Devices",2020,"","","","",939,"2024-08-22 15:04:59","","10.1109/JIOT.2020.2970501","","",,,,,233,58.25,58,4,4,"Cyber-threat protection is today’s one of the most challenging research branches of information technology, while the exponentially increasing number of tiny, connected devices able to push personal data to the Internet is doing nothing but exacerbating the battle between the involved parties. Thus, this protection becomes crucial with a typical Internet-of-Things (IoT) setup, as it usually involves several IoT-based data sources interacting with the physical world within various application domains, such as agriculture, health care, home automation, critical industrial processes, etc. Unfortunately, contemporary IoT devices often offer very limited security features, laying themselves open to always new and more sophisticated attacks and also inhibiting the expected global adoption of IoT technologies, not to mention millions of IoT devices already deployed without any hardware security support. In this context, it is crucial to develop tools able to detect such cyber threats. In this article, we present Passban, an intelligent intrusion detection system (IDS) able to protect the IoT devices that are directly connected to it. The peculiarity of the proposed solution is that it can be deployed directly on very cheap IoT gateways (e.g., single-board PCs currently costing few tens of U.S. dollars), hence taking full advantage of the edge computing paradigm to detect cyber threats as close as possible to the corresponding data sources. We will demonstrate that Passban is able to detect various types of malicious traffic, including Port Scanning, HTTP and SSH Brute Force, and SYN Flood attacks with very low false positive rates and satisfactory accuracies.","",""
111,"Mubariz Zaffar, Shoaib Ehsan, Michael Milford, D. Flynn, K. Mcdonald-Maier","VPR-Bench: An Open-Source Visual Place Recognition Evaluation Framework with Quantifiable Viewpoint and Appearance Change",2020,"","","","",185,"2024-08-22 15:04:59","","10.1007/s11263-021-01469-5","","",,,,,111,27.75,22,5,4,"","",""
26,"N S A Pereira","Measuring the RC time constant with Arduino",2016,"","","","",762,"2024-08-22 15:04:59","","10.1088/0031-9120/51/6/065007","","",,,,,26,3.25,26,1,8,"In this work we use the Arduino UNO R3 open source hardware platform to assemble an experimental apparatus for the measurement of the time constant of an RC circuit. With adequate programming, the Arduino is used as a signal generator, a data acquisition system and a basic signal visualisation tool. Theoretical calculations are compared with direct observations from an analogue oscilloscope. Data processing and curve fitting is performed on a spreadsheet. The results obtained for the six RC test circuits are within the expected interval of values defined by the tolerance of the components. The hardware and software prove to be adequate to the proposed measurements and therefore adaptable to a laboratorial teaching and learning context.","",""
88,"N. Bailey, T. Ingebrigtsen, J. S. Hansen, A. A. Veldhorst, L. Bøhling, C. Lemarchand, A. Olsen, A. Bacher, Lorenzo Costigliola, Ulf R. Pedersen, H. Larsen, J. Dyre, T. Schrøder","RUMD: A general purpose molecular dynamics package optimized to utilize GPU hardware down to a few thousand particles",2015,"","","","",470,"2024-08-22 15:04:59","","10.21468/SciPostPhys.3.6.038","","",,,,,88,9.78,9,13,9,"RUMD is a general purpose, high-performance molecular dynamics (MD) simulation package running on graphical processing units (GPU's). RUMD addresses the challenge of utilizing the many-core nature of modern GPU hardware when simulating small to medium system sizes (roughly from a few thousand up to hundred thousand particles). It has a performance that is comparable to other GPU-MD codes at large system sizes and substantially better at smaller sizes.RUMD is open-source and consists of a library written in C++ and the CUDA extension to C, an easy-to-use Python interface, and a set of tools for set-up and post-simulation data analysis. The paper describes RUMD's main features, optimizations and performance benchmarks.","",""
85,"N. Bui, J. Widmer","OWL: a reliable online watcher for LTE control channel measurements",2016,"","","","",666,"2024-08-22 15:04:59","","10.1145/2980055.2980057","","",,,,,85,10.63,43,2,8,"Reliable network measurements are a fundamental component of networking research as they enable network analysis, system debugging, performance evaluation and optimization. In particular, decoding the LTE control channel would give access to the full base station traffic at a 1 ms granularity, thus allowing for traffic profiling and accurate measurements. Although a few open-source implementations of LTE are available, they do not provide tools to reliably decoding the LTE control channel and, thus, accessing the scheduling information. In this paper, we present OWL, an Online Watcher for LTE that is able to decode all the resource blocks in more than 99% of the system frames, significantly outperforming existing non-commercial prior decoders. Compared to previous attempts, OWL grounds the decoding procedure on information obtained from the LTE random access mechanism. This makes it possible to run our software on inexpensive hardware coupled with almost any software defined radio capable of sampling the LTE signal with sufficient accuracy.","",""
74,"N. Dattani, Szilárd Szalay, N. Chancellor","Pegasus: The second connectivity graph for large-scale quantum annealing hardware",2019,"","","","",388,"2024-08-22 15:04:59","","","","",,,,,74,14.80,25,3,5,"Pegasus is a graph which offers substantially increased connectivity between the qubits of quantum annealing hardware compared to the graph Chimera. It is the first fundamental change in the connectivity graph of quantum annealers built by D-Wave since Chimera was introduced in 2009 and then used in 2011 for D-Wave's first commercial quantum annealer. In this article we describe an algorithm which defines the connectivity of Pegasus and we provide what we believe to be the best way to graphically visualize Pegasus in order to see which qubits couple to each other. As supplemental material, we provide a wide variety of different visualizations of Pegasus which expose different properties of the graph in different ways. We provide an open source code for generating the many depictions of Pegasus that we show.","",""
0,"N. Dey, Amartya Mukherjee","Open-Source Hardware Platform",2016,"","","","",104,"2024-08-22 15:04:59","","10.1201/B19730-6","","",,,,,0,0.00,0,2,8,"","",""
30,"N. Dey, Amartya Mukherjee","Embedded Systems and Robotics with Open Source Tools",2016,"","","","",303,"2024-08-22 15:04:59","","10.1201/b19730","","",,,,,30,3.75,15,2,8,"Embedded Systems and Robotics with Open-Source Tools provides easy-to-understand and easy-to-implement guidance for rapid prototype development. Designed for readers unfamiliar with advanced computing technologies, this highly accessible book: Describes several cutting-edge open-source software and hardware technologies Examines a number of embedded computer systems and their practical applications Includes detailed projects for applying rapid prototype development skills in real time Embedded Systems and Robotics with Open-Source Tools effectively demonstrates that, with the help of high-performance microprocessors, microcontrollers, and highly optimized algorithms, one can develop smarter embedded devices.","",""
47,"N. F. Delaney, Jose I. Rojas Echenique, C. Marx","Clarity: an open-source manager for laboratory automation.",2013,"","","","",352,"2024-08-22 15:04:59","","10.1177/2211068212460237","","",,,,,47,4.27,16,3,11,"Software to manage automated laboratories, when interfaced with hardware instruments, gives users a way to specify experimental protocols and schedule activities to avoid hardware conflicts. In addition to these basics, modern laboratories need software that can run multiple different protocols in parallel and that can be easily extended to interface with a constantly growing diversity of techniques and instruments. We present Clarity, a laboratory automation manager that is hardware agnostic, portable, extensible, and open source. Clarity provides critical features including remote monitoring, robust error reporting by phone or email, and full state recovery in the event of a system crash. We discuss the basic organization of Clarity, demonstrate an example of its implementation for the automated analysis of bacterial growth, and describe how the program can be extended to manage new hardware. Clarity is mature, well documented, actively developed, written in C# for the Common Language Infrastructure, and is free and open-source software. These advantages set Clarity apart from currently available laboratory automation programs. The source code and documentation for Clarity is available at http://code.google.com/p/osla/.","",""
141,"N. Freire, J. Estima, A. Cardoso","A Voltage-Based Approach Without Extra Hardware for Open-Circuit Fault Diagnosis in Closed-Loop PWM AC Regenerative Drives",2014,"","","","",363,"2024-08-22 15:04:59","","10.1109/TIE.2013.2279383","","",,,,,141,14.10,47,3,10,"The widespread use of electric drives has led to an increasing interest in their condition monitoring and fault diagnostics. With respect to power-switch open-circuit fault diagnosis, the majority of the proposed voltage-based approaches require additional hardware, increasing the system cost. As a result, industry acceptance may be low. This paper proposes a new voltage-based approach-without additional sensors-for open-circuit fault diagnosis in closed-loop controlled pulsewidth-modulation (PWM) ac voltage source converters, by using the information contained in the reference voltages available from the control system. The robustness against false alarms of the proposed technique is improved by employing a voltage observer, in order to estimate the actual converter voltages. It has been proven that the algorithm is insensitive to parameter errors; thus, its effectiveness is not compromised. In order to assess the applicability of the diagnostic technique, it is integrated into the control system of a permanent-magnet-synchronous-machine drive, with regenerative capabilities, together with three of the most widely used PWM control strategies: hysteresis current control, direct torque control, and space vector modulation. The technique performance is analyzed in detail by means of several experimental results.","",""
173,"N. Gura, S. C. Shantz, H. Eberle, S. Gupta, Vipul Gupta, D. Finchelstein, Edouard Goupy, D. Stebila","An End-to-End Systems Approach to Elliptic Curve Cryptography",2002,"","","","",777,"2024-08-22 15:04:59","","10.1007/3-540-36400-5_26","","",,,,,173,7.86,22,8,22,"","",""
16,"N. Kinar, Markus Brinkmann","Development of a sensor and measurement platform for water quality observations: design, sensor integration, 3D printing, and open-source hardware",2021,"","","","",8,"2024-08-22 15:04:59","","10.1007/s10661-022-09825-9","","",,,,,16,5.33,8,2,3,"","",""
46,"N. Kondratyuk, V. Nikolskiy, D. Pavlov, V. Stegailov","GPU-accelerated molecular dynamics: State-of-art software performance and porting from Nvidia CUDA to AMD HIP",2021,"","","","",582,"2024-08-22 15:04:59","","10.1177/10943420211008288","","",,,,,46,15.33,12,4,3,"Classical molecular dynamics (MD) calculations represent a significant part of the utilization time of high-performance computing systems. As usual, the efficiency of such calculations is based on an interplay of software and hardware that are nowadays moving to hybrid GPU-based technologies. Several well-developed open-source MD codes focused on GPUs differ both in their data management capabilities and in performance. In this work, we analyze the performance of LAMMPS, GROMACS and OpenMM MD packages with different GPU backends on Nvidia Volta and AMD Vega20 GPUs. We consider the efficiency of solving two identical MD models (generic for material science and biomolecular studies) using different software and hardware combinations. We describe our experience in porting the CUDA backend of LAMMPS to ROCm HIP that shows considerable benefits for AMD GPUs comparatively to the OpenCL backend.","",""
42,"N. Laxpati, B. Mahmoudi, C. Gutekunst, J. Newman, Riley Zeller-Townson, R. Gross","Real-time in vivo optogenetic neuromodulation and multielectrode electrophysiologic recording with NeuroRighter",2014,"","","","",752,"2024-08-22 15:04:59","","10.3389/fneng.2014.00040","","",,,,,42,4.20,7,6,10,"Optogenetic channels have greatly expanded neuroscience’s experimental capabilities, enabling precise genetic targeting and manipulation of neuron subpopulations in awake and behaving animals. However, many barriers to entry remain for this technology – including low-cost and effective hardware for combined optical stimulation and electrophysiologic recording. To address this, we adapted the open-source NeuroRighter multichannel electrophysiology platform for use in awake and behaving rodents in both open and closed-loop stimulation experiments. Here, we present these cost-effective adaptations, including commercially available LED light sources; custom-made optical ferrules; 3D printed ferrule hardware and software to calibrate and standardize output intensity; and modifications to commercially available electrode arrays enabling stimulation proximally and distally to the recording target. We then demonstrate the capabilities and versatility of these adaptations in several open and closed-loop experiments, demonstrate spectrographic methods of analyzing the results, as well as discuss artifacts of stimulation.","",""
4,"N. Shimizu, J. Akita, M. Louërat, H. Stratigopoulos, J. Chaput, D. Galayko","Open Source Hardware and EDA Tools for Analog/Mixed-Signal Design and Prototyping",2018,"","","","",55,"2024-08-22 15:04:59","","10.1109/ISCAS.2018.8351884","","",,,,,4,0.67,1,6,6,"The paper aims at stimulating a discussion on the prospect and potentiality of open source electronic design automation tools and open source hardware. We discuss the benefits and motivation, as well as the expected difficulties and shortcomings. Finally, we provide a representative list of efforts as of today specifically for analog and mixed-signal circuits and systems design and prototyping.","",""
30,"Nadège Pontisso, D. Chemouil","TOPCASED Combining Formal Methods with Model-Driven Engineering",2006,"","","","",869,"2024-08-22 15:04:59","","10.1109/ASE.2006.68","","",,,,,30,1.67,15,2,18,"This paper briefly presents the TOPCASED project which gathers industrialists, researchers, universities and SMEs, aiming at producing a free/open-source system/software/hardware-engineering toolkit, implemented over the Eclipse platform, using only standard components. An important aspect of TOPCASED is that it enables researchers to plug in their tools easily. TOPCASED is meant to be used on actual industrial projects and may therefore be considered as an important target by researchers working on formal methods and foundations of software engineering for critical systems","",""
12,"Nandeesha Veeranna, B. C. Schafer","S3CBench: Synthesizable Security SystemC Benchmarks for High-Level Synthesis",2017,"","","","",810,"2024-08-22 15:04:59","","10.1007/s41635-017-0014-1","","",,,,,12,1.71,6,2,7,"","",""
96,"Nassim Corteggiani, Giovanni Camurati, Aurélien Francillon","Inception: System-Wide Security Testing of Real-World Embedded Systems Software",2018,"","","","",961,"2024-08-22 15:04:59","","","","",,,,,96,16.00,32,3,6,"Connected embedded systems are becoming widely deployed, and their security is a serious concern. Current techniques for security testing of embedded software rely either on source code or on binaries. Detecting vulnerabilities by testing binary code is harder, because source code semantics are lost. Unfortunately, in embedded systems, high-level source code (C/C++) is often mixed with hand-written assembly, which cannot be directly handled by current source-based tools.    In this paper we introduce Inception, a framework to perform security testing of complete real-world embedded firmware. Inception introduces novel techniques for symbolic execution in embedded systems. In particular, Inception Translator generates and merges LLVM bitcode from high-level source code, hand-written assembly, binary libraries, and part of the processor hardware behavior. This design reduces differences with real execution as well as the manual effort. The source code semantics are preserved, improving the effectiveness of security checks. Inception Symbolic Virtual Machine, based on KLEE, performs symbolic execution, using several strategies to handle different levels of memory abstractions, interaction with peripherals, and interrupts. Finally, the Inception Debugger is a high-performance JTAG debugger which performs redirection of memory accesses to the real hardware.    We first validate our implementation using 53000 tests comparing Inception's execution to concrete execution on an Arm Cortex-M3 chip. We then show Inception's advantages on a benchmark made of 1624 synthetic vulnerable programs, four real-world open source and industrial applications, and 19 demos. We discovered eight crashes and two previously unknown vulnerabilities, demonstrating the effectiveness of Inception as a tool to assist embedded device firmware testing.","",""
153,"Nassir Navab, S. Heining, J. Traub","Camera Augmented Mobile C-Arm (CAMC): Calibration, Accuracy Study, and Clinical Applications",2010,"","","","",753,"2024-08-22 15:04:59","","10.1109/TMI.2009.2021947","","",,,,,153,10.93,51,3,14,"Mobile C-arm is an essential tool in everyday trauma and orthopedics surgery. Minimally invasive solutions, based on X-ray imaging and coregistered external navigation created a lot of interest within the surgical community and started to replace the traditional open surgery for many procedures. These solutions usually increase the accuracy and reduce the trauma. In general, they introduce new hardware into the OR and add the line of sight constraints imposed by optical tracking systems. They thus impose radical changes to the surgical setup and overall procedure. We augment a commonly used mobile C-arm with a standard video camera and a double mirror system allowing real-time fusion of optical and X-ray images. The video camera is mounted such that its optical center virtually coincides with the C-arm's X-ray source. After a one-time calibration routine, the acquired X-ray and optical images are coregistered. This paper describes the design of such a system, quantifies its technical accuracy, and provides a qualitative proof of its efficiency through cadaver studies conducted by trauma surgeons. In particular, it studies the relevance of this system for surgical navigation within pedicle screw placement, vertebroplasty, and intramedullary nail locking procedures. The image overlay provides an intuitive interface for surgical guidance with an accuracy of <;1 mm, ideally with the use of only one single X-ray image. The new system is smoothly integrated into the clinical application with no additional hardware especially for down-the-beam instrument guidance based on the anteroposterior oblique view, where the instrument axis is aligned with the X-ray source. Throughout all experiments, the camera augmented mobile C-arm system proved to be an intuitive and robust guidance solution for selected clinical routines.","",""
94,"Nathan Kau, Aaron Schultz, N. Ferrante, Patrick Slade","Stanford Doggo: An Open-Source, Quasi-Direct-Drive Quadruped",2019,"","","","",204,"2024-08-22 15:04:59","","10.1109/ICRA.2019.8794436","","",,,,,94,18.80,24,4,5,"This paper presents Stanford Doggo, a quasi-direct-drive quadruped capable of dynamic locomotion. This robot matches or exceeds common performance metrics of state-of-the-art legged robots. In terms of vertical jumping agility, a measure of average vertical speed, Stanford Doggo matches the best performing animal and surpasses the previous best robot by 22%. An overall design architecture is presented with focus on our quasi-direct-drive design methodology. The hardware and software to replicate this robot is open-source, requires only hand tools for manufacturing and assembly, and costs less than $3000.","",""
3068,"Nathan P. Koenig, A. Howard","Design and use paradigms for Gazebo, an open-source multi-robot simulator",2004,"","","","",221,"2024-08-22 15:04:59","","10.1109/IROS.2004.1389727","","",,,,,3068,153.40,1534,2,20,"Simulators have played a critical role in robotics research as tools for quick and efficient testing of new concepts, strategies, and algorithms. To date, most simulators have been restricted to 2D worlds, and few have matured to the point where they are both highly capable and easily adaptable. Gazebo is designed to fill this niche by creating a 3D dynamic multi-robot environment capable of recreating the complex worlds that would be encountered by the next generation of mobile robots. Its open source status, fine grained control, and high fidelity place Gazebo in a unique position to become more than just a stepping stone between the drawing board and real hardware: data visualization, simulation of remote environments, and even reverse engineering of blackbox systems are all possible applications. Gazebo is developed in cooperation with the Player and Stage projects (Gerkey, B. P., et al., July 2003), (Gerkey, B. P., et al., May 2001), (Vaughan, R. T., et al., Oct. 2003), and is available from http://playerstage.sourceforge.net/gazebo/ gazebo.html.","",""
6,"Nattapong Chantipmanee, P. Hauser","Determination of tobramycin in eye drops with an open-source hardware ion mobility spectrometer",2022,"","","","",6,"2024-08-22 15:04:59","","10.1007/s00216-022-04050-2","","",,,,,6,3.00,3,2,2,"","",""
43,"Neal Cardwell, Yuchung Cheng, L. Brakmo, M. Mathis, B. Raghavan, Nandita Dukkipati, H. K. Chu, A. Terzis, T. Herbert","packetdrill: Scriptable Network Stack Testing, from Sockets to Packets",2013,"","","","",797,"2024-08-22 15:04:59","","","","",,,,,43,3.91,5,9,11,"Testing today's increasingly complex network protocol implementations can be a painstaking process. To help meet this challenge, we developed packetdrill, a portable, open-source scripting tool that enables testing the correctness and performance of entire TCP/UDP/IP network stack implementations, from the system call layer to the hardware network interface, for both IPv4 and IPv6. We describe the design and implementation of the tool, and our experiences using it to execute 657 test cases. The tool was instrumental in our development of three new features for Linux TCP--Early Retransmit, Fast Open, and Loss Probes--and allowed us to find and fix 10 bugs in Linux. Our team uses packetdrill in all phases of the development process for the kernel used in one of the world's largest Linux installations.","",""
35,"Neel Gala, Arjun Menon, Rahul Bodduna, G. Madhusudan, V. Kamakoti","SHAKTI Processors: An Open-Source Hardware Initiative",2016,"","","","",70,"2024-08-22 15:04:59","","10.1109/VLSID.2016.130","","",,,,,35,4.38,7,5,8,"Summary form only given. State-of-the-Art Computer Architecture research at Indian Academic Institutions is majorly restricted due to unavailability of processor design models that are close to current commercially available cores. The SHAKTI processor initiative aims at breaking this barrier between Academia and Industry by providing open-source Processor and SoC designs. With the advent of RISC-V ISA by UC Berkeley, we have a simple, clean and most importantly an open source ISA that can be used to design processors which have the potential to match the current day processors in the market. The initiative is also driven to provide substantial information about design decisions and promote more competitive learning environment in academia. The processors from SHAKTI will help in aiding research related to architecture, where one can run simulations on the actual hardware and obtain much accurate results, rather than settling with a lesser accurate software simulation. Since these processors and designs are targeted for real-world use, they can also be freely adopted by industries, thereby supporting the initiative further in terms of product-driven research.In this workshop we plan to talk about the various designs that we are working on and how they can be used. The proposed tutorial consists of four parts. The first part emphasizes on the need for open-source hardware design and the rationale behind our choices of ISA and HDL. The second part covers about our microcontroller class (C-class) core and the verification and debug environment. The third part presents our flagship processor which is the industrial class (I-class) core; the various design decisions involved and some performance metrics. The final part concludes on the note of future work and upcoming releases under SHAKTI.","",""
245,"Nicholas B Rego, D. Koes","3Dmol.js: molecular visualization with WebGL",2014,"","","","",600,"2024-08-22 15:04:59","","10.1093/bioinformatics/btu829","","",,,,,245,24.50,123,2,10,"Summary: 3Dmol.js is a modern, object-oriented JavaScript library that uses the latest web technologies to provide interactive, hardware-accelerated three-dimensional representations of molecular data without the need to install browser plugins or Java. 3Dmol.js provides a full featured API for developers as well as a straightforward declarative interface that lets users easily share and embed molecular data in websites. Availability and implementation: 3Dmol.js is distributed under the permissive BSD open source license. Source code and documentation can be found at http://3Dmol.csb.pitt.edu Contact: dkoes@pitt.edu","",""
23,"Nico Gürtler, Sebastian Blaes, Pavel Kolev, F. Widmaier, Manuel Wüthrich, Stefan Bauer, B. Scholkopf, G. Martius","Benchmarking Offline Reinforcement Learning on Real-Robot Hardware",2023,"","","","",888,"2024-08-22 15:04:59","","10.48550/arXiv.2307.15690","","",,,,,23,23.00,3,8,1,"Learning policies from previously recorded data is a promising direction for real-world robotics tasks, as online learning is often infeasible. Dexterous manipulation in particular remains an open problem in its general form. The combination of offline reinforcement learning with large diverse datasets, however, has the potential to lead to a breakthrough in this challenging domain analogously to the rapid progress made in supervised learning in recent years. To coordinate the efforts of the research community toward tackling this problem, we propose a benchmark including: i) a large collection of data for offline learning from a dexterous manipulation platform on two tasks, obtained with capable RL agents trained in simulation; ii) the option to execute learned policies on a real-world robotic system and a simulation for efficient debugging. We evaluate prominent open-sourced offline reinforcement learning algorithms on the datasets and provide a reproducible experimental setup for offline reinforcement learning on real systems.","",""
79,"Nicola Macoir, J. Bauwens, Bart Jooris, B. V. Herbruggen, Jen Rossey, J. Hoebeke, E. D. Poorter","UWB Localization with Battery-Powered Wireless Backbone for Drone-Based Inventory Management",2019,"","","","",620,"2024-08-22 15:04:59","","10.3390/s19030467","","",,,,,79,15.80,11,7,5,"Current inventory-taking methods (counting stocks and checking correct placements) in large vertical warehouses are mostly manual, resulting in (i) large personnel costs, (ii) human errors and (iii) incidents due to working at large heights. To remedy this, the use of autonomous indoor drones has been proposed. However, these drones require accurate localization solutions that are easy to (temporarily) install at low costs in large warehouses. To this end, we designed a Ultra-Wideband (UWB) solution that uses infrastructure anchor nodes that do not require any wired backbone and can be battery powered. The resulting system has a theoretical update rate of up to 2892 Hz (assuming no hardware dependent delays). Moreover, the anchor nodes have an average current consumption of only 27 mA (compared to 130 mA of traditional UWB infrastructure nodes). Finally, the system has been experimentally validated and is available as open-source software.","",""
331,"Nicolas Vasilache, Jeff Johnson, Michaël Mathieu, Soumith Chintala, Serkan Piantino, Yann LeCun","Fast Convolutional Nets With fbfft: A GPU Performance Evaluation",2014,"","","","",560,"2024-08-22 15:04:59","","","","",,,,,331,33.10,55,6,10,"We examine the performance profile of Convolutional Neural Network training on the current generation of NVIDIA Graphics Processing Units. We introduce two new Fast Fourier Transform convolution implementations: one based on NVIDIA's cuFFT library, and another based on a Facebook authored FFT implementation, fbfft, that provides significant speedups over cuFFT (over 1.5x) for whole CNNs. Both of these convolution implementations are available in open source, and are faster than NVIDIA's cuDNN implementation for many common convolutional layers (up to 23.5x for some synthetic kernel configurations). We discuss different performance regimes of convolutions, comparing areas where straightforward time domain convolutions outperform Fourier frequency domain convolutions. Details on algorithmic applications of NVIDIA GPU hardware specifics in the implementation of fbfft are also provided.","",""
29,"Nicole R Famularo, Yana Kholod, D. Kosenkov","Integrating Chemistry Laboratory Instrumentation into the Industrial Internet: Building, Programming, and Experimenting with an Automatic Titrator",2016,"","","","",769,"2024-08-22 15:04:59","","10.1021/ACS.JCHEMED.5B00494","","",,,,,29,3.63,10,3,8,"This project is designed to improve physical chemistry and instrumental analysis laboratory courses for undergraduate students by employing as teaching tools novel technologies in electronics and data integration using the industrial Internet. The project carried out by upper-division undergraduates is described. Students are exposed to a complete process of building, calibrating, and programming an automatic titrator using an open-source microcontroller platform and standard pH probes, and integrating the instrument into the Internet. The approach is flexible and can be used to enable integration of various laboratory instruments (e.g., temperature, pressure, salinity probes, etc.) into the industrial Internet. The hardware and software are open-source, which makes further modification and development by the academic community possible.","",""
20,"Nils Wistoff, Moritz Schneider, Frank K. Gürkaynak, L. Benini, Gernot Heiser","Prevention of Microarchitectural Covert Channels on an Open-Source 64-bit RISC-V Core",2020,"","","","",210,"2024-08-22 15:04:59","","","","",,,,,20,5.00,4,5,4,"Covert channels enable information leakage across security boundaries of the operating system. Microarchitectural covert channels exploit changes in execution timing resulting from competing access to limited hardware resources. We use the recent experimental support for time protection, aimed at preventing covert channels, in the seL4 microkernel and evaluate the efficacy of the mechanisms against five known channels on Ariane, an open-source 64-bit application-class RISC-V core. We confirm that without hardware support, these defences are expensive and incomplete. We show that the addition of a single-instruction extension to the RISC-V ISA, that flushes microarchitectural state, can enable the OS to close all five evaluated covert channels with low increase in context switch costs and negligible hardware overhead. We conclude that such a mechanism is essential for security.","",""
22,"Nizar Abdelkafi, T. Blecker, C. Raasch","From open source in the digital to the physical world: a smooth transfer?",2009,"","","","",432,"2024-08-22 15:04:59","","10.1108/00251740911004718","","",,,,,22,1.47,7,3,15,"Purpose – The purpose of this paper is to investigate the transferability of the open source principles of product development from the realm of software to the realm of physical products.Design/methodology/approach – Based on the inherent differences between software and physical products, a theoretical discussion of the challenges that face the implementation of open source principles in the physical world are provided. A multiple case study methodology is adopted to provide insights into the applicability of the open source concept in product development outside software.Findings – Many of the challenges identified theoretically are actually encountered in practice. To cope with these challenges effectively, hardware design activities can be translated into software development tasks, using programmable hardware. When dealing with open source projects in the physical realm, it is useful to distinguish between projects driven by commercial firms and those driven by individuals, as each project type can ...","",""
32,"Noa Zilberman, Yury Audzevich, Georgina Kalogeridou, N. M. Bojan, Jingyun Zhang, A. Moore","NetFPGA: Rapid Prototyping of Networking Devices in Open Source",2015,"","","","",311,"2024-08-22 15:04:59","","10.1145/2785956.2790029","","",,,,,32,3.56,5,6,9,"The demand-led growth of datacenter networks has meant that many constituent technologies are beyond the budget of the wider community. In order to make and validate timely and relevant new contributions, the wider community requires accessible evaluation, experimentation and demonstration environments with specification comparable to the subsystems of the most massive datacenter networks. We demonstrate NetFPGA, an open-source platform for rapid prototyping of networking devices with I/O capabilities up to 100Gbps. NetFPGA offers an integrated environment that enables networking research by users from a wide range of disciplines: from hardware-centric research to formal methods.","",""
144,"Noppadol Chadil, Apirak Russameesawang, P. Keeratiwintakorn","Real-time tracking management system using GPS, GPRS and Google earth",2008,"","","","",774,"2024-08-22 15:04:59","","10.1109/ECTICON.2008.4600454","","",,,,,144,9.00,48,3,16,"Due to the high cost of fossil-based energy, several methods are proposed to reduce the usage of the energy in logistics and fleet management to be even more. GPS tracking system is a common approach to get vehicle location information in real-time for fleet planning. We proposed a GPS tracking system called Goo-Tracking that is composed of commodity hardware, open source software and an easy-to-manage user interface via a Web server with Google Map or via Google Earth software. The system includes a GPS/GPRS module to location acquisition and message transmission, MMC to temporary store location information, and an 8-bit AVR microcontroller. Our system prototype is shown and tested on a trip from Bangkok to Chonburi. It has shown great stability and also robust message transfer protocol that most of locations are accurately acquired and transmitted to the server in real-time.","",""
362,"O. Elijah, C. Leow, T. A. Rahman, S. Nunoo, S. Z. Iliya","A Comprehensive Survey of Pilot Contamination in Massive MIMO—5G System",2016,"","","","",944,"2024-08-22 15:04:59","","10.1109/COMST.2015.2504379","","",,,,,362,45.25,72,5,8,"Massive MIMO has been recognized as a promising technology to meet the demand for higher data capacity for mobile networks in 2020 and beyond. Although promising, each base station needs accurate estimation of the channel state information (CSI), either through feedback or channel reciprocity schemes in order to achieve the benefits of massive MIMO in practice. Time division duplex (TDD) has been suggested as a better mode to acquire timely CSI in massive MIMO systems. The use of non-orthogonal pilot schemes, proposed for channel estimation in multi-cell TDD networks, is considered as a major source of pilot contamination in the literature due to the limitations of coherence time. Given the importance of pilot contamination in massive MIMO systems, we provide an extensive survey on pilot contamination, and identify other possible sources of pilot contamination, which include hardware impairment and non-reciprocal transceivers. We review established theories that have analyzed the effect of pilot contamination on the performance of massive MIMO systems, particularly on achievable rates. Next, we categorize the different proposed mitigation techniques for pilot contamination using the following taxonomy: pilot-based approach and subspace-based approach. Finally, we highlight the open issues, such as training overhead, deployment scenario, computational complexity, use of channel reciprocity, and conclude with broader perspective and a look at future trends in pilot contamination in massive MIMO systems.","",""
64,"O. Garmendia, M. Rodríguez-Lázaro, J. Otero, Phuong Phan, A. Stoyanova, A. Dinh-Xuan, D. Gozal, D. Navajas, J. Montserrat, R. Farré","Low-cost, easy-to-build noninvasive pressure support ventilator for under-resourced regions: open source hardware description, performance and feasibility testing",2020,"","","","",10,"2024-08-22 15:04:59","","10.1183/13993003.00846-2020","","",,,,,64,16.00,6,10,4,"Aim Current pricing of commercial mechanical ventilators in low-/middle-income countries (LMICs) markedly restricts their availability, and consequently a considerable number of patients with acute/chronic respiratory failure cannot be adequately treated. Our aim was to design and test an affordable and easy-to-build noninvasive bilevel pressure ventilator to allow a reduction in the serious shortage of ventilators in LMICs. Methods The ventilator was built using off-the-shelf materials available via e-commerce and was based on a high-pressure blower, two pressure transducers and an Arduino Nano controller with a digital display (total retail cost <75 USD), with construction details provided open source for free replication. The ventilator was evaluated, and compared with a commercially available device (Lumis 150 ventilator; Resmed, San Diego, CA, USA): 1) in the bench setting using an actively breathing patient simulator mimicking a range of obstructive/restrictive diseases; and b) in 12 healthy volunteers wearing high airway resistance and thoracic/abdominal bands to mimic obstructive/restrictive patients. Results The designed ventilator provided inspiratory/expiratory pressures up to 20/10 cmH2O, respectively, with no faulty triggering or cycling; both in the bench test and in volunteers. The breathing difficulty score rated (1–10 scale) by the loaded breathing subjects was significantly (p<0.005) decreased from 5.45±1.68 without support to 2.83±1.66 when using the prototype ventilator, which showed no difference with the commercial device (2.80±1.48; p=1.000). Conclusion The low-cost, easy-to-build noninvasive ventilator performs similarly to a high-quality commercial device, with its open-source hardware description, which will allow for free replication and use in LMICs, facilitating application of this life-saving therapy to patients who otherwise could not be treated. Patients in under-resourced areas cannot be treated by mechanical ventilation given the unaffordable cost of conventional devices; here a low-cost, easy-to-build ventilator with open access details for free replication is designed and tested https://bit.ly/34UcbWp","",""
15,"O. Hagsand, R. Olsson, Bengt Gördén","Towards 10Gb/s open-source routing",2008,"","","","",450,"2024-08-22 15:04:59","","","","",,,,,15,0.94,5,3,16,"We present Linux performance results on selected PC hardware for IP packet forwarding in 10Gb/s speeds. In our experiments, we use Bifrost Linux on a multi-core NUMA PC architecture with multiple DMA channels, dual PCIe buses and 10GE network interface cards. Our experiments were divided into TX and forwarding experiments. The purpose of the TX experiments was to explore hardware capabilities, while the purpose of the forwarding experiments was to give realistic bandwidth and packet rate numbers. Our results show that 10Gb/s transmission rate is obtainable in wirespeed for down to 250 byte packets. Further, single-flow forwarding experiments using a single CPU core show a forwarding rate of around 900 Kp/s resulting in near wire-speed for larger packets. Traffic with more realistic packet distribution with packet filters and large FIBs enabled shows a forwarding bandwith around 4.5Gb/s. We also show how multiple queues on the receive side were evenly distributed over multiple CPU cores. We identify a remaining bottleneck in the linux kernel before the full potential for multi-queue and multi-core forwarding can be utilized. When this bottleneck is removed, it would in principle be possible to forward realistic traffic in 10Gb/s wirespeed and beyond.","",""
46,"O. L. Asato, E. Kato, R. Inamasu, A. Porto","Analysis of open CNC architecture for machine tools",2002,"","","","",738,"2024-08-22 15:04:59","","10.1590/S0100-73862002000300009","","",,,,,46,2.09,12,4,22,"The evolution of digital circuit technology, leadind to higher speeds and more reliability allowed the development of machine controllers adapted to new production systems (e.g., Flexible Manufacturing Systems - FMS). Most of the controllers are developed in agreement with the CNC technology of the correspondent machine tool manufacturer. Any alterations or adaptation of their components are not easy to be implemented. The machine designers face up hardware and software restrictions such as lack of interaction among system's elements and impossibility of adding new function. This is due to hardware incompatibility and to software not allowing alterations in the source program. The introduction of open architecture philosophy propitiated the evolution of a new generation of numeric controllers. This brought the conventional CNC technology to the standard IBM - PC microcomputer. As a consequence, the characteristics of the CNC (positioning) and the microcomputer (easy of programming, system configuration, network communication etc) are combined. Some researchers have addressed a flexible structure of software and hardware allowing changes in the hardware basic configuration and all control software levels. In this work, the development of open architecture controllers in the OSACA, OMAC, HOAM-CNC and OSEC architectures is described.","",""
73,"Onur Ferhat, F. Vilariño","Low Cost Eye Tracking: The Current Panorama",2016,"","","","",685,"2024-08-22 15:04:59","","10.1155/2016/8680541","","",,,,,73,9.13,37,2,8,"Despite the availability of accurate, commercial gaze tracker devices working with infrared (IR) technology, visible light gaze tracking constitutes an interesting alternative by allowing scalability and removing hardware requirements. Over the last years, this field has seen examples of research showing performance comparable to the IR alternatives. In this work, we survey the previous work on remote, visible light gaze trackers and analyze the explored techniques from various perspectives such as calibration strategies, head pose invariance, and gaze estimation techniques. We also provide information on related aspects of research such as public datasets to test against, open source projects to build upon, and gaze tracking services to directly use in applications. With all this information, we aim to provide the contemporary and future researchers with a map detailing previously explored ideas and the required tools.","",""
32,"Oren Lederman, D. Calacci, Angus MacMullen, Daniel C. Fehder, Fiona E. Murray, A. Pentland","Open Badges: A Low-Cost Toolkit for Measuring Team Communication and Dynamics",2017,"","","","",513,"2024-08-22 15:04:59","","","","",,,,,32,4.57,5,6,7,"We present Open Badges, an open-source framework an toolkit for measuring and shaping face-to-face social interactions using either custom hardware devices or smart phones, and real-time web-based visualizations. Open Badges is a modular system that allows researchers to monitor and collect interaction data from people engaged in real-life social settings. In this paper we describe the technical aspects of the Open Badges project and the motivation for its creation.","",""
14,"Owen Vallis, J. Hochenbaum, A. Kapur","A Shift Towards Iterative and Open-Source Design for Musical Interfaces",2010,"","","","",421,"2024-08-22 15:04:59","","10.5281/zenodo.1177919","","",,,,,14,1.00,5,3,14,"The aim of this paper is to define the process of iterative interface design as it pertains to musical performance. Embodying this design approach, the Monome OSC/MIDI USB controller represents a minimalist, open-source hardware device. The open-source nature of the device has allowed for a small group of Monome users to modify the hardware, firmware, and software associated with the interface. These user driven modifications have allowed the re-imagining of the interface for new and novel purposes, beyond even that of the device’s original intentions. With development being driven by a community of users, a device can become several related but unique generations of musical controllers, each one focused on a specific set of needs.","",""
58,"P. Bhat, Kamlesh Dutta","A Survey on Various Threats and Current State of Security in Android Platform",2019,"","","","",646,"2024-08-22 15:04:59","","10.1145/3301285","","",,,,,58,11.60,29,2,5,"The advent of the Android system has brought smartphone technology to the doorsteps of the masses. The latest technologies have made it affordable for every section of the society. However, the emergence of the Android platform has also escalated the growth of cybercrime through the mobile platform. Its open source operating system has made it a center of attraction for the attackers. This article provides a comprehensive study of the state of the Android Security domain. This article classifies the attacks on the Android system in four categories (i) hardware-based attacks, (ii) kernel-based attacks, (iii) hardware abstraction layer-based attacks, and (iv) application-based attacks. The study deals with various threats and security measures relating to these categories and presents an in-depth analysis of the underlying problems in the Android security domain. The article also stresses the role of Android application developers in realizing a more secure Android environment. This article attempts to provide a comparative analysis of various malware detection techniques concerning their methods and limitations. The study can help researchers gain knowledge of the Android security domain from various aspects and build a more comprehensive, robust, and efficient solution to the threats that Android is facing.","",""
4092,"P. Giannozzi, O. Andreussi, T. Brumme, O. Bunău, M. Buongiorno Nardelli, M. Calandra, R. Car, C. Cavazzoni, D. Ceresoli, M. Cococcioni, N. Colonna, I. Carnimeo, A. Dal Corso, Stefano de Gironcoli, P. Delugas, R. Distasio, A. Ferretti, A. Floris, G. Fratesi, G. Fugallo, R. Gebauer, U. Gerstmann, F. Giustino, T. Gorni, J. Jia, M. Kawamura, H. Ko, A. Kokalj, E. Küçükbenli, M. Lazzeri, M. Marsili, N. Marzari, F. Mauri, N. L. Nguyen, H. Nguyen, A. Otero-de-la-Roza, L. Paulatto, S. Poncé, D. Rocca, R. Sabatini, B. Santra, M. Schlipf, A. Seitsonen, A. Smogunov, I. Timrov, T. Thonhauser, P. Umari, N. Vast, X. Wu, S. Baroni","Advanced capabilities for materials modelling with Quantum ESPRESSO",2017,"","","","",491,"2024-08-22 15:04:59","","10.1088/1361-648X/aa8f79","","",,,,,4092,584.57,409,50,7,"Quantum ESPRESSO is an integrated suite of open-source computer codes for quantum simulations of materials using state-of-the-art electronic-structure techniques, based on density-functional theory, density-functional perturbation theory, and many-body perturbation theory, within the plane-wave pseudopotential and projector-augmented-wave approaches. Quantum ESPRESSO owes its popularity to the wide variety of properties and processes it allows to simulate, to its performance on an increasingly broad array of hardware architectures, and to a community of researchers that rely on its capabilities as a core open-source development platform to implement their ideas. In this paper we describe recent extensions and improvements, covering new methodologies and property calculators, improved parallelization, code modularization, and extended interoperability both within the distribution and with external software.","",""
900,"P. Giannozzi, O. Baseggio, P. Bonfà, Davide Brunato, R. Car, I. Carnimeo, C. Cavazzoni, Stefano de Gironcoli, P. Delugas, F. Ferrari Ruffino, A. Ferretti, N. Marzari, I. Timrov, A. Urru, S. Baroni","Quantum ESPRESSO toward the exascale.",2020,"","","","",509,"2024-08-22 15:04:59","","10.1063/5.0005082","","",,,,,900,225.00,90,15,4,"Quantum ESPRESSO is an open-source distribution of computer codes for quantum-mechanical materials modeling, based on density-functional theory, pseudopotentials, and plane waves, and renowned for its performance on a wide range of hardware architectures, from laptops to massively parallel computers, as well as for the breadth of its applications. In this paper, we present a motivation and brief review of the ongoing effort to port Quantum ESPRESSO onto heterogeneous architectures based on hardware accelerators, which will overcome the energy constraints that are currently hindering the way toward exascale computing.","",""
4,"P. Grames, T. Redlich, J. Wulfsberg","Open Source Hardware",2011,"","","","",2,"2024-08-22 15:04:59","","10.3139/104.110561","","",,,,,4,0.31,1,3,13,"Kurzfassung Die interaktive Wertschöpfung und spezieller das Phänomen Open Innovation erfahren seit einigen Jahren stetig wachsende Aufmerksamkeit. Zum Thema Open Source Hardware, einem Teilbereich der Open Innovation, liegt dennoch nur wenig wissenschaftlich fundiertes Material vor. Grundlegende Charakteristika, wie z.B. Community-Beteiligung und Aufgabe von geistigem Eigentum, können bereits als technologischer und gesellschaftlicher Rahmen des Phänomens identifiziert werden. Durch den massiven Zugriff auf externe Problemlösungskompetenz und die verminderte Kapitalbindung im Produktionsbereich können Open Source Hardware-Unternehmen heute branchenspezifische Vorteile nutzen, die den traditionellen Fertigungsbetrieben vorenthalten bleiben. Dieser Beitrag wird die bedeutendsten Charakteristika systematisch aufarbeiten und, auf Basis der Ergebnisse einer qualitativen Unternehmensbefragung, die entstehenden Möglichkeiten für das Unternehmensmanagement und die Gestaltung moderner Produktionssysteme darstellen.","",""
170,"P. Jamieson, K. B. Kent, Farnaz Gharibian, Lesley Shannon","Odin II - An Open-Source Verilog HDL Synthesis Tool for CAD Research",2010,"","","","",405,"2024-08-22 15:04:59","","10.1109/FCCM.2010.31","","",,,,,170,12.14,43,4,14,"In this work, we present Odin II, a framework for Verilog Hardware Description Language (HDL) synthesis that allows researchers to investigate approaches/improvements to different phases of HDL elaboration that have not been previously possible. Odin II’s output can be fed into traditional back-end flows for both FPGAs and ASICs so that these improvements can be better quantified. Whereas the original Odin [1] provided an open source synthesis tool, Odin II’s synthesis framework offers significant improvements such as a unified environment for both front-end parsing and netlist flattening. Odin II also interfaces directly with VPR [2], a common academic FPGA CAD flow, allowing an architectural description of a target FPGA as an input to enable identification and mapping of design features to custom features. Furthermore, Odin II can also read the netlists from downstream CAD stages into its netlist data-structure to facilitate analysis. Odin II can be used for a wide range of experiments; in this paper, we show three specific instances of how Odin II can be used by ASIC and FPGA researchers for more than basic synthesis. Odin II is open source and released under the MIT License.","",""
140,"P. Jääskeläinen, C. S. D. L. Lama, E. Schnetter, K. Raiskila, J. Takala, H. Berg","pocl: A Performance-Portable OpenCL Implementation",2014,"","","","",991,"2024-08-22 15:04:59","","10.1007/s10766-014-0320-y","","",,,,,140,14.00,23,6,10,"","",""
454,"P. Kazanzides, Zihan Chen, A. Deguet, G. Fischer, R. Taylor, S. DiMaio","An open-source research kit for the da Vinci® Surgical System",2014,"","","","",296,"2024-08-22 15:04:59","","10.1109/ICRA.2014.6907809","","",,,,,454,45.40,76,6,10,"We present a telerobotics research platform that provides complete access to all levels of control via open-source electronics and software. The electronics employs an FPGA to enable a centralized computation and distributed I/O architecture in which all control computations are implemented in a familiar development environment (Linux PC) and low-latency I/O is performed over an IEEE-1394a (FireWire) bus at speeds up to 400 Mbits/sec. The mechanical components are obtained from retired first-generation da Vinci ® Surgical Systems. This system is currently installed at 11 research institutions, with additional installations underway, thereby creating a research community around a common open-source hardware and software platform.","",""
29,"P. Kubáň, F. Foret, G. Erny","Open source capillary electrophoresis",2018,"","","","",255,"2024-08-22 15:04:59","","10.1002/elps.201800304","","",,,,,29,4.83,10,3,6,"Open source paradigm is becoming widely accepted in scientific communities and open source hardware is finding its steady place in chemistry research. In this review article, we provide the reader with the most up‐to‐date information on open source hardware and software resources enabling the construction and utilization of an “open source capillary electrophoresis instrument”. While CE is still underused as a separation technique, it offers unique flexibility, low‐cost, and high efficiency and is particularly suitable for open source instrumental development. We overview the major parts of CE instruments, such as high voltage power supplies, detectors, data acquisition systems, and CE software resources with emphasis on availability of the open source information on the web and in the scientific literature. This review is the first of its kind, revealing accessible blueprints of most parts from which a fully functional open source CE system can be built. By collecting the extensive information on open source capillary electrophoresis in this review article, the authors aim at facilitating the dissemination of knowledge on CE within and outside the scientific community, fosters innovation and inspire other researchers to improve the shared CE blueprints.","",""
54,"P. Li, J. Herbsleb, M. Shaw","Finding predictors of field defects for open source software systems in commonly available data sources: a case study of OpenBSD",2005,"","","","",458,"2024-08-22 15:04:59","","10.1109/METRICS.2005.26","","",,,,,54,2.84,18,3,19,"Open source software systems are important components of many business software applications. Field defect predictions for open source software systems may allow organizations to make informed decisions regarding open source software components. In this paper, we remotely measure and analyze predictors (metrics available before release) mined from established data sources (the code repository and the request tracking system) as well as a novel source of data (mailing list archives) for nine releases of OpenBSD. First, we attempt to predict field defects by extending a software reliability model fitted to development defects. We find this approach to be infeasible, which motivates examining metrics-based field defect prediction. Then, we evaluate 139 predictors using established statistical methods: Kendall's rank correlation, Pearson's rank correlation, and forward AIC model selection. The metrics we collect include product metrics, development metrics, deployment and usage metrics, and software and hardware configurations metrics. We find the number of messages to the technical discussion mailing list during the development period (a deployment and usage metric captured from mailing list archives) to be the best predictor of field defects. Our work identifies predictors of field defects in commonly available data sources for open source software systems and is a step towards metrics-based field defect prediction for quantitatively-based decision making regarding open source software components","",""
37,"P. Millard, J. Bru, C. Berger","Open-source point-of-care electronic medical records for use in resource-limited settings: systematic review and questionnaire surveys",2012,"","","","",378,"2024-08-22 15:04:59","","10.1136/bmjopen-2011-000690","","",,,,,37,3.08,12,3,12,"Background Point-of-care electronic medical records (EMRs) are a key tool to manage chronic illness. Several EMRs have been developed for use in treating HIV and tuberculosis, but their applicability to primary care, technical requirements and clinical functionalities are largely unknown. Objectives This study aimed to address the needs of clinicians from resource-limited settings without reliable internet access who are considering adopting an open-source EMR. Study eligibility criteria Open-source point-of-care EMRs suitable for use in areas without reliable internet access. Study appraisal and synthesis methods The authors conducted a comprehensive search of all open-source EMRs suitable for sites without reliable internet access. The authors surveyed clinician users and technical implementers from a single site and technical developers of each software product. The authors evaluated availability, cost and technical requirements. Results The hardware and software for all six systems is easily available, but they vary considerably in proprietary components, installation requirements and customisability. Limitations This study relied solely on self-report from informants who developed and who actively use the included products. Conclusions and implications of key findings Clinical functionalities vary greatly among the systems, and none of the systems yet meet minimum requirements for effective implementation in a primary care resource-limited setting. The safe prescribing of medications is a particular concern with current tools. The dearth of fully functional EMR systems indicates a need for a greater emphasis by global funding agencies to move beyond disease-specific EMR systems and develop a universal open-source health informatics platform.","",""
127,"P. Parente, G. Bishop","BATS: The Blind Audio Tactile Mapping System",2003,"","","","",805,"2024-08-22 15:04:59","","","","",,,,,127,6.05,64,2,21,"The BATS project focuses on helping students with visual impairments access and explore spatial information using standard computer hardware and open source software. Our work is largely based on prior techniques used in presenting maps to the blind such as text-to-speech synthesis, auditory icons, and tactile feedback. We add spatial sound to position auditory icons and speech callouts in three dimensions, and use consumer-grade haptic feedback devices to provide additional map information through tactile vibrations and textures. Two prototypes have been developed for use in educational settings and have undergone minimal assessment. A system for public release and plans for more rigorous evaluation are in development.","",""
19,"P. Pires, D. A. Rogers","Free/open source software: an alternative for engineering students",2002,"","","","",471,"2024-08-22 15:04:59","","10.1109/FIE.2002.1157982","","",,,,,19,0.86,10,2,22,"Networked or stand-alone computational environments that are available as free or open-source software are very useful for teaching engineering courses. The cost of implementation of these environments is essentially that of the underlying personal computer (PC) hardware. The necessary software, of very high quality, is available free of charge through the Internet. Our purpose is to show that free or open source software can be used as a good alternative for engineering students. The main focus is on Scilab, a numerical software package. Often installed on machines running the Linux operating system, it is a powerful tool that is useful in teaching numerical methods or computationally intensive disciplines. Also, presented are other free software packages, GSL (GNU Scientific Library) and LaTeX, that can be useful to the student. A package like Scilab can serve the needs of students when standard commercial mathematical software is not available.","",""
36,"P. Purdon, Hernan Millan, Peter L. Fuller, G. Bonmassar","An open-source hardware and software system for acquisition and real-time processing of electrophysiology during high field MRI",2008,"","","","",187,"2024-08-22 15:04:59","","10.1016/j.jneumeth.2008.07.017","","",,,,,36,2.25,9,4,16,"","",""
52,"P. Reguera, D. García, M. Domínguez, M. A. Prada, S. Alonso","A LOW-COST OPEN SOURCE HARDWARE IN CONTROL EDUCATION. CASE STUDY: ARDUINO-FEEDBACK MS-150",2015,"","","","",86,"2024-08-22 15:04:59","","10.1016/J.IFACOL.2015.11.223","","",,,,,52,5.78,10,5,9,"","",""
45,"P. Starkey, C. Billington, Shaun P. Johnstone, M. Jasperse, Kristian Helmerson, Lincoln David Turner, R. Anderson","A scripted control system for autonomous hardware-timed experiments.",2013,"","","","",531,"2024-08-22 15:04:59","","10.1063/1.4817213","","",,,,,45,4.09,6,7,11,"We present the labscript suite, an open-source experiment control system for automating shot-based experiments and their analysis. Experiments are composed as Python code, which is used to produce low-level hardware instructions. They are queued up and executed on the hardware in real time, synchronized by a pseudoclock. Experiment parameters are manipulated graphically, and analysis routines are run as new data are acquired. With this system, we can easily automate exploration of parameter spaces, including closed-loop optimization.","",""
103,"P. Sweeney, Matthias Hauswirth, B. Cahoon, P. Cheng, Amer Diwan, D. Grove, M. Hind","Using Hardware Performance Monitors to Understand the Behavior of Java Applications",2004,"","","","",993,"2024-08-22 15:04:59","","","","",,,,,103,5.15,15,7,20,"Modern Java programs, such as middleware and application servers, include many complex software components. Improving the performance of these Java applications requires a better understanding of the interactions between the application, virtual machine, operating system, and architecture. Hardware performance monitors, which are available on most modern processors, provide facilities to obtain detailed performance measurements of long-running applications in real time. However, interpreting the data collected using hardware performance monitors is difficult because of the low-level nature of the data.    We have developed a system, consisting of two components, to alleviate the difficulty of interpreting results obtained using hardware performance monitors. The first component is an enhanced VM that generates traces of hardware performance monitor values while executing Java programs. This enhanced VM generates a separate trace for each Java thread and CPU combination and thus provides accurate results in a multithreaded and multiprocessor environment. The second component is a tool that allows users to interactively explore the traces using a graphical interface. We implemented our tools in the context of Jikes RVM, an open source Java VM, and evaluated it on a POWER4 multiprocessor. We demonstrate that our system is effective in uncovering as yet unknown performance characteristics and is a first step in exploring the reasons behind observed behavior of a Java program.","",""
75,"P. V. Gent, Haneen Farah, N. Nes, B. Arem","Heart Rate Analysis for Human Factors: Development and Validation of an Open Source Toolkit for Noisy Naturalistic Heart Rate Data",2018,"","","","",242,"2024-08-22 15:04:59","","","","",,,,,75,12.50,19,4,6,"Heart rate data are collected often in human factors studies. Advances in open hardware platforms and offtheshelf photoplethysmogram (PPG) sensors allow the nonintrusive collection of heart rate data at very low cost. However, the signal is not trivial to analyse, since the morphology of PPG waveforms differs from electrocardiogram (ECG) waveforms and shows different noise patterns. PPG is often preferable because it can be collected less intrusively. However, few validated open source available algorithms exist that handle PPG data well, as most of these algorithms are specifically designed for ECG data. We have developed a novel algorithm specifically for PPG data collected in noisy fieldor simulatorbased settings. The main aim of this paper is to present the validation of a novel algorithm on a PPG dataset collected in a recent driving simulator experiment. The dataset was manually annotated, and performance of the algorithm compared to two other popular open source available algorithms. We show that the algorithm performs well and displays superior performance on the PPG dataset. Implications and further steps are discussed.","",""
23,"P. Zetterberg, Ramin Fardi","Open Source SDR Frontend and Measurements for 60-GHz Wireless Experimentation",2015,"","","","",326,"2024-08-22 15:04:59","","10.1109/ACCESS.2015.2414815","","",,,,,23,2.56,12,2,9,"This paper aims to make 60-GHz experimentation possible for a wider range of research groups. We do this by describing a low-cost front-end that can be used in combination with any baseband processing platform. We provide detailed instructions and software for connection with the USRP N200/N210, including general classes for controlling the board and example single-input single-output and 2 × 2 Multiple-Input Multiple Output applications. In addition, we provide measurements to assess the impact of phase noise and other hardware impairments in low-cost millimeter-wave systems for hybrid measurement and simulation studies. Finally, we also perform performance measurements on the hardware. All our materials, such as the hardware design, the software, and the measurements, are freely available.","",""
9,"Pablo González, Nicolás Pérez, M. Knochen","LOW COST ANALYZER FOR THE DETERMINATION OF PHOSPHORUS BASED ON OPEN-SOURCE HARDWARE AND PULSED FLOWS",2016,"","","","",76,"2024-08-22 15:04:59","","10.5935/0100-4042.20160020","","",,,,,9,1.13,3,3,8,"The need for automated analyzers for industrial and environmental samples has triggered the research for new and cost-effective strategies of automation and control of analytical systems. The widespread availability of open-source hardware together with novel analytical methods based on pulsed flows have opened the possibility of implementing standalone automated analytical systems at low cost. Among the areas that can benefit from this approach are the analysis of industrial products and effluents and environmental analysis. In this work, a multi-pumping flow system is proposed for the determination of phosphorus in effluents and polluted water samples. The system employs photometric detection based on the formation of molybdovanadophosphoric acid, and the fluidic circuit is built using three solenoid micropumps. The detection is implemented with a low cost LED-photodiode photometric detection system and the whole system is controlled by an open-source Arduino Uno microcontroller board. The optimization of the timing to ensure the color development and the pumping cycle is discussed for the proposed implementation. Experimental results to evaluate the system behavior are presented verifying a linear relationship between the relative absorbance and the phosphorus concentrations for levels as high as 50 mg L-1.","",""
83,"Paolo Mantovani, Davide Giri, G. D. Guglielmo, Luca Piccolboni, Joseph Zuckerman, E. G. Cota, M. Petracca, C. Pilato, L. Carloni","Agile SoC Development with Open ESP : Invited Paper",2020,"","","","",407,"2024-08-22 15:04:59","","10.1145/3400302.3415753","","",,,,,83,20.75,9,9,4,"ESP is an open-source research platform for heterogeneous SoC design. The platform combines a modular tile-based architecture with a variety of application-oriented flows for the design and optimization of accelerators. The ESP architecture is highly scalable and strikes a balance between regularity and specialization. The companion methodology raises the level of abstraction to system-level design and enables an automated flow from software and hardware development to full-system prototyping on FPGA. For application developers, ESP offers domain-specific automated solutions to synthesize new accelerators for their software and to map complex workloads onto the SoC architecture. For hardware engineers, ESP offers automated solutions to integrate their accelerator designs into the complete SoC. Conceived as a heterogeneous integration platform and tested through years of teaching at Columbia University, ESP supports the open-source hardware community by providing a flexible platform for agile SoC development.","",""
163,"Paras Jain, Ajay Jain, Aniruddha Nrusimha, A. Gholami, P. Abbeel, K. Keutzer, Ion Stoica, Joseph Gonzalez","Checkmate: Breaking the Memory Wall with Optimal Tensor Rematerialization",2019,"","","","",572,"2024-08-22 15:04:59","","","","",,,,,163,32.60,20,8,5,"We formalize the problem of trading-off DNN training time and memory requirements as the tensor rematerialization optimization problem, a generalization of prior checkpointing strategies. We introduce Checkmate, a system that solves for optimal rematerialization schedules in reasonable times (under an hour) using off-the-shelf MILP solvers or near-optimal schedules with an approximation algorithm, then uses these schedules to accelerate millions of training iterations. Our method scales to complex, realistic architectures and is hardware-aware through the use of accelerator-specific, profile-based cost models. In addition to reducing training cost, Checkmate enables real-world networks to be trained with up to 5.1x larger input sizes. Checkmate is an open-source project, available at this https URL.","",""
13,"Parnian Najafi Borazjani, C. E. Everett, G. Mason, Damon McCoy","OCTANE: An Extensible Open Source Car Security Testbed",2014,"","","","",344,"2024-08-22 15:04:59","","","","",,,,,13,1.30,3,4,10,"Security research and training using cyber-physical systems (e.g., automotive networks) is challenging because of the need to replicate the interactions between the hardware components and the control software of the systems. These interactions are challenging to replicate due to dynamic inputs in real-world environments that cause various interactions of hardware components and control software within the network. In particular, automotive networks are challenging for security research and training because although the protocols of the automotive networks are standardized (e.g., CAN, LIN), the implementation details by each automotive manufacturer are not standardized and are generally not publicly available. In this paper, we present OCTANE, which reduces the barrier of entry into the security research and training of automotive networks by providing a software package and a hardware framework for the reverse engineering and testing of automotive networks. OCTANE provides a platform for security research and training by replicating the interactions between the hardware components and control software of the systems so that the user can focus on the security aspects of the automotive network instead of the tool configuration and setup. In addition, OCTANE includes security focused features, such as the ability to replay and fuzz test different automotive network protocols. OCTANE will be released as an open source tool, which will enable the automotive security community to extend this tool to support future automotive protocols.","",""
96,"Pascal J. Kieslich, Felix Henninger","Mousetrap: An integrated, open-source mouse-tracking package",2017,"","","","",887,"2024-08-22 15:04:59","","10.3758/s13428-017-0900-z","","",,,,,96,13.71,48,2,7,"","",""
63,"Patrick Slade, Ayman Habib, J. Hicks, S. Delp","An open-source and wearable system for measuring 3D human motion in real-time",2021,"","","","",873,"2024-08-22 15:04:59","","10.1109/TBME.2021.3103201","","",,,,,63,21.00,16,4,3,"Analyzing human motion is essential for diagnosing movement disorders and guiding rehabilitation interventions for conditions such as osteoarthritis, stroke, and Parkinson’s disease. Optical motion capture systems are the current standard for estimating kinematics but require expensive equipment located in a predefined space. While wearable sensor systems can estimate kinematics in any environment, existing systems are generally less accurate than optical motion capture. Further, many wearable sensor systems require a computer in close proximity and rely on proprietary software, making it difficult for researchers to reproduce experimental findings. Here, we present OpenSenseRT, an open-source and wearable system that estimates upper and lower extremity kinematics in real time by using inertial measurement units and a portable microcontroller. We compared the OpenSenseRT system to optical motion capture and found an average RMSE of 4.4 degrees across 5 lower-limb joint angles during three minutes of walking (n = 5) and an average RMSE of 5.6 degrees across 8 upper extremity joint angles during a Fugl-Meyer task (n = 5). The open-source software and hardware are scalable, tracking between 1 and 14 body segments, with one sensor per segment. Kinematics are estimated in real-time using a musculoskeletal model and inverse kinematics solver. The computation frequency, depends on the number of tracked segments, but is sufficient for real-time measurement for many tasks of interest; for example, the system can track up to 7 segments at 30 Hz in real-time. The system uses off-the-shelf parts costing approximately $100 USD plus $20 for each tracked segment. The OpenSenseRT system is accurate, low-cost, and simple to replicate, enabling movement analysis in labs, clinics, homes, and free-living settings.","",""
29,"Paul Emmerich, Sebastian Gallenmüller, G. Antichi, A. Moore, G. Carle","Mind the Gap - A Comparison of Software Packet Generators",2017,"","","","",757,"2024-08-22 15:04:59","","10.1109/ANCS.2017.32","","",,,,,29,4.14,6,5,7,"Network research relies on packet generators to assess performance and correctness of new ideas. Software-based generators in particular are widely used by academic researchers because of their flexibility, affordability, and open-source nature. The rise of new frameworks for fast IO on commodity hardware is making them even more attractive. Longstanding performance differences of software generation versus hardware in terms of throughput are no longer as big of a concern as they used to be few years ago. This paper investigates the properties of several high-per-formance software packet generators and the implications on their precision when a given traffic pattern needs to be generated. We believe that the evaluation strategy presented in this paper helps understanding the actual limitations in high-performance software packet generation, thus helping the research community to build better tools.","",""
27,"Paul H. Masur, Jeffrey H. Reed, Nishith Tripathi","Artificial Intelligence in Open-Radio Access Network",2021,"","","","",402,"2024-08-22 15:04:59","","10.1109/MAES.2022.3186966","","",,,,,27,9.00,9,3,3,"This article outlines the proposed open-radio access network (O-RAN) deployment for fifth-generation (5G) wireless networks. O-RAN seeks to supplant hardware-specific radio access network (RAN) components with generic hardware, specialized software, and open signaling interfaces. The virtualization and network slicing features of 5G allow for software to replace previously hardware-specific functions. The software further provides faster analytics, thus supporting 5G's latency requirements and advanced usage scenarios (i.e., enhanced mobile broadband, massive machine type communications, and ultra-reliable low latency communications). Furthermore, as software annexes control of the RAN, there is the freedom to integrate artificial intelligence/machine learning algorithms into RAN management (particularly at the user plane). This integration is one of the goals of O-RAN. Finally, relying on generic hardware and specialized, open-source software eliminates reliance upon specific device manufacturers. This article will provide questions regarding O-RAN's future, with a focus on 5G network device security.","",""
69,"Paul Jakma, David Lamparter","Introduction to the quagga routing suite",2014,"","","","",709,"2024-08-22 15:04:59","","10.1109/MNET.2014.6786612","","",,,,,69,6.90,35,2,10,"Off-the-shelf routing products are often constrained by being designed to meet specific needs, in terms of both software and hardware. Networking professionals may face problems that require customization of software, or additional processing facilities or data storage, which are not provided for by those products. The Quagga Routing Suite provides implementations of several common routing protocols, distributed over multiple processes communicating via IPC, and support for their development, with source code provided under a modification-friendly license. Quagga can help networking professionals build such custom solutions, in combination with other open source software packages. Quagga also provides a path for network researchers to increase the visibility of their work, making it available to a wider community for potential testing and use, increasing the impact of that research.","",""
118,"Pavel Shamis, Manjunath Gorentla Venkata, M. Graham Lopez, Matthew B. Baker, Oscar R. Hernandez, Yossi Itigin, Mike Dubman, G. Shainer, R. Graham, L. Liss, Yiftah Shahar, Mellanox Technologies, S. Potluri, D. Rossetti, Donald Becker, D. Poole, Christopher Lamb, Sameer Kumar, C. Stunkel, G. Bosilca, A. Bouteiller","UCX: An Open Source Framework for HPC Network APIs and Beyond",2015,"","","","",294,"2024-08-22 15:04:59","","10.1109/HOTI.2015.13","","",,,,,118,13.11,12,21,9,"This paper presents Unified Communication X (UCX), a set of network APIs and their implementations for high throughput computing. UCX comes from the combined effort of national laboratories, industry, and academia to design and implement a high-performing and highly-scalable network stack for next generation applications and systems. UCX design provides the ability to tailor its APIs and network functionality to suit a wide variety of application domains and hardware. We envision these APIs to satisfy the networking needs of many programming models such as Message Passing Interface (MPI), OpenSHMEM, Partitioned Global Address Space (PGAS) languages, task-based paradigms and I/O bound applications. To evaluate the design we implement the APIs and protocols, and measure the performance of overhead-critical network primitives fundamental for implementing many parallel programming models and system libraries. Our results show that the latency, bandwidth, and message rate achieved by the portable UCX prototype is very close to that of the underlying driver. With UCX, we achieved a message exchange latency of 0.89 us, a bandwidth of 6138.5 MB/s, and a message rate of 14 million messages per second. As far as we know, this is the highest bandwidth and message rate achieved by any network stack (publicly known) on this hardware.","",""
17,"Paweł Burdziakowski","Evaluation of open drone map toolkit for geodetic grade aerial drone mapping – case study",2017,"","","","",522,"2024-08-22 15:04:59","","10.5593/SGEM2017/23/S10.013","","",,,,,17,2.43,17,1,7,"An open source tool’s popularity has increased considerably, as well as micro aerial vehicles (MAV) technologies based on open source hardware. An open source software and hardware delivers a wide variety of applications and technology. The world’s most successful open source projects have their roots in the academy, and now its participation includes a wide variety of academic programs and research. Based on open source technology, a case study has been designed and performed, in order to prove this technology meets geodetic requirements. The study has been performed within tested area, using MAV with construction and design based only on open hardware technology. All image data gathered have been post processed using recently developed open source toolkit for aerial drone mapping – Open Drone Map.  The presented open source approach for digital surface model delivery has been compared with pure commercial approach. The commercial approach, for the same case and area, has been performed by a state of art commercial MAV technology and software. Results show differences between both approaches in data processing, accuracy and digital surface modeling. The paper concludes both process usability and ability to perform a geodetic grade surface modeling within presented case, and foreseen its usability of Open Drone Map toolkit for academic education purposes and researches.","",""
77,"Pedro Almada, P. M. Pereira, Siân Culley, Ghislaine Caillol, Fanny Boroni-Rueda, Christina L. Dix, G. Charras, B. Baum, Romain F. Laine, Christophe Leterrier, Ricardo Henriques","Automating multimodal microscopy with NanoJ-Fluidics",2018,"","","","",663,"2024-08-22 15:04:59","","10.1038/s41467-019-09231-9","","",,,,,77,12.83,8,11,6,"","",""
21,"Pedro P. Vallejo Ramirez, Joseph Zammit, Oliver Vanderpoorten, F. Riche, F. Blé, Xiao-Hong Zhou, B. Spiridon, Christopher Valentine, Simeon E. Spasov, P. Oluwasanya, Gemma Goodfellow, Marcus J. Fantham, O. Siddiqui, Farah C Alimagham, Miranda Robbins, A. Stretton, D. Simatos, O. Hadeler, E. Rees, Florian Stroehl, Romain F. Laine, C. Kaminski","OptiJ: Open-source optical projection tomography of large organ samples",2019,"","","","",232,"2024-08-22 15:04:59","","10.1038/s41598-019-52065-0","","",,,,,21,4.20,2,22,5,"","",""
47,"Peter Prince, A. Hill, Evelyn Piña Covarrubias, C. Patrick Doncaster, Jake L. Snaddon, A. Rogers","Deploying Acoustic Detection Algorithms on Low-Cost, Open-Source Acoustic Sensors for Environmental Monitoring",2019,"","","","",217,"2024-08-22 15:04:59","","10.3390/s19030553","","",,,,,47,9.40,8,6,5,"Conservation researchers require low-cost access to acoustic monitoring technology. However, affordable tools are often constrained to short-term studies due to high energy consumption and limited storage. To enable long-term monitoring, energy and space efficiency must be improved on such tools. This paper describes the development and deployment of three acoustic detection algorithms that reduce the power and storage requirements of acoustic monitoring on affordable, open-source hardware. The algorithms aim to detect bat echolocation, to search for evidence of an endangered cicada species, and also to collect evidence of poaching in a protected nature reserve. The algorithms are designed to run on AudioMoth: a low-cost, open-source acoustic monitoring device, developed by the authors and widely adopted by the conservation community. Each algorithm addresses a detection task of increasing complexity, implementing extra analytical steps to account for environmental conditions such as wind, analysing samples multiple times to prevent missed events, and incorporating a hidden Markov model for sample classification in both the time and frequency domain. For each algorithm, we report on real-world deployments carried out with partner organisations and also benchmark the hidden Markov model against a convolutional neural network, a deep-learning technique commonly used for acoustics. The deployments demonstrate how acoustic detection algorithms extend the use of low-cost, open-source hardware and facilitate a new avenue for conservation researchers to perform large-scale monitoring.","",""
73,"Philipp Foehn, Elia Kaufmann, Angel Romero, Robert Pěnička, Sihao Sun, L. Bauersfeld, T. Laengle, Giovanni Cioffi, Yunlong Song, Antonio Loquercio, D. Scaramuzza","Agilicious: Open-source and open-hardware agile quadrotor for vision-based flight",2022,"","","","",44,"2024-08-22 15:04:59","","10.1126/scirobotics.abl6259","","",,,,,73,36.50,7,11,2,"Autonomous, agile quadrotor flight raises fundamental challenges for robotics research in terms of perception, planning, learning, and control. A versatile and standardized platform is needed to accelerate research and let practitioners focus on the core problems. To this end, we present Agilicious, a codesigned hardware and software framework tailored to autonomous, agile quadrotor flight. It is completely open source and open hardware and supports both model-based and neural network–based controllers. Also, it provides high thrust-to-weight and torque-to-inertia ratios for agility, onboard vision sensors, graphics processing unit (GPU)–accelerated compute hardware for real-time perception and neural network inference, a real-time flight controller, and a versatile software stack. In contrast to existing frameworks, Agilicious offers a unique combination of flexible software stack and high-performance hardware. We compare Agilicious with prior works and demonstrate it on different agile tasks, using both model-based and neural network–based controllers. Our demonstrators include trajectory tracking at up to 5g and 70 kilometers per hour in a motion capture system, and vision-based acrobatic flight and obstacle avoidance in both structured and unstructured environments using solely onboard perception. Last, we demonstrate its use for hardware-in-the-loop simulation in virtual reality environments. Because of its versatility, we believe that Agilicious supports the next generation of scientific and industrial quadrotor research. Description We provide a codesigned hardware and software framework tailored to autonomous, agile quadrotor flight.","",""
301,"Philipp Hennig, Michael A. Osborne, M. Girolami","Probabilistic numerics and uncertainty in computations",2015,"","","","",977,"2024-08-22 15:04:59","","10.1098/rspa.2015.0142","","",,,,,301,33.44,100,3,9,"We deliver a call to arms for probabilistic numerical methods: algorithms for numerical tasks, including linear algebra, integration, optimization and solving differential equations, that return uncertainties in their calculations. Such uncertainties, arising from the loss of precision induced by numerical calculation with limited time or hardware, are important for much contemporary science and industry. Within applications such as climate science and astrophysics, the need to make decisions on the basis of computations with large and complex data have led to a renewed focus on the management of numerical uncertainty. We describe how several seminal classic numerical methods can be interpreted naturally as probabilistic inference. We then show that the probabilistic view suggests new algorithms that can flexibly be adapted to suit application specifics, while delivering improved empirical performance. We provide concrete illustrations of the benefits of probabilistic numeric algorithms on real scientific problems from astrometry and astronomical imaging, while highlighting open problems with these new algorithms. Finally, we describe how probabilistic numerical methods provide a coherent framework for identifying the uncertainty in calculations performed with a combination of numerical algorithms (e.g. both numerical optimizers and differential equation solvers), potentially allowing the diagnosis (and control) of error sources in computations.","",""
56,"Philipp Rosenkranz, Matthias Wählisch, E. Baccelli, Ludwig Ortmann","A Distributed Test System Architecture for Open-source IoT Software",2015,"","","","",302,"2024-08-22 15:04:59","","10.1145/2753476.2753481","","",,,,,56,6.22,14,4,9,"In this paper, we discuss challenges that are specific to testing of open IoT software systems. The analysis reveals gaps compared to wireless sensor networks as well as embedded software. We propose a testing framework which (a) supports continuous integration techniques, (b) allows for the integration of project contributors to volunteer hardware and software resources to the test system, and (c) can function as a permanent distributed plugtest for network interoperability testing. The focus of this paper lies in open-source IoT development but many aspects are also applicable to closed-source projects.","",""
21,"Phuc Nguyen-Hoang, Phuoc Vo Tan","Development An Open-Source Industrial IoT Gateway",2019,"","","","",239,"2024-08-22 15:04:59","","10.1109/ISCIT.2019.8905157","","",,,,,21,4.20,11,2,5,"Bringing field devices and sensors to the cloud allows production plant to be connected, remotely monitored and controlled is a recently trending in industrial automation. The combination between SCADA and addition gateway, router with IoT protocols such as MQTT, CoAP… is a traditional solution in practice. This paper provides an alternative approach called Industrial IoT gateway and based on Linux tool-chain to build ’’unique"" software and hardware solution for cloud connectivity. The set of Linux-based software including Docker and Node-RED allows generating, packaging and quickly deploying application that facilitates the data exchange from different industrial fieldbuses (Siemens S7, Modbus TCP and RTU) and IoT protocols (MQTT, HTTP). An industrial plant prototype is built and communication latency is also taken into consideration for evaluating the proof of concept.","",""
312,"Pingmei Xu, Krista A. Ehinger, Yinda Zhang, Adam Finkelstein, Sanjeev R. Kulkarni, Jianxiong Xiao","TurkerGaze: Crowdsourcing Saliency with Webcam based Eye Tracking",2015,"","","","",561,"2024-08-22 15:04:59","","","","",,,,,312,34.67,52,6,9,"Traditional eye tracking requires specialized hardware, which means collecting gaze data from many observers is expensive, tedious and slow. Therefore, existing saliency prediction datasets are order-of-magnitudes smaller than typical datasets for other vision recognition tasks. The small size of these datasets limits the potential for training data intensive algorithms, and causes overfitting in benchmark evaluation. To address this deficiency, this paper introduces a webcam-based gaze tracking system that supports large-scale, crowdsourced eye tracking deployed on Amazon Mechanical Turk (AMTurk). By a combination of careful algorithm and gaming protocol design, our system obtains eye tracking data for saliency prediction comparable to data gathered in a traditional lab setting, with relatively lower cost and less effort on the part of the researchers. Using this tool, we build a saliency dataset for a large number of natural images. We will open-source our tool and provide a web server where researchers can upload their images to get eye tracking results from AMTurk.","",""
91,"Prerit Jain, S. Desai, Ming-Wei Shih, Taesoo Kim, Seongmin Kim, Jae-Hyuk Lee, Changho Choi, Y. Shin, Brent Byunghoon Kang, Dongsu Han","OpenSGX: An Open Platform for SGX Research",2016,"","","","",490,"2024-08-22 15:04:59","","10.14722/NDSS.2016.23011","","",,,,,91,11.38,9,10,8,"Hardware technologies for trusted computing, or trusted execution environments (TEEs), have rapidly matured over the last decade. In fact, TEEs are at the brink of widespread commoditization with the recent introduction of Intel Software Guard Extensions (Intel SGX). Despite such rapid development of TEE, software technologies for TEE significantly lag behind their hardware counterpart, and currently only a select group of researchers have the privilege of accessing this technology. To address this problem, we develop an open source platform, called OpenSGX, that emulates Intel SGX hardware components at the instruction level and provides new system software components necessarily required for full TEE exploration. We expect that the OpenSGX framework can serve as an open platform for SGX research, with the following contributions. First, we develop a fully functional, instruction-compatible emulator of Intel SGX for enabling the exploration of software/hardware design space, and development of enclave programs. OpenSGX provides a platform for SGX development, meaning that it provides not just emulation but also operating system components, an enclave program loader/packager, an OpenSGX user library, debugging, and performance monitoring. Second, to show OpenSGX’s use cases, we applied OpenSGX to protect sensitive information (e.g., directory) of Tor nodes and evaluated their potential performance impacts. Therefore, we believe OpenSGX has great potential for broader communities to spark new research on soon-to-becommodity Intel SGX.","",""
17,"Q. An, Li Sun, Li Sun","Hardware-circuit-based diagnosis method for open-switch faults in inverters",2013,"","","","",442,"2024-08-22 15:04:59","","10.1049/EL.2013.0641","","",,,,,17,1.55,6,3,11,"The theory, design, implementation and experimental validation of a hardware-circuit-based diagnosis method for open-switch faults in voltage source inverters are discussed. Operating states of the inverter under both healthy and faulty conditions are analysed. The estimated voltages can be achieved as pre-fault voltages by means of the switching function model of the inverter under a normal condition. Then, the error voltages between the estimated ones and measured ones can be used to detect faults. To achieve reliable diagnosis, the design employs both the amplitude limit and the duration limit to filter the error voltages so as to eliminate effects of the deadtimes and the switching processes of power devices. The proposed method is validated by experiments.","",""
77,"Q. Geissmann, Luis Garcia Rodriguez, E. Beckwith, Alice S. French, Arian Jamasb, Giorgio F. Gilestro","Ethoscopes: An open platform for high-throughput ethomics",2017,"","","","",482,"2024-08-22 15:04:59","","10.1371/journal.pbio.2003026","","",,,,,77,11.00,13,6,7,"We present ethoscopes, machines for high-throughput analysis of behaviour in Drosophila and other animals. Ethoscopes provide a software and hardware solution that is reproducible and easily scalable; they perform, in real-time, tracking and profiling of behaviour using a supervised machine learning algorithm; they can deliver behaviourally-triggered stimuli to flies in a feedback-loop mode; and they are highly customisable and open source. Ethoscopes can be built easily using 3D printing technology and rely on Raspberry Pi microcomputers and Arduino boards to provide affordable and flexible hardware. All software and construction specifications are available at http://lab.gilest.ro/ethoscope.","",""
34,"Qi Zheng, Yajing Chen, R. Dreslinski, C. Chakrabarti, A. Anastasopoulos, S. Mahlke, T. Mudge","WiBench: An open source kernel suite for benchmarking wireless systems",2013,"","","","",897,"2024-08-22 15:04:59","","10.1109/IISWC.2013.6704678","","",,,,,34,3.09,5,7,11,"The rapid growth in the number of mobile devices and the higher data rate requirements of mobile subscribers have made wireless signal processing a key driving application of mobile computing technology. To design better mobile platforms and the supporting wireless infrastructure, it is very important for computer architects and system designers to understand and characterize the performance of existing and upcoming wireless protocols. In this paper, we present a newly developed open-source benchmark suite called WiBench. It consists of a wide range of signal processing kernels used in many mainstream standards such as 802.11, WCDMA and LTE. The kernels include FFT/IFFT, MIMO, channel estimation, channel coding, constellation mapping, etc. Each kernel is a self-contained configurable block which can be tuned to meet the different system requirements. Several standard channel models have also been included to study system performance, such as the bit error rate. The suite also contains an LTE uplink system as a representative example of a wireless system that can be built using these kernels. WiBench is provided in C++ to make it easier for computer architects to profile and analyze the system. We characterize the performance of WiBench to illustrate how it can be used to guide hardware system design. Architectural analyses on each individual kernel and on the entire LTE uplink are performed, indicating the hotspots, available parallelism, and runtime performance. Finally, a MATLAB version is also included for debugging purposes.","",""
66,"Qiang Guan, Nathan Debardeleben, S. Blanchard, Song Fu","F-SEFI: A Fine-Grained Soft Error Fault Injection Tool for Profiling Application Vulnerability",2014,"","","","",714,"2024-08-22 15:04:59","","10.1109/IPDPS.2014.128","","",,,,,66,6.60,17,4,10,"As the high performance computing (HPC) community continues to push towards exascale computing, resilience remains a serious challenge. With the expected decrease of both feature size and operating voltage, we expect a significant increase in hardware soft errors. HPC applications of today are only affected by soft errors to a small degree but we expect that this will become a more serious issue as HPC systems grow. We propose F-SEFI, a Fine-grained Soft Error Fault Injector, as a tool for profiling software robustness against soft errors. In this paper we utilize soft error injection to mimic the impact of errors on logic circuit behavior. Leveraging the open source virtual machine hypervisor QEMU, F-SEFI enables users to modify emulated machine instructions to introduce soft errors. F-SEFI can control what application, which sub-function, when and how to inject soft errors with different granularities, without interference to other applications that share the same environment. F-SEFI does this without requiring revisions to the application source code, compilers or operating systems. We discuss the design constraints for F-SEFI and the specifics of our implementation. We demonstrate use cases of F-SEFI on several benchmark applications to show how data corruption can propagate to incorrect results.","",""
101,"Qihao Zhou, K. Zheng, Lu Hou, Jinyu Xing, R. Xu","Design and Implementation of Open LoRa for IoT",2018,"","","","",478,"2024-08-22 15:04:59","","10.1109/ACCESS.2019.2930243","","",,,,,101,16.83,20,5,6,"Long Range (LoRa) network is emerging as one of the most promising low-power wide-area (LPWA) networks, since it enables the energy-constraint devices distributed over wide areas to establish affordable connectivity. However, how to implement a cost-effective and flexible LoRa network is still an open challenge. This paper aims at exposing a feasible solution of design and implementation, allowing users to conveniently build a private LoRa network for various IoT applications. First, several typical application scenarios of LoRa network are discussed. Then, the LoRa system architecture is presented with the functionality of each component. We address the hardware design and implementation of LoRa Gateway, which is the bridge between LoRa nodes and LoRa network server. Especially, this paper contributes by proposing an improved software architecture of LoRa network server whose source codes are open on GitHub. Under the architecture, LoRa network server is divided into four decoupled modules and uses the messaging system based on streaming data for the interaction between modules to guarantee scalability and flexibility. Finally, the extensive experiments are conducted to evaluate the performance of LoRa networks in typical environments.","",""
37,"Qing Wang, D. Giustiniano, O. Gnawali","Low-Cost, Flexible and Open Platform for Visible Light Communication Networks",2015,"","","","",517,"2024-08-22 15:04:59","","10.1145/2799650.2799655","","",,,,,37,4.11,12,3,9,"Built around a cost-effective embedded Linux system, OpenVLC1.0 is an open source, flexible, software-defined, and low-cost platform for research in Visible Light Communication (VLC) Networks. OpenVLC1.0 consists of simple electronic hardware for optical transmission and reception, and of software implementation that runs the MAC layer, part of the PHY layer, and offers an interface to Internet protocols. We have designed and developed a printed circuit board (OpenVLC1.0 cape) that implements a flexible optical front-end. Researchers can plug the cape into the main Beaglebone board and swiftly build and prototype innovative PHY and MAC protocols using the software implementation (OpenVLC1.0 driver). In this work, we provide preliminary measurement results that demonstrate the flexibility of the platform in a few but yet representative scenarios.","",""
27,"R. Blum","Network Performance Open Source Toolkit: Using Netperf, tcptrace, NISTnet, and SSFNet",2003,"","","","",476,"2024-08-22 15:04:59","","","","",,,,,27,1.29,27,1,21,"From the Publisher:    In these times of reduced corporate budgets, this book shows how to test for performance problems and how to install and run freely available tools, instead of buying costly new hardware and software testing packages  Network performance is the #1 headache for network operators; this book gives IT professionals straightforward guidance  Author is a troubleshooting practitioner, a hands-on networking computer specialist for the Department of Defense","",""
17,"R. Casey","Open-source lab: How to build your own hardware and reduce research costs [Book Review]",2015,"","","","",151,"2024-08-22 15:04:59","","","","",,,,,17,1.89,17,1,9,"Review(s) of: Open-source lab: How to build your own hardware and reduce research costs, by Pearce J.M., Elsevier, 2013, hardback, ISBN 9780124104624, 271 pp., $65.","",""
102,"R. Chakraborty, S. Bhunia","RTL Hardware IP Protection Using Key-Based Control and Data Flow Obfuscation",2010,"","","","",595,"2024-08-22 15:04:59","","10.1109/VLSI.Design.2010.54","","",,,,,102,7.29,51,2,14,"Recent trends of hardware intellectual property (IP) piracy and reverse engineering pose major business and security concerns to an IP-based system-on-chip (SoC) design flow. In this paper, we propose a Register Transfer Level (RTL) hardware IP protection technique based on low-overhead key-based obfuscation of control and data flow. The basic idea is to transform the RTL core into control and data flow graph (CDFG) and then integrate a well-obfuscated finite state machine (FSM) of special structure, referred as “Mode-Control FSM”, into the CDFG in a manner that normal functional behavior is enabled only after application of a specific input sequence. We provide formal analysis of the effectiveness of the proposed approach and present a simple metric to quantify the level of obfuscation. We also present an integrated design flow that implements the proposed obfuscation at low computational overhead. Simulation results for two open-source IP cores show that high levels of security is achievable at nominal area and power overheads under delay constraint.","",""
33,"R. Chakraborty, S. Bhunia","Security through obscurity: An approach for protecting Register Transfer Level hardware IP",2009,"","","","",985,"2024-08-22 15:04:59","","10.1109/HST.2009.5224963","","",,,,,33,2.20,17,2,15,"Modern System-on-Chip (SoC) designs rely heavily on reusable, verified and bug-free hardware Intellectual Property (IP) cores. Recent trends of IP piracy and reverse-engineering are causing major revenue loss to the IP vendors. A large majority of hardware IPs comes in Register Transfer Level (RTL) description due to their portability and flexibility to map to any technology platform. In this paper, we propose a key-based security through obscurity approach for protecting RTL hardware IPs. The RTL design is first transformed into a technology-independent gate-level description and the functionality of the resulting gate-level netlist is then changed through modification of its state transition function. This process allows normal operation only on the successful application of a correct initialization sequence. The modified gate-level design is then decompiled to generate an obfuscated version of the RTL. Major RTL constructs and macros are optionally preserved through the transformation process using a forward annotation file. The proposed methodology differs from existing hardware obfuscation as well as watermarking techniques in its ability to achieve simultaneous functional and semantic obfuscation for RTL description of IP at low design overhead. Simulation results for a set of open-source IP cores show that we can achieve high levels of security through a well-formulated obfuscation scheme incurring nominal area, delay and power overhead.","",""
385,"R. David, Jared Duke, Advait Jain, V. Reddi, Nat Jeffries, Jian Li, Nick Kreeger, Ian Nappier, Meghna Natraj, Shlomi Regev, Rocky Rhodes, Tiezhen Wang, Pete Warden","TensorFlow Lite Micro: Embedded Machine Learning on TinyML Systems",2020,"","","","",519,"2024-08-22 15:04:59","","","","",,,,,385,96.25,39,13,4,"Deep learning inference on embedded devices is a burgeoning field with myriad applications because tiny embedded devices are omnipresent. But we must overcome major challenges before we can benefit from this opportunity. Embedded processors are severely resource constrained. Their nearest mobile counterparts exhibit at least a 100---1,000x difference in compute capability, memory availability, and power consumption. As a result, the machine-learning (ML) models and associated ML inference framework must not only execute efficiently but also operate in a few kilobytes of memory. Also, the embedded devices' ecosystem is heavily fragmented. To maximize efficiency, system vendors often omit many features that commonly appear in mainstream systems, including dynamic memory allocation and virtual memory, that allow for cross-platform interoperability. The hardware comes in many flavors (e.g., instruction-set architecture and FPU support, or lack thereof). We introduce TensorFlow Lite Micro (TF Micro), an open-source ML inference framework for running deep-learning models on embedded systems. TF Micro tackles the efficiency requirements imposed by embedded-system resource constraints and the fragmentation challenges that make cross-platform interoperability nearly impossible. The framework adopts a unique interpreter-based approach that provides flexibility while overcoming these challenges. This paper explains the design decisions behind TF Micro and describes its implementation details. Also, we present an evaluation to demonstrate its low resource requirement and minimal run-time performance overhead.","",""
195,"R. DeVaul, M. Sung, J. Gips, A. Pentland","MIThril 2003: applications and architecture",2003,"","","","",784,"2024-08-22 15:04:59","","10.1109/ISWC.2003.1241386","","",,,,,195,9.29,49,4,21,"In this paper we describe the MIThril 2003 wearablecomputing research platform. MIThril 2003 is a proven,accessible architecture that combines inexpensive,commodity hardware, a flexible sensor/peripheralinterconnection bus, and a powerful, light-weightdistributed sensing, classification, and inter-processcommunications software layer to facilitate thedevelopment of distributed real-time multimodal andcontext-aware applications.MIThril 2003 extends the previous MIThril modulararchitecture into the domain of large-scale wirelessgroup applications by leveraging the availability ofinexpensive Linux-based PDA hardware combined withinnovative open-source software and custom sensorhardware. We demonstrate the power and functionalityof MIThril 2003 by describing compelling real-worldwearable research applications created using MIThril2003 technology.","",""
46,"R. Duan, S. McHugh, B. Serfass, B. Mazin, A. Merrill, S. Golwala, T. Downes, N. Czakon, P. Day, Jiansong Gao, J. Glenn, M. Hollister, H. Leduc, P. Maloney, O. Noroozian, Hien Nguyen, J. Sayers, J. Schlaerth, S. Siegel, J. Vaillancourt, A. Vayonakis, P. Wilson, J. Zmuidzinas","An open-source readout for MKIDs",2010,"","","","",412,"2024-08-22 15:04:59","","10.1117/12.856832","","",,,,,46,3.29,5,23,14,"This paper will present the design, implementation, performance analysis of an open source readout system for arrays of microwave kinetic inductance detectors (MKID) for mm/submm astronomy. The readout system will perform frequency domain multiplexed real-time complex microwave transmission measurements in order to monitor the instantaneous resonance frequency and dissipation of superconducting microresonators. Each readout unit will be able to cover up to 550 MHz bandwidth and readout 256 complex frequency channels simultaneously. The digital electronics include the customized DAC, ADC, IF system and the FPGA based signal processing hardware developed by CASPER group.1-7 The entire system is open sourced, and can be customized to meet challenging requirement in many applications: e.g. MKID, MSQUID etc.","",""
47,"R. Gandhiraj, K. P. Soman","Modern analog and digital communication systems development using GNU Radio with USRP",2013,"","","","",789,"2024-08-22 15:04:59","","10.1007/s11235-013-9850-7","","",,,,,47,4.27,24,2,11,"","",""
347,"R. Gibb, Ella Browning, Paul Glover-Kapfer, Kate E. Jones","Emerging opportunities and challenges for passive acoustics in ecological assessment and monitoring",2018,"","","","",936,"2024-08-22 15:04:59","","10.1111/2041-210X.13101","","",,,,,347,57.83,87,4,6,"High‐throughput environmental sensing technologies are increasingly central to global monitoring of the ecological impacts of human activities. In particular, the recent boom in passive acoustic sensors has provided efficient, noninvasive, and taxonomically broad means to study wildlife populations and communities, and monitor their responses to environmental change. However, until recently, technological costs and constraints have largely confined research in passive acoustic monitoring (PAM) to a handful of taxonomic groups (e.g., bats, cetaceans, birds), often in relatively small‐scale, proof‐of‐concept studies. The arrival of low‐cost, open‐source sensors is now rapidly expanding access to PAM technologies, making it vital to evaluate where these tools can contribute to broader efforts in ecology and biodiversity research. Here, we synthesise and critically assess the current emerging opportunities and challenges for PAM for ecological assessment and monitoring of both species populations and communities. We show that terrestrial and marine PAM applications are advancing rapidly, facilitated by emerging sensor hardware, the application of machine learning innovations to automated wildlife call identification, and work towards developing acoustic biodiversity indicators. However, the broader scope of PAM research remains constrained by limited availability of reference sound libraries and open‐source audio processing tools, especially for the tropics, and lack of clarity around the accuracy, transferability and limitations of many analytical methods. In order to improve possibilities for PAM globally, we emphasise the need for collaborative work to develop standardised survey and analysis protocols, publicly archived sound libraries, multiyear audio datasets, and a more robust theoretical and analytical framework for monitoring vocalising animal communities.","",""
32,"R. Heradio, J. Chacón, H. Vargas, Daniel Galan, Jacobo Sáenz, L. de la Torre, S. Dormido","Open-Source Hardware in Education: A Systematic Mapping Study",2018,"","","","",41,"2024-08-22 15:04:59","","10.1109/ACCESS.2018.2881929","","",,,,,32,5.33,5,7,6,"The open-source hardware movement is becoming increasingly popular due to the emergence of successful low-cost technologies, such as Arduino and Raspberry Pi, and thanks to the community of makers that actively share their creations to be freely studied, modified, and re-distributed. Numerous authors have proposed distinct ways to seize this approach for accomplishing a variety of learning goals: enabling scholars to explore scientific concepts, promoting students’ creativity, helping them to be more fluent and expressive with new technologies, and so on. This paper reports a systematic mapping study that overviews the literature on open-source hardware in education by analyzing and classifying 676 publications. The results of our work provide: 1) guidance on the published material (identifying the most relevant papers, publication sources, institutions, and countries); 2) information about the pedagogical uses of open-source hardware (showing its main educational goals, stages, and topics where it is principally applied); and 3) directions for future research.","",""
32,"R. Höller, Dominic Haselberger, Dominik Ballek, Peter Rössler, Markus Krapfenbauer, M. Linauer","Open-Source RISC-V Processor IP Cores for FPGAs — Overview and Evaluation",2019,"","","","",222,"2024-08-22 15:04:59","","10.1109/MECO.2019.8760205","","",,,,,32,6.40,5,6,5,"Advances in semiconductor miniaturization are an important driver for Field Programmable Gate Arrays (FPGAs) since their invention in the 1980s. The increasing number of available on chip logic resources on one hand and on the other hand a decrease in part costs let the FPGA market grow steadily in recent years. It comes thus at no surprise that more and more microprocessors are integrated into programmable logic devices as they represent the central functionality in many digital systems. In parallel to these technological developments the open-source hardware community grew steadily in the last two decades. More than hundred open-source CPU cores can thus be found and selecting a core for a design project has to be done with care. In this work we thus want to focus on open-source 32-bit CPU IP cores suitable for FPGAs and which support the upcoming free and open RISC-V instruction set architecture that has some interesting advantages when compared to commercial CPU cores (as will be outlined in the paper). An overview on available projects and activities will be given and evaluation results for a selection of cores will be presented.","",""
790,"R. Kikinis, S. Pieper, K. Vosburgh","3D Slicer: A Platform for Subject-Specific Image Analysis, Visualization, and Clinical Support",2014,"","","","",934,"2024-08-22 15:04:59","","10.1007/978-1-4614-7657-3_19","","",,,,,790,79.00,263,3,10,"","",""
42,"R. Lange","evosax: JAX-Based Evolution Strategies",2022,"","","","",536,"2024-08-22 15:04:59","","10.1145/3583133.3590733","","",,,,,42,21.00,42,1,2,"The deep learning revolution has greatly been accelerated by the 'hardware lottery': Recent advances in modern hardware accelerators, compilers and the availability of open-source software paved the way for large-scale batch gradient optimization. Evolutionary optimization, on the other hand, has mainly relied on CPU-parallelism, e.g. using Dask scheduling and distributed multi-host infrastructure. Here we argue that also modern evolutionary computation can significantly benefit from the massive computational throughput provided by GPUs and TPUs. In order to better harness these resources and to enable the next generation of black-box optimization algorithms, we release evosax : A JAX-based library of evolution strategies which allows researchers to leverage powerful function transformations such as just-in-time compilation, automatic vectorization and hardware parallelization.1 evosax implements 30 evolutionary optimization algorithms including finite-difference-based, estimation-of-distribution evolution strategies and various genetic algorithms. Every single algorithm can directly be executed on hardware accelerators and automatically vectorized or parallelized across devices using a single line of code. It is designed in a modular fashion and allows for flexible usage via a simple ask-evaluate-tell API. We thereby hope to facilitate a new wave of scalable evolutionary optimization algorithms.","",""
20,"R. M. McKenzie, T. W. Barraclough, A. Stokes","Integrating Soft Robotics with the Robot Operating System: A Hybrid Pick and Place Arm",2017,"","","","",800,"2024-08-22 15:04:59","","10.3389/frobt.2017.00039","","",,,,,20,2.86,7,3,7,"Soft robotic systems present a variety of new opportunities for solving complex problems. The use of soft robotic grippers, for example, can simplify the complexity in tasks such as the grasping of irregular and delicate objects. Adoption of soft robotics by the Informatics community and industry, however, has been slow and this is, in-part, due to the amount of hardware and software that must be developed from scratch for each use of soft system components. In this paper we detail the design, fabrication and validation of an open-source framework that we designed to lower the barrier to entry for integrating soft robotic subsystems. This framework is built on ROS (the Robot Operating System) and we use it to demonstrate a modular, soft-hard hybrid system which is capable of completing pick and place tasks. By lowering this barrier to entry through our open sourced hardware and software we hope that system designers and Informatics researchers will find it easy to integrate soft components into their existing ROS-enabled robotic systems.","",""
61,"R. Mantiuk, Michał Kowalik, A. Nowosielski, Bartosz Bazyluk","Do-It-Yourself Eye Tracker: Low-Cost Pupil-Based Eye Tracker for Computer Graphics Applications",2012,"","","","",779,"2024-08-22 15:04:59","","10.1007/978-3-642-27355-1_13","","",,,,,61,5.08,15,4,12,"","",""
417,"R. Müller, J. Cannon, X. Qin, R. Watson, M. Gurnis, S. Williams, T. Pfaffelmoser, M. Seton, Samuel H. J. Russell, S. Zahirovic","GPlates: Building a Virtual Earth Through Deep Time",2018,"","","","",529,"2024-08-22 15:04:59","","10.1029/2018GC007584","","",,,,,417,69.50,42,10,6,"GPlates is an open‐source, cross‐platform plate tectonic geographic information system, enabling the interactive manipulation of plate‐tectonic reconstructions and the visualization of geodata through geological time. GPlates allows the building of topological plate models representing the mosaic of evolving plate boundary networks through time, useful for computing plate velocity fields as surface boundary conditions for mantle convection models and for investigating physical and chemical exchanges of material between the surface and the deep Earth along tectonic plate boundaries. The ability of GPlates to visualize subsurface 3‐D scalar fields together with traditional geological surface data enables researchers to analyze their relationships through geological time in a common plate tectonic reference frame. To achieve this, a hierarchical cube map framework is used for rendering reconstructed surface raster data to support the rendering of subsurface 3‐D scalar fields using graphics‐hardware‐accelerated ray‐tracing techniques. GPlates enables the construction of plate deformation zones—regions combining extension, compression, and shearing that accommodate the relative motion between rigid blocks. Users can explore how strain rates, stretching/shortening factors, and crustal thickness evolve through space and time and interactively update the kinematics associated with deformation. Where data sets described by geometries (points, lines, or polygons) fall within deformation regions, the deformation can be applied to these geometries. Together, these tools allow users to build virtual Earth models that quantitatively describe continental assembly, fragmentation and dispersal and are interoperable with many other mapping and modeling tools, enabling applications in tectonics, geodynamics, basin evolution, orogenesis, deep Earth resource exploration, paleobiology, paleoceanography, and paleoclimate.","",""
206,"R. Neugebauer, G. Antichi, J. F. Zazo, Yury Audzevich, S. López-Buedo, A. Moore","Understanding PCIe performance for end host networking",2018,"","","","",943,"2024-08-22 15:04:59","","10.1145/3230543.3230560","","",,,,,206,34.33,34,6,6,"In recent years, spurred on by the development and availability of programmable NICs, end hosts have increasingly become the enforcement point for core network functions such as load balancing, congestion control, and application specific network offloads. However, implementing custom designs on programmable NICs is not easy: many potential bottlenecks can impact performance. This paper focuses on the performance implication of PCIe, the de-facto I/O interconnect in contemporary servers, when interacting with the host architecture and device drivers. We present a theoretical model for PCIe and pcie-bench, an open-source suite, that allows developers to gain an accurate and deep understanding of the PCIe substrate. Using pcie-bench, we characterize the PCIe subsystem in modern servers. We highlight surprising differences in PCIe implementations, evaluate the undesirable impact of PCIe features such as IOMMUs, and show the practical limits for common network cards operating at 40Gb/s and beyond. Furthermore, through pcie-bench we gained insights which guided software and future hardware architectures for both commercial and research oriented network cards and DMA engines.","",""
39,"R. Paper, A. Nayyar, Vikram Puri","Raspberry Pi-A Small, Powerful, Cost Effective and Efficient Form Factor Computer: A Review",2016,"","","","",742,"2024-08-22 15:04:59","","","","",,,,,39,4.88,13,3,8,"—Raspberry Pi, an efficient and cost effective credit card sized computer comes under light of sun by United Kingdom-Raspberry Pi foundation with the aim to enlighten and empower computer science teaching in schools and other developing countries. Since its inception, various open source communities have contributed tons towards open source apps, operating systems and various other small form factor computers similar to Raspberry Pi. Till date, researchers, hobbyists and other embedded systems enthusiast across the planet are making amazing projects using Pi which looks unbelievable and have out-of-the-box implementation. Raspberry Pi since its launch is regularly under constant development cum improvement both in terms of hardware and software which in-turn making Pi a “Full Fledged Computer” with possibility to be considered for almost all computing intensive tasks. The aim of this research paper is to enlighten regarding what is Raspberry Pi, Why Raspberry Pi is Required, Generations of Raspberry Pi, operating systems available till date in Pi and other hardware available for project development. This paper will lay foundation for various open source communities across planet to become aware and use this credit card sized computer for making projects ranging from day to day activities to scientific and complex applications development.","",""
94,"R. Poussier, François-Xavier Standaert, Vincent Grosso","Simple Key Enumeration (and Rank Estimation) Using Histograms: An Integrated Approach",2016,"","","","",654,"2024-08-22 15:04:59","","10.1007/978-3-662-53140-2_4","","",,,,,94,11.75,31,3,8,"","",""
29,"R. Riggio, D. Miorandi, I. Chlamtac, N. Scalabrino, E. Gregori, F. Granelli, Yuguang Fang","Hardware and software solutions for wireless mesh network testbeds",2008,"","","","",657,"2024-08-22 15:04:59","","10.1109/MCOM.2008.4539480","","",,,,,29,1.81,4,7,16,"Wireless mesh networks are currently emerging as a promising technology for broadband ubiquitous networking. Typical applications range from home broadband Internet access and community networking to wireless metropolitan area networks. Many companies are currently active in this field with proprietary solutions mostly based on the IEEE 802.11 family of standards. At the same time, there are considerable efforts in academia aiming to provide real-world prototypes and testbeds based on open source software and off-the-shelf technologies. This article provides a survey on the most relevant hardware and software platforms that can be used to build a WMN testbed.","",""
32,"R. Spica, P. Giordano, Markus Ryll, H. Bülthoff, A. Franchi","An Open-Source Hardware/Software Architecture for Quadrotor UAVs",2013,"","","","",101,"2024-08-22 15:04:59","","10.3182/20131120-3-FR-4045.00006","","",,,,,32,2.91,6,5,11,"In this paper, we illustrate an open-source ready-to-use hardware/software archi- tecture for a quadrotor UAV. The presented platform is price effective, highly customizable, and easily exploitable by other researchers involved in high-level UAV control tasks and for educational purposes as well. The use of object-oriented programming and full support of Robot Operating System (ROS) and Matlab Simulink allows for an efficient customization, code reuse, functionality expansion and rapid prototyping of new algorithms. We provide an extensive illustration of the various UAV components and a thorough description of the main basic algorithms and calibration procedures. Finally, we present some experimental case studies aimed at showing the effectiveness of the proposed architecture.","",""
33,"R. V. Drunen, Dirk-Willem van Gulik","USENIX Association Proceedings of the FREENIX Track : 2003",2003,"","","","",870,"2024-08-22 15:04:59","","","","",,,,,33,1.57,17,2,21,"With the development of low cost hardware based on IEEE 802.11b, wireless networks are an emerging technology. Using these wireless techniques outdoors it is possible to build a community network not dependent on any provider. In the Netherlands such a network is being set up in and around Leiden. Using low cost network interfaces, home-built antennas and open source software the volunteers of the Wireless Leiden Foundation were able to lay out an infrastructure for the inhabitants of Leiden at a very low cost. All kinds of applications (for-proÞt and not-for-proÞt) are using this wireless network.","",""
239,"R. Vaughan, Brian P. Gerkey, A. Howard","On device abstractions for portable, reusable robot code",2003,"","","","",758,"2024-08-22 15:04:59","","10.1109/IROS.2003.1249233","","",,,,,239,11.38,80,3,21,"We seek to make robot programming more efficient by developing a standard abstract interface for robot hardware, based on familiar techniques from operating systems and network engineering. This paper describes the application of three well known abstractions, the character device model, the interface/driver model, and the client/server model to this purpose. These abstractions underlie Player/Stage, our open source project for rapid development of robot control systems. One product of this project is the Player Abstract Device Interface (PADI) specification, which defines a set of interfaces that capture the functionality of logically similar sensors and actuators. This specification is the central abstraction that enables Player-based controllers to run unchanged on a variety of real and simulated devices. We propose that PADI could be a starting point for development of a standard platform for robot interfacing, independent of Player, to enable code portability and re-use, while still providing access to the unique capabilities of individual devices.","",""
9,"R. Viseur","From Open Source Software to Open Source Hardware",2012,"","","","",134,"2024-08-22 15:04:59","","10.1007/978-3-642-33442-9_23","","",,,,,9,0.75,9,1,12,"","",""
260,"R. Watson, Jonathan Woodruff, P. Neumann, S. Moore, Jonathan Anderson, D. Chisnall, Nirav H. Dave, Brooks Davis, Khilan Gudka, B. Laurie, S. Murdoch, Robert M. Norton, M. Roe, Stacey D. Son, Munraj Vadera","CHERI: A Hybrid Capability-System Architecture for Scalable Software Compartmentalization",2015,"","","","",567,"2024-08-22 15:04:59","","10.1109/SP.2015.9","","",,,,,260,28.89,26,15,9,"CHERI extends a conventional RISC Instruction-Set Architecture, compiler, and operating system to support fine-grained, capability-based memory protection to mitigate memory-related vulnerabilities in C-language TCBs. We describe how CHERI capabilities can also underpin a hardware-software object-capability model for application compartmentalization that can mitigate broader classes of attack. Prototyped as an extension to the open-source 64-bit BERI RISC FPGA soft-core processor, Free BSD operating system, and LLVM compiler, we demonstrate multiple orders-of-magnitude improvement in scalability, simplified programmability, and resulting tangible security benefits as compared to compartmentalization based on pure Memory-Management Unit (MMU) designs. We evaluate incrementally deployable CHERI-based compartmentalization using several real-world UNIX libraries and applications.","",""
12,"Rafael Apolinar Bórquez López, L. R. Martínez Córdova, Juan Carlos Gil Nuñez, Jose Reyes Gonzalez Galaviz, Jose Cuauhtemoc Ibarra Gamez, Ramon Casillas Hernandez","Implementation and Evaluation of Open-Source Hardware to Monitor Water Quality in Precision Aquaculture",2020,"","","","",18,"2024-08-22 15:04:59","","10.3390/s20216112","","",,,,,12,3.00,2,6,4,"Precision aquaculture is a new field that allows farmers to have better control over aquaculture processes, facilitating decision-making and improving efficiency. The implementation and evaluation of a low-cost water-quality monitoring system based on open-source hardware, which is easy to rebuild for scientific applications, is reported in this paper. The proposed system measures temperature, dissolved oxygen, and pH, taking records and sending information through a wireless protocol (ZigBee) to a graphical user interface which can display information numerically and graphically, as well as simultaneously storing the information in a database. These variables are very important for aquaculture, as they have a direct influence on critical culture parameters such as growth and survival. Although it is a low-cost system, it offers good quality data and demonstrates efficiency for its use in precision aquaculture.","",""
5,"Rafaella Antoniou, R. Pinquié, J. Boujut, A. Ezoji, E. Dekoninck","IDENTIFYING THE FACTORS AFFECTING THE REPLICABILITY OF OPEN SOURCE HARDWARE DESIGNS",2021,"","","","",11,"2024-08-22 15:04:59","","10.1017/pds.2021.443","","",,,,,5,1.67,1,5,3,"Abstract Open-source hardware (OSH) development is a new design paradigm from a commercial perspective. Openly sharing designs of technical products is a step towards democratising access to new technologies for the benefit of individuals and communities in society. At the core of the open-source hardware definition lies the freedom for anyone to replicate the hardware based on the design. Thus, enabling this freedom is a step towards developing a successful OSH. Previous research supposes that a bill of materials and assembly instructions are enough for this. In this study, we question this assumption and investigate what other factors may influence replicability of an OSH. Using data from a survey and interviews with OSH practitioners, we identify and describe these factors, which relate to the documentation, the design and the context of the person replicating the hardware. Using these insights, we present a diagram of the replication process along with questions the person replicating the hardware would ask to check whether an OSH is replicable. Finally, we synthesise this information into practical advice for OSH projects to increase the replicability of the designs they produce, and thus the likelihood of their project's success.","",""
7,"Rajeev Piyare, A. Murphy, Michele Magno, L. Benini","KRATOS: An Open Source Hardware-Software Platform for Rapid Research in LPWANs",2018,"","","","",53,"2024-08-22 15:04:59","","10.1109/WiMOB.2018.8589171","","",,,,,7,1.17,2,4,6,"Long-range (LoRa) radio technologies have recently gained momentum in the IoT landscape, allowing low-power communications over distances up to several kilometers. As a result, more and more LoRa networks are being deployed. However, commercially available LoRa devices are expensive and propriety, creating a barrier to entry and possibly slowing down developments and deployments of novel applications. Using open-source hardware and software platforms would allow more developers to test and build intelligent devices resulting in a better overall development ecosystem, lower barriers to entry, and rapid growth in the number of IoT applications. Toward this goal, this paper presents the design, implementation, and evaluation of KRATOS, a low-cost LoRa platform running ContikiOS. Both, our hardware and software designs are released as an open-source to the research community.","",""
112,"Raymond R. Ma, A. Dollar","Yale OpenHand Project: Optimizing Open-Source Hand Designs for Ease of Fabrication and Adoption",2017,"","","","",252,"2024-08-22 15:04:59","","10.1109/MRA.2016.2639034","","",,,,,112,16.00,56,2,7,"Although grasping and manipulation are key aspects of a robotic system's functionality, researchers often only have a limited selection of end effectors compatible with their manipulator base. This may either restrict the robotic system's full range of capabilities or force researchers to compensate for the end effector's intrinsic mechanical disadvantages through compensatory, nonoptimal control strategies. Advances in three-dimensional (3-D) printing have enabled researchers to quickly customize mechanisms for specific tasks, but the end product is usually not intended for extended use. It would be beneficial to identify strategies to augment the capabilities of additive manufacturing techniques to allow the easy and inexpensive construction of durable and functional hardware. To that end, this article details work on the Yale OpenHand Project, a library of lowcost, 3-D-printed, underactuated hand designs for researchers to freely implement and modify for their own use cases. The designs use cast flexural joints made via the hybrid deposition manufacturing (HDM) process to produce robust, impact-resistant subcomponents and help account for the structural shortcomings of fused deposition manufacturing (FDM). Several of these design examples are presented, evaluated, and compared with commercial alternatives. We hope that providing an accessible and extensible set of open-source hand designs will improve the iterative design process and produce many more options for researchers to utilize.","",""
23,"Reza Rahimi, Elaheh Sadredini, Mircea R. Stan, K. Skadron","Grapefruit: An Open-Source, Full-Stack, and Customizable Automata Processing on FPGAs",2020,"","","","",207,"2024-08-22 15:04:59","","10.1109/FCCM48280.2020.00027","","",,,,,23,5.75,6,4,4,"Regular expressions have been widely used in various application domains such as network security, machine learning, and natural language processing. Increasing demand for accelerated regular expressions, or equivalently finite automata, has motivated many efforts in designing FPGA accelerators. However, there is no framework that is publicly available, comprehensive, parameterizable, general, full-stack, and easy-touse, all in one, for design space exploration for a wide range of growing pattern matching applications on FPGAs. In this paper, we present Grapefruit, the first open-source, full-stack, efficient, scalable, and extendable automata processing framework on FPGAs. Grapefruit is equipped with an integrated compiler with many parameters for automata simulation, verification, minimization, transformation, and optimizations. Our modular and standard design allows researchers to add capabilities and explore various features for a target application. Our experimental results show that the hardware generated by Grapefruit performs 9%80% better than prior work that is not fully end-to-end and has 3.4 × higher throughput in a multi-stride solution than a single-stride solution.","",""
47,"Rich MacDonald, Sean W. Smith, J. Marchesini, Omen Wild","Bear: An Open-Source Virtual Secure Coprocessor based on TCPA",2003,"","","","",459,"2024-08-22 15:04:59","","","","",,,,,47,2.24,12,4,21,"This paper reports on our ongoing project to use TCPA to transform a desktop Linux machine into a virtual secure coprocessor: more powerful but less secure than higher-end devices. We use TCPA hardware and modified boot loaders to protect fairly static components, such as a trusted kerne l; we use an enforcer module—configured as Linux Security Module—to protected more dynamic system components; we use an encrypted loopback filesystem to protect highly dynamic components. All our code is open source and available under GPL fromhttp://enforcer.sourceforge.net/.","",""
51,"Richard Membarth, Frank Hannig, J. Teich, M. Körner, Wieland Eckert","Generating Device-specific GPU Code for Local Operators in Medical Imaging",2012,"","","","",816,"2024-08-22 15:04:59","","10.1109/IPDPS.2012.59","","",,,,,51,4.25,10,5,12,"To cope with the complexity of programming GPU accelerators for medical imaging computations, we developed a framework to describe image processing kernels in a domain-specific language, which is embedded into C++. The description uses decoupled access/execute metadata, which allow the programmer to specify both execution constraints and memory access patterns of kernels. A source-to-source compiler translates this high-level description into low-level CUDA and Open CL code with automatic support for boundary handling and filter masks. Taking the annotated metadata and the characteristics of the parallel GPU execution model into account, two-layered parallel implementations - utilizing SPMD and MPMD parallelism - are generated. An abstract hardware model of graphics card architectures allows to model GPUs of multiple vendors like AMD and NVIDIA, and to generate device-specific code for multiple targets. It is shown that the generated code is faster than manual implementations and those relying on hardware support for boundary handling. Implementations from Rapid Mind, a commercial framework for GPU programming, are outperformed and similar results achieved compared to the GPU backend of the widely used image processing library Open CV.","",""
5,"Richard W. Bowman","Improving instrument reproducibility with open source hardware",2023,"","","","",4,"2024-08-22 15:04:59","","10.1038/s43586-023-00218-x","","",,,,,5,5.00,5,1,1,"","",""
60,"Risa J. Lin, Jonathan C. Bettencourt, J. White, D. Christini, R. Butera","Real-time Experiment Interface for biological control applications",2010,"","","","",822,"2024-08-22 15:04:59","","10.1109/IEMBS.2010.5627397","","",,,,,60,4.29,12,5,14,"The Real-time Experiment Interface (RTXI) is a fast and versatile real-time biological experimentation system based on Real-Time Linux. RTXI is open source and free, can be used with an extensive range of experimentation hardware, and can be run on Linux or Windows computers (when using the Live CD). RTXI is currently used extensively for two experiment types: dynamic patch clamp and closed-loop stimulation pattern control in neural and cardiac single cell electrophysiology. RTXI includes standard plug-ins for implementing commonly used electrophysiology protocols with synchronized stimulation, event detection, and online analysis. These and other user-contributed plug-ins can be found on the website (http://www.rtxi.org).","",""
21,"Ritesh Soni, Neil Steiner, M. French","Open-Source Bitstream Generation",2013,"","","","",365,"2024-08-22 15:04:59","","10.1109/FCCM.2013.45","","",,,,,21,1.91,7,3,11,"This work presents an open-source bitstream generation tool for Torc. Bitstream generation has traditionally been the single part of the FPGA design flow that could not be openly reproduced, but our novel approach enables this without reverse-engineering or violating End-User License Agreement terms. We begin by creating a library of “micro-bitstreams” which constitute a collection of primitives at a granularity of our choosing. These primitives can then be combined to create larger designs, or portions thereof, with simple merging operations. Our effort is motivated by a desire to resume earlier work on embedded bitstream generation and autonomous hardware. This is not feasible with Xilinx bitgen because there is no reasonable way to run an x86 binary with complex library and data dependencies on most embedded systems. Initial support is limited to the Virtex5, but we intend to extend this to other Xilinx architectures. We are able to support nearly all routing resources in the device, as well as the most common logic resources.","",""
31,"Robayet Nasim, A. Kassler","Deploying OpenStack: Virtual Infrastructure or Dedicated Hardware",2014,"","","","",503,"2024-08-22 15:04:59","","10.1109/COMPSACW.2014.18","","",,,,,31,3.10,16,2,10,"Cloud computing is a computing model through which resources such as - infrastructure, applications or software are offered as services to the users. Cloud computing offers the opportunity of virtualization through deploying multiple virtual machines (VMs) on single physical machine, which increases resource utilization and reduces power consumption. The main benefit of a virtualized technology relies on its on-demand resource allocation strategy and flexible management. Open Stack is one of the promising open source solutions which offers infrastructure as a service. This paper covers how underlying infrastructure for deployment affects the performance of Open Stack. The aim is to provide a comparative view on the performance of Open Stack while deploying it over a virtual environment versus using dedicated hardware. We conduct three basic tests on both environments to check CPU performance, data transfer rate, and bandwidth. The results show that Open Stack over dedicated hardware performs much better than Open Stack over virtualized environment.","",""
42,"Robert MacDavid, C. Cascone, Pingping Lin, Badhrinath Padmanabhan, A. Thakur, Larry L. Peterson, J. Rexford, Oguz Sunay","A P4-based 5G User Plane Function",2021,"","","","",586,"2024-08-22 15:04:59","","10.1145/3482898.3483358","","",,,,,42,14.00,5,8,3,"The demands on mobile networks are constantly evolving, but designing and integrating new high-speed packet processing remains a challenge due to the complexity of requirements and opacity of protocol specifications. 5G data planes should be implemented in programmable hardware for both speed and flexibility, and extending or replacing these data planes should be painless. In this paper we implement the 5G data plane using two P4 programs: one that acts as a open-source model data plane to simplify the interface with the control plane, and one to run efficiently on hardware switches to minimize latency and maximize bandwidth. The model data plane enables testing changes made to the control plane before integrating with a performant data plane, and vice versa. The hardware data plane implements the fast path for device traffic, and makes use of microservices to implement functions that highspeed switch hardware cannot do. Our data plane implementation is currently in limited deployment on three university campuses where it is enabling new research on mobile networks.","",""
7,"Robert Mies, J. Bonvoisin, R. Jochem","Harnessing the Synergy Potential of Open Source Hardware Communities",2018,"","","","",52,"2024-08-22 15:04:59","","10.1007/978-3-319-97788-1_11","","",,,,,7,1.17,2,3,6,"","",""
29,"Robert S. Smith, E. C. Peterson, Mark G. Skilbeck, Erik J. Davis","An open-source, industrial-strength optimizing compiler for quantum programs",2020,"","","","",202,"2024-08-22 15:04:59","","10.1088/2058-9565/ab9acb","","",,,,,29,7.25,7,4,4,"Quilc is an open-source, optimizing compiler for gate-based quantum programs written in Quil or QASM, two popular quantum programming languages. The compiler was designed with attention toward NISQ-era quantum computers, specifically recognizing that each quantum gate has a non-negligible and often irrecoverable cost toward a program’s successful execution. Quilc’s primary goal is to make authoring quantum software a simpler exercise by making architectural details less burdensome to the author. Using Quilc allows one to write programs faster while usually not compromising—and indeed sometimes improving—their execution fidelity on a given hardware architecture. In this paper, we describe many of the principles behind Quilc’s design, and demonstrate the compiler with various examples.","",""
228,"Roberto Morabito, Vittorio Cozzolino, A. Ding, N. Beijar, J. Ott","Consolidate IoT Edge Computing with Lightweight Virtualization",2018,"","","","",946,"2024-08-22 15:04:59","","10.1109/MNET.2018.1700175","","",,,,,228,38.00,46,5,6,"Lightweight virtualization (LV) technologies have refashioned the world of software development by introducing flexibility and new ways of managing and distributing software. Edge computing complements today's powerful centralized data centers with a large number of distributed nodes that provide virtualization close to the data source and end users. This emerging paradigm offers ubiquitous processing capabilities on a wide range of heterogeneous hardware characterized by different processing power and energy availability. The scope of this article is to present an in-depth analysis on the requirements of edge computing from the perspective of three selected use cases that are particularly interesting for harnessing the power of the Internet of Things. We discuss and compare the applicability of two LV technologies, containers and unikernels, as platforms for enabling the scalability, security, and manageability required by such pervasive applications that soon may be part of our everyday lives. To inspire further research, we identify open problems and highlight future directions to serve as a road map for both industry and academia.","",""
85,"Robin C. Whytock, J. Christie","Solo: an open source, customizable and inexpensive audio recorder for bioacoustic research",2017,"","","","",268,"2024-08-22 15:04:59","","10.1111/2041-210X.12678","","",,,,,85,12.14,43,2,7,"Audio recorders are widely used in terrestrial and marine ecology and are essential for studying many cryptic or elusive taxa. Although several commercial systems are available, they are often expensive and are rarely user‐serviceable or easily customized. Here, we present the Solo audio recorder. Units are constructed from the Raspberry Pi single board computer and run easy‐to‐install and freely available software. We provide an example configuration costing £167 (£83 excluding suggested memory card and battery), which records audible sound continuously for c. 40 days. We also provide a video tutorial showing hardware assembly and documentation is available via a supporting website. The Solo recorder has been extensively field tested in temperate and tropical regions, with over 50 000 h of audio collected to date. This highly customizable and inexpensive system could greatly increase the scale and ease of conducting bioacoustic studies.","",""
16,"Robin P. G. Tech, Jan-Peter Ferdinand, Martina Dopfer","Open Source Hardware Startups and Their Communities",2016,"","","","",79,"2024-08-22 15:04:59","","10.1007/978-3-319-31686-4_7","","",,,,,16,2.00,5,3,8,"","",""
86,"Roy Fisher, Lehlogonolo P. I. Ledwaba, G. Hancke, C. Kruger","Open Hardware: A Role to Play in Wireless Sensor Networks?",2015,"","","","",894,"2024-08-22 15:04:59","","10.3390/s150306818","","",,,,,86,9.56,22,4,9,"The concept of the Internet of Things is rapidly becoming a reality, with many applications being deployed within industrial and consumer sectors. At the ‘thing’ level—devices and inter-device network communication—the core technical building blocks are generally the same as those found in wireless sensor network implementations. For the Internet of Things to continue growing, we need more plentiful resources for building intelligent devices and sensor networks. Unfortunately, current commercial devices, e.g., sensor nodes and network gateways, tend to be expensive and proprietary, which presents a barrier to entry and arguably slows down further development. There are, however, an increasing number of open embedded platforms available and also a wide selection of off-the-shelf components that can quickly and easily be built into device and network gateway solutions. The question is whether these solutions measure up to built-for-purpose devices. In the paper, we provide a comparison of existing built-for-purpose devices against open source devices. For comparison, we have also designed and rapidly prototyped a sensor node based on off-the-shelf components. We show that these devices compare favorably to built-for-purpose devices in terms of performance, power and cost. Using open platforms and off-the-shelf components would allow more developers to build intelligent devices and sensor networks, which could result in a better overall development ecosystem, lower barriers to entry and rapid growth in the number of IoT applications.","",""
14,"Rui Jia, Colin Yu Lin, Zhenhong Guo, R. Chen, Fei Wang, Tongqiang Gao, Haigang Yang","A survey of open source processors for FPGAs",2014,"","","","",340,"2024-08-22 15:04:59","","10.1109/FPL.2014.6927482","","",,,,,14,1.40,2,7,10,"FPGA-based SoCs have been gaining great favors among traditional applications and expanding the application domains to some new areas. Reusing and sharing components is an attractive and pratical methodology for system designers to reduce the design complexity of the SoC architectures. Open source hardware has become an effective method of improving the design productivity. As the core functional component, processors affects the performance of SoC systems. This paper investigates existing open source processors, and gives an overview. From the points of usability and stability, the main features of open source processors are summarized. Following these features, some open source processors with high usability and stability are selected. These open source processors and existing vendor-provided soft processors are implemented on Stratix V and Virtex-7 FPGAs using corresponding EDA tools, Quart us n and ISE. The implementation results are compared and discussed.","",""
389,"Ruihao Gong, Xianglong Liu, Shenghu Jiang, Tian-Hao Li, Peng Hu, Jiazhen Lin, F. Yu, Junjie Yan","Differentiable Soft Quantization: Bridging Full-Precision and Low-Bit Neural Networks",2019,"","","","",955,"2024-08-22 15:04:59","","10.1109/ICCV.2019.00495","","",,,,,389,77.80,49,8,5,"Hardware-friendly network quantization (e.g., binary/uniform quantization) can efﬁciently accelerate the inference and meanwhile reduce memory consumption of the deep neural networks, which is crucial for model deployment on resource-limited devices like mobile phones. However, due to the discreteness of low-bit quantization, existing quantization methods often face the unstable training process and severe performance degradation. To address this problem, in this paper we propose Differentiable Soft Quantization (DSQ) to bridge the gap between the full-precision and low-bit networks. DSQ can automatically evolve during training to gradually approximate the standard quantization. Owing to its differentiable property, DSQ can help pursue the accurate gradients in backward propagation, and reduce the quantization loss in forward process with an appropriate clipping range. Extensive experiments over several popular network structures show that training low-bit neural networks with DSQ can consistently outperform state-of-the-art quantization methods. Besides, our ﬁrst efﬁcient implementation for deploying 2 to 4-bit DSQ on devices with ARM architecture achieves up to 1.7× speed up, compared with the open-source 8-bit high-performance inference framework NCNN [31].","",""
70,"Rupinder Singh, Ranvijay Kumar, N. Ranjan","Sustainability of Recycled ABS and PA6 by Banana Fiber Reinforcement: Thermal, Mechanical and Morphological Properties",2019,"","","","",634,"2024-08-22 15:04:59","","10.1007/S40032-017-0435-1","","",,,,,70,14.00,23,3,5,"","",""
53,"Ryan Lee","Scalability Report on Triple Store Applications",2004,"","","","",860,"2024-08-22 15:04:59","","","","",,,,,53,2.65,53,1,20,"This report examines a set of open source triple store systems suitable for The SIMILE Project’s browser-like applications. Measurements on performance within a common hardware, software, and dataset environment grant insight on which systems hold the most promise for acting as large, remote backing stores for SIMILE’s future requirements. The SIMILE Project (Semantic Interoperability of Metadata In like and Unlike Environments) is a joint research project between the World Wide Web Consortium (W3C), Hewlett-Packard Labs (HP), the Massachusetts Institute of Technology / Computer Science and Artificial Intelligence Laboratory (MIT / CSAIL), and MIT Libraries. Funding is provided by HP.","",""
27,"Rémi Busseuil, L. Barthe, G. M. Almeida, Luciano Ost, Florent Bruguier, G. Sassatelli, P. Benoit, M. Robert, L. Torres","Open-Scale: A Scalable, Open-Source NOC-based MPSoC for Design Space Exploration",2011,"","","","",394,"2024-08-22 15:04:59","","10.1109/ReConFig.2011.66","","",,,,,27,2.08,3,9,13,"As complexity of embedded system increases, configurable hardware is becoming more attractive because it provides a fast and efficient basis for design development. As a consequence, one of the most promising embedded architecture consists in the replication of Processing Elements (PEs) connected through a Network-on-Chip (NoC). Such architectures provide computation parallelism, scalability, and reduced design time thanks to reusability. This paper describes the development of a scalable, distributed memory, open source NoC-based platform called Open-Scale and its implementation into FPGA devices. The main objective of this platform is to provide a complete framework for research development on NoC-based distributed memory MPSoCs.","",""
23,"Rüdiger Göbl, Nassir Navab, C. Hennersperger","SUPRA: open-source software-defined ultrasound processing for real-time applications",2017,"","","","",281,"2024-08-22 15:04:59","","10.1007/s11548-018-1750-6","","",,,,,23,3.29,8,3,7,"","",""
64,"S. Alexander Chin, Jason H. Anderson","An Architecture-Agnostic Integer Linear Programming Approach to CGRA Mapping",2018,"","","","",669,"2024-08-22 15:04:59","","10.1145/3195970.3195986","","",,,,,64,10.67,32,2,6,"Coarse-grained reconfigurable architectures (CGRAs) have gained traction as a potential solution to implement accelerators for compute-intensive kernels, particularly in domains requiring hardware programmability. Architecture and CAD for CGRAs are tightly intertwined, with many prior works having combined architectures and tools. In this work, we present an architecture-agnostic integer linear programming (ILP) approach for CGRA mapping, integrated within an open-source CGRA architecture evaluation framework. The mapper accepts an application and an architecture description as input and can generate an optimal mapping, if indeed mapping is feasible. An experimental study demonstrates its effectiveness over a range of CGRA architectures.","",""
39,"S. Balakirsky, Z. Kootbally","USARSim/ROS: A Combined Framework for Robotic Control and Simulation",2012,"","","","",818,"2024-08-22 15:04:59","","10.1115/ISFA2012-7179","","",,,,,39,3.25,20,2,12,"The Robot Operating System (ROS) is steadily gaining popularity among robotics researchers as an open source framework for robot control. Additionally, the Unified System for Automation and Robot Simulation (USARSim) has already been used for many years by robotics researchers and developers as a validated framework for simulation. This paper presents a new ROS node that is designed to seamlessly interface between ROS and USARSim. It provides for automatic configuration of ROS transforms and topics to allow for full utilization of the simulated hardware. The design of the new node, as well as examples of its use for mobile robot and robotic arm control are presented.Copyright © 2012 by ASME","",""
76,"S. Barrett","Arduino Microcontroller: Processing for Everyone! Second Edition",2012,"","","","",749,"2024-08-22 15:04:59","","10.1007/978-3-031-79846-7","","",,,,,76,6.33,76,1,12,"","",""
90,"S. C. Jacobson, Sergey V. Ermakov, J. Ramsey","Minimizing the number of voltage sources and fluid reservoirs for electrokinetic valving in microfluidic devices.",1999,"","","","",847,"2024-08-22 15:04:59","","10.1021/ac990059s","","",,,,,90,3.60,30,3,25,"A microchip gated valve is demonstrated that uses a single voltage source and three fluid reservoirs. The fluidic valve is a cross intersection, and the channels are dimensioned to perform the appropriate voltage division, simplifying the voltage control hardware. A single voltage source is applied directly to the sample reservoir and through a high-voltage relay to the buffer reservoir, and the waste reservoir is grounded. The volume of sample dispensed is determined by the duration that the high-voltage relay is open. Volumetric reproducibility is demonstrated to be <0.5% relative standard deviation for volumes of ≥20 pL. The valve is tested for the minimum applied voltage necessary for leakage-free operation, i.e., sample diffusing from the cross intersection into the analysis channel. Moreover, appropriate channel dimensions are used to minimize the number of fluid reservoirs allowing effluent from the analysis and waste channels to be combined into a single reservoir.","",""
27,"S. Davidson","Open-source hardware",2004,"","","","",3,"2024-08-22 15:04:59","","10.1109/MDT.2004.68","","",,,,,27,1.35,27,1,20,"Open-source software has made great strides. You can now buy a machine with an open-source operating system, browser, and office productivity package. Recent reports have recommended users switch to open-source browsers, away from less-secure commercial ones. The market for these products is growing rapidly.","",""
155,"S. Duquennoy, G. Grimaud, J. Vandewalle","The Web of Things: Interconnecting Devices with High Usability and Performance",2009,"","","","",741,"2024-08-22 15:04:59","","10.1109/ICESS.2009.13","","",,,,,155,10.33,52,3,15,"In this paper, we show that Web protocols and technologies are good candidates to design the Internet of Things. This approach allows anyone to access embedded devices through a Web application, via a standard Web browser. This Web of Things requires to embed Web servers in hardware-constrained devices. We first analyze the traffics embedded Web servers have to handle. Starting from this analysis, we propose a new way to design embedded Web servers, using a dedicated TCP/IP stack and numerous cross-layer off-line pre-calculation (where information are shared between IP, TCP, HTTP and the Web application). We finally present a prototype -- named Smews -- as a proof of concept of our proposals. It has been embedded in tiny devices (smart cards, sensors and other embedded devices), with a requirement of only 200~bytes of RAM and 7~kilo-bytes of code. We show that it is significantly faster than other state of the art solutions. We made Smews source code publically available under an open-source license.","",""
59,"S. F. Mjølsnes, Ruxandra F. Olimid","Easy 4G/LTE IMSI Catchers for Non-Programmers",2017,"","","","",698,"2024-08-22 15:04:59","","10.1007/978-3-319-65127-9_19","","",,,,,59,8.43,30,2,7,"","",""
38,"S. Intille, F. Albinali, Selene Mota, B. Kuris, Pilar Botana, W. Haskell","Design of a wearable physical activity monitoring system using mobile phones and accelerometers",2011,"","","","",833,"2024-08-22 15:04:59","","10.1109/IEMBS.2011.6090611","","",,,,,38,2.92,6,6,13,"This paper describes the motivation for, and overarching design of, an open-source hardware and software system to enable population-scale, longitudinal measurement of physical activity and sedentary behavior using common mobile phones. The “Wockets” data collection system permits researchers to collect raw motion data from participants who wear multiple small, comfortable sensors for 24 hours per day, including during sleep, and monitor data collection remotely.","",""
18,"S. Karandikar, Albert J. Ou, Alon Amid, Howard Mao, R. Katz, B. Nikolić, K. Asanović","FirePerf: FPGA-Accelerated Full-System Hardware/Software Performance Profiling and Co-Design",2020,"","","","",403,"2024-08-22 15:04:59","","10.1145/3373376.3378455","","",,,,,18,4.50,3,7,4,"Achieving high-performance when developing specialized hardware/software systems requires understanding and improving not only core compute kernels, but also intricate and elusive system-level bottlenecks. Profiling these bottlenecks requires both high-fidelity introspection and the ability to run sufficiently many cycles to execute complex software stacks, a challenging combination. In this work, we enable agile full-system performance optimization for hardware/software systems with FirePerf, a set of novel out-of-band system-level performance profiling capabilities integrated into the open-source FireSim FPGA-accelerated hardware simulation platform. Using out-of-band call stack reconstruction and automatic performance counter insertion, FirePerf enables introspecting into hardware and software at appropriate abstraction levels to rapidly identify opportunities for software optimization and hardware specialization, without disrupting end-to-end system behavior like traditional profiling tools. We demonstrate the capabilities of FirePerf with a case study that optimizes the hardware/software stack of an open-source RISC-V SoC with an Ethernet NIC to achieve 8x end-to-end improvement in achievable bandwidth for networking applications running on Linux. We also deploy a RISC-V Linux kernel optimization discovered with FirePerf on commercial RISC-V silicon, resulting in up to 1.72x improvement in network performance.","",""
35,"S. Karandikar, Chris Leary, Chris Kennelly, Jerry Zhao, Dinesh Parimi, B. Nikolić, K. Asanović, Parthasarathy Ranganathan","A Hardware Accelerator for Protocol Buffers",2021,"","","","",358,"2024-08-22 15:04:59","","10.1145/3466752.3480051","","",,,,,35,11.67,4,8,3,"Serialization frameworks are a fundamental component of scale-out systems, but introduce significant compute overheads. However, they are amenable to acceleration with specialized hardware. To understand the trade-offs involved in architecting such an accelerator, we present the first in-depth study of serialization framework usage at scale by profiling Protocol Buffers (“protobuf”) usage across Google’s datacenter fleet. We use this data to build HyperProtoBench, an open-source benchmark representative of key serialization-framework user services at scale. In doing so, we identify key insights that challenge prevailing assumptions about serialization framework usage. We use these insights to develop a novel hardware accelerator for protobufs, implemented in RTL and integrated into a RISC-V SoC. Applications can easily harness the accelerator, as it integrates with a modified version of the open-source protobuf library and is wire-compatible with standard protobufs. We have fully open-sourced our RTL, which, to the best of our knowledge, is the only such implementation currently available to the community. We also present a first-of-its-kind, end-to-end evaluation of our entire RTL-based system running hyperscale-derived benchmarks and microbenchmarks. We boot Linux on the system using FireSim to run these benchmarks and implement the design in a commercial 22nm FinFET process to obtain area and frequency metrics. We demonstrate an average 6.2 × to 11.2 × performance improvement vs. our baseline RISC-V SoC with BOOM OoO cores and despite the RISC-V SoC’s weaker uncore/supporting components, an average 3.8 × improvement vs. a Xeon-based server.","",""
130,"S. Kaur, Japinder Singh, Navtej S. Ghumman","Network Programmability Using POX Controller",2014,"","","","",639,"2024-08-22 15:04:59","","","","",,,,,130,13.00,43,3,10,"POX is a Python based open source OpenFlow/Software Defined Networking (SDN) Controller. POX is used for faster development and prototyping of new network applications. POX controller comes pre installed with the mininet virtual machine. Using POX controller you can turn dumb openflow devices into hub, switch, load balancer, firewall devices. The POX controller allows easy way to run OpenFlow/SDN experiments. POX can be passed different parameters according to real or experimental topologies, thus allowing you to run experiments on real hardware, testbeds or in mininet emulator. In this paper, first section will contain introduction about POX, OpenFlow and SDN, then discussion about relationship between POX and Mininet. Final Sections will be regarding creating and verifying behavior of network applications in POX.","",""
17,"S. Kernbach","Swarmrobot.org - Open-hardware Microrobotic Project for Large-scale Artificial Swarms",2011,"","","","",495,"2024-08-22 15:04:59","","","","",,,,,17,1.31,17,1,13,"The purpose of this paper is to give an overview of the open-hardware microrobotic project swarmrobot.org and the platform Jasmine for building large-scale artificial swarms. The project targets an open development of cost-effective hardware and software for a quick implementation of swarm behavior with real robots. Detailed instructions for making the robot, open-source simulator, software libraries and multiple publications about performed experiments are ready for download and intend to facilitate exploration of collective and emergent phenomena, guided self-organization and swarm robotics in experimental way.","",""
86,"S. Laine, Tero Karras","High-performance software rasterization on GPUs",2011,"","","","",999,"2024-08-22 15:04:59","","10.1145/2018323.2018337","","",,,,,86,6.62,43,2,13,"In this paper, we implement an efficient, completely software-based graphics pipeline on a GPU. Unlike previous approaches, we obey ordering constraints imposed by current graphics APIs, guarantee hole-free rasterization, and support multisample antialiasing. Our goal is to examine the performance implications of not exploiting the fixed-function graphics pipeline, and to discern which additional hardware support would benefit software-based graphics the most.  We present significant improvements over previous work in terms of scalability, performance, and capabilities. Our pipeline is malleable and easy to extend, and we demonstrate that in a wide variety of test cases its performance is within a factor of 2--8x compared to the hardware graphics pipeline on a top of the line GPU.  Our implementation is open sourced and available at http://code.google.com/p/cudaraster/","",""
64,"S. Laux, Gurjashan Singh Pannu, Stefan Schneider, J. Tiemann, Florian Klingler, C. Sommer, F. Dressler","Demo: OpenC2X — An open source experimental and prototyping platform supporting ETSI ITS-G5",2016,"","","","",283,"2024-08-22 15:04:59","","10.1109/VNC.2016.7835955","","",,,,,64,8.00,9,7,8,"Vehicular networking is at the corner from early research to final deployment. This phase requires more field testing and real-world experimentation. Most Field Operational Tests (FOTs) are based on proprietary commercial hardware that only allows for marginal modifications of the protocol stack. Furthermore, the roll-out of updated implementations for new or changing protocol standards often takes a prohibitively long time. We developed one of the first complete Open Source experimental and prototyping platform for vehicular networking solutions. Our system supports most of the ETSI ITS-G5 features and runs on standard Linux. New protocol features and updates could now easily be done by and shared with the vehicular networking R&D community.","",""
85,"S. Lindtner","Hacking with Chinese Characteristics",2015,"","","","",972,"2024-08-22 15:04:59","","10.1177/0162243915590861","","",,,,,85,9.44,85,1,9,"From the rising number of hackerspaces to an increase in hardware start-ups, maker culture is envisioned as an enabler of the next industrial revolution—a source of unhindered technological innovation, a revamp of broken economies and educational systems. Drawing from long-term ethnographic research, this article examines how China’s makers demarcate Chinese manufacturing as a site of expertise in implementing this vision. China’s makers demonstrate that the future of making—if to materialize in the ways currently envisioned by writers, politicians, and scholars of the global tech industry—rests on taking seriously the technological and cultural fabrics of professional making outside familiar information technology innovation hubs like Silicon Valley: making-do, mass production, and reuse. I trace back to China’s first hackerspace, documenting how a collective of makers began to move away from appropriating Western concepts of openness toward promoting China as source for knowledge, creativity, and innovation. This article demonstrates that when China’s makers set up open hardware businesses and articulate a unique culture of “hacking with Chinese characteristics,” they draw boundaries between the professional making they saw embodied in Chinese industrial production and the hobbyist making embodied in Western histories and cultures of hacking. In so doing, they position China as site of both technological and cultural expertise, intervening in dominant conceptions of computing that split manufacturing and innovation along geographical lines. This article contributes to critical scholarship of innovation and making cultures, technological expertise, and authorship.","",""
24,"S. Lohmann, J. Yosinski, Eric Gold, J. Clune, Jeremy Blum, Hod Lipson","Aracna: An Open-Source Quadruped Platform for Evolutionary Robotics",2012,"","","","",381,"2024-08-22 15:04:59","","10.7551/978-0-262-31050-5-ch051","","",,,,,24,2.00,4,6,12,"We describe a new, quadruped robot platform, Aracna, which requires non-intuitive motor commands in order to locomote and thus provides an interesting challenge for gait learning algorithms, such as those frequently developed in the Evolutionary Computation and Artificial Life communities. Aracna is an open-source hardware project composed of off-the-shelf and 3D-printed parts, enabling other research teams to modify its design according to their scientific needs. Aracna was designed to overcome the shortcomings of a previous quadruped robot platform, whose legs were so heavy that the motors could not reliably execute the commands sent to them. We avoid this problem by locating all motors in the body core instead of on the legs and through a design which enables the servos to have a greater mechanical advantage. Specifically, each of the four legs has two joints controlled by separate four-bar linkage mechanisms that drive the pitch of the hip joint and knee joint. This novel design causes unconventional kinematics, creating an opportunity for gaitlearning algorithms, which excel in counter-intuitive design spaces where human engineers tend to underperform. Because it is low-cost, flexible, kinematically interesting, and and improvement over a previous design, Aracna provides a useful new hardware platform for testing algorithms that automatically generate robotic behaviors.","",""
33,"S. Martiel, T. Ayral, Cyril Allouche","Benchmarking Quantum Coprocessors in an Application-Centric, Hardware-Agnostic, and Scalable Way",2021,"","","","",357,"2024-08-22 15:04:59","","10.1109/TQE.2021.3090207","","",,,,,33,11.00,11,3,3,"Existing protocols for benchmarking current quantum coprocessors fail to meet the usual standards for assessing the performance of high-performance-computing platforms. After a synthetic review of these protocols—whether at the gate, circuit, or application level—we introduce a new benchmark, dubbed Atos Q-score, which is application-centric, hardware-agnostic, and scalable to quantum advantage processor sizes and beyond. The Q-score measures the maximum number of qubits that can be used effectively to solve the MaxCut combinatorial optimization problem with the quantum approximate optimization algorithm. We give a robust definition of the notion of effective performance by introducing an improved approximation ratio based on the scaling of random and optimal algorithms. We illustrate the behavior of Q-score using perfect and noisy simulations of quantum processors. Finally, we provide an open-source implementation of Q-score that makes it easy to compute the Q-score of any quantum hardware.","",""
131,"S. McHugh, B. Mazin, B. Serfass, S. Meeker, K. O’Brien, R. Duan, R. Raffanti, D. Werthimer","A readout for large arrays of microwave kinetic inductance detectors.",2012,"","","","",711,"2024-08-22 15:04:59","","10.1063/1.3700812","","",,,,,131,10.92,16,8,12,"Microwave kinetic inductance detectors (MKIDs) are superconducting detectors capable of counting single photons and measuring their energy in the UV, optical, and near-IR. MKIDs feature intrinsic frequency domain multiplexing (FDM) at microwave frequencies, allowing the construction and readout of large arrays. Due to the microwave FDM, MKIDs do not require the complex cryogenic multiplexing electronics used for similar detectors, such as transition edge sensors, but instead transfer this complexity to room temperature electronics where they present a formidable signal processing challenge. In this paper, we describe the first successful effort to build a readout for a photon counting optical/near-IR astronomical instrument, the ARray Camera for Optical to Near-infrared Spectrophotometry. This readout is based on open source hardware developed by the Collaboration for Astronomy Signal Processing and Electronics Research. Designed principally for radio telescope backends, it is flexible enough to be used for a variety of signal processing applications.","",""
4,"S. N. Liang, K O Tan, T H Lai Clement, S K Ng, A H Ali Mohammed, M. Mailah, Wan Azhar B. Yussof, Z. Hamedon, Zulkifli B. M. Yussof","Open source hardware and software platform for robotics and artificial intelligence applications",2016,"","","","",84,"2024-08-22 15:04:59","","10.1088/1757-899X/114/1/012142","","",,,,,4,0.50,0,9,8,"Recent developments in open source hardware and software platforms (Android, Arduino, Linux, OpenCV etc.) have enabled rapid development of previously expensive and sophisticated system within a lower budget and flatter learning curves for developers. Using these platform, we designed and developed a Java-based 3D robotic simulation system, with graph database, which is integrated in online and offline modes with an Android-Arduino based rubbish picking remote control car. The combination of the open source hardware and software system created a flexible and expandable platform for further developments in the future, both in the software and hardware areas, in particular in combination with graph database for artificial intelligence, as well as more sophisticated hardware, such as legged or humanoid robots.","",""
28,"S. Needs, T. Diep, S. Bull, Anton Lindley-Decaire, P. Ray, A. Edwards","Exploiting open source 3D printer architecture for laboratory robotics to automate high-throughput time-lapse imaging for analytical microbiology",2019,"","","","",225,"2024-08-22 15:04:59","","10.1371/journal.pone.0224878","","",,,,,28,5.60,5,6,5,"Growth in open-source hardware designs combined with the low-cost of high performance optoelectronic and robotics components has supported a resurgence of in-house custom lab equipment development. We describe a low cost (below $700), open-source, fully customizable high-throughput imaging system for analytical microbiology applications. The system comprises a Raspberry Pi camera mounted on an aluminium extrusion frame with 3D-printed joints controlled by an Arduino microcontroller running open-source Repetier Host Firmware. The camera position is controlled by simple G-code scripts supplied from a Raspberry Pi singleboard computer and allow customized time-lapse imaging of microdevices over a large imaging area. Open-source OctoPrint software allows remote access and control. This simple yet effective design allows high-throughput microbiology testing in multiple formats including formats for bacterial motility, colony growth, microtitre plates and microfluidic devices termed ‘lab-on-a-comb’ to screen the effects of different culture media components and antibiotics on bacterial growth. The open-source robot design allows customization of the size of the imaging area; the current design has an imaging area of ~420 × 300mm, which allows 29 ‘lab-on-a-comb’ devices to be imaged which is equivalent 3480 individual 1μl samples. The system can also be modified for fluorescence detection using LED and emission filters embedded on the PiCam for more sensitive detection of bacterial growth using fluorescent dyes.","",""
183,"S. Nilsson, Nastacia L. Goodwin, J. Choong, Sophia Hwang, H. Wright, Zane C. Norville, X. Tong, Dayu Lin, B. Bentzley, N. Eshel, R. McLaughlin, S. Golden","Simple Behavioral Analysis (SimBA) – an open source toolkit for computer classification of complex social behaviors in experimental animals",2020,"","","","",176,"2024-08-22 15:04:59","","10.1101/2020.04.19.049452","","",,,,,183,45.75,18,12,4,"Aberrant social behavior is a core feature of many neuropsychiatric disorders, yet the study of complex social behavior in freely moving rodents is relatively infrequently incorporated into preclinical models. This likely contributes to limited translational impact. A major bottleneck for the adoption of socially complex, ethology-rich, preclinical procedures are the technical limitations for consistently annotating detailed behavioral repertoires of rodent social behavior. Manual annotation is subjective, prone to observer drift, and extremely time-intensive. Commercial approaches are expensive and inferior to manual annotation. Open-source alternatives often require significant investments in specialized hardware and significant computational and programming knowledge. By combining recent computational advances in convolutional neural networks and pose-estimation with further machine learning analysis, complex rodent social behavior is primed for inclusion under the umbrella of computational neuroethology. Here we present an open-source package with graphical interface and workflow (Simple Behavioral Analysis, SimBA) that uses pose-estimation to create supervised machine learning predictive classifiers of rodent social behavior, with millisecond resolution and accuracies that can out-perform human observers. SimBA does not require specialized video acquisition hardware nor extensive computational background. Standard descriptive statistical analysis, along with graphical region of interest annotation, are provided in addition to predictive classifier generation. To increase ease-of-use for behavioural neuroscientists, we designed SimBA with accessible menus for pre-processing videos, annotating behavioural training datasets, selecting advanced machine learning options, robust classifier validation functions and flexible visualizations tools. This allows for predictive classifier transparency, explainability and tunability prior to, and during, experimental use. We demonstrate that this approach is flexible and robust in both mice and rats by classifying social behaviors that are commonly central to the study of brain function and social motivation. Finally, we provide a library of poseestimation weights and behavioral predictive classifiers for resident-intruder behaviors in mice and rats. All code and data, together with detailed tutorials and documentation, are available on the SimBA GitHub repository. Graphical abstract SimBA graphical interface (GUI) for creating supervised machine learning classifiers of rodent social behavior. (a) Pre-process videos. SimBA supports common video pre-processing functions (e.g., cropping, clipping, sampling, format conversion, etc.) that can be performed either on single videos, or as a batch. (b) Managing poseestimation data and creating classification projects. Pose-estimation tracking projects in DeepLabCut and DeepPoseKit can be either imported or created and managed within the SimBA graphical user interface, and the tracking results are imported into SimBA classification projects. SimBA also supports userdrawn region-of-interests (ROIs) for descriptive statistics of animal movements, or as features in machine learning classification projects. (c) Create classifiers, perform classifications, and analyze classification data. SimBA has graphical tools for correcting poseestimation tracking inaccuracies when multiple subjects are within a single frame, annotating behavioral events from videos, and optimizing machine learning hyperparameters and discrimination thresholds. A number of validation checkpoints and logs are included for increased classifier explainability and tunability prior to, and during, experimental use. Both detailed and summary data are provided at the end of classifier analysis. SimBA accepts behavioral annotations generated elsewhere (such as through JWatcher) that can be imported into SimBA classification projects. (d) Visualize classification results. SimBA has several options for visualizing machine learning classifications, animal movements and ROI data, and analyzing the durations and frequencies of classified behaviors. See the SimBA GitHub repository for a comprehensive documentation and user tutorials.","",""
76,"S. Oberloier, Joshua M. Pearce","General Design Procedure for Free and Open-Source Hardware for Scientific Equipment",2017,"","","","",38,"2024-08-22 15:04:59","","10.3390/DESIGNS2010002","","",,,,,76,10.86,38,2,7,"Distributed digital manufacturing of free and open-source scientific hardware (FOSH) used for scientific experiments has been shown to in general reduce the costs of scientific hardware by 90–99%. In part due to these cost savings, the manufacturing of scientific equipment is beginning to move away from a central paradigm of purchasing proprietary equipment to one in which scientists themselves download open-source designs, fabricate components with digital manufacturing technology, and then assemble the equipment themselves. This trend introduces a need for new formal design procedures that designers can follow when targeting this scientific audience. This study provides five steps in the procedure, encompassing six design principles for the development of free and open-source hardware for scientific applications. A case study is provided for an open-source slide dryer that can be easily fabricated for under $20, which is more than 300 times less than some commercial alternatives. The bespoke design is parametric and easily adjusted for many applications. By designing using open-source principles and the proposed procedures, the outcome will be customizable, under control of the researcher, less expensive than commercial options, more maintainable, and will have many applications that benefit the user since the design documentation is open and freely accessible.","",""
128,"S. Poggenpohl","Open Design Now: Why Design Cannot Remain Exclusive",2011,"","","","",937,"2024-08-22 15:04:59","","","","",,,,,128,9.85,128,1,13,"Open Design Now: Why Design Cannot Remain Exclusive BAS VAN ABEL, LUCUS EVERS, ROEL KLAASSEN AND PETER TROXLER Amsterdam, NL: BIS Publishers, 2011 ISBN 9789063692599 Softbound, 320 pages, full color illustrations, $39.00 ""Open design is rooted in information and communication technology, giving us all the instruments to become the one-man factory, the world player operating from a small back room"" (p.17). Peppered with words like amateurissmo, hyper-craft, co-creation, social design, remix, open source and crowd-sourcing, this book examines the freeing aspects of technology and what pursuit of them might mean today. It runs counter to our conservative expectations for the future that usually look a lot like an expanded present. The book is very much a Dutch production based on the collaborative effort of Creative Commons (Netherlands), Premsela and the Waag Society's Open Design Lab. Creative Commons is a different take on copyright fostering more openness, while Premsela promotes design and fashion in The Netherlands from a cultural perspective and the Waag Society is a foundation interested in developing creative technology for social innovation. Taking its cue from technology, the feature articles forming the bulk of the book and case studies delivering a smaller portion push on possibilities for culture production rather than culture consumption by ordinary citizens. It takes Norbert Wiener's 1950 book, The Human Use of Human Beings, seriously. Wiener, the father of cybernetics, was ahead of his time, both his book and this one share a Utopian perspective. But this book gives credence and a practical viewpoint to releasing people to be creative and celebrate human inventiveness, sharing and community. The book also contains a visual index that covers 32 concepts dealt with in the book. Each concept is visually documented by grassroot or designer applications. These sometimes show the breadth of application and make the conceptual idea real. Some individual images are tied back to discussion in an article or case study. The images demonstrate creative possibility with a technological backdrop. The case studies discuss specific projects and most have a uri attached for further investigation. The range of case ideas is impressive. There has been much talk of the democratization of media and information; this book takes democratization into the world of object design; it challenges copyright along with patent, production and distribution as well. While user-centered and co-design practices have developed and taken hold, this variation on thinking about design goes further proposing the development of a post-professional design world, citing, as examples, the changes to journalism, photography and graphic design that technology has effected through putting hardware and software into the hands of amateurs. One key to the open design initiative is the 60 Fab Labs distributed globally. Fab is short for fabrication; these labs use 3D technology to generate objects for a limited run and are available to amateurs. It supports personal design and one-off creations. What does this mean for designers and their process, even what they design, if they are no longer designing for mass production or even customization within the frame of mass production? In his article, Paul Atkinson suggests that designers create generative software, templates and systems that can morph giving the amateur a base from which to create. This could facilitate the sharing of knowledge between professional designer and amateur. Sharing knowledge is a critical idea to open design- how to identify what knowledge is needed and how to effectively share it. The limited number of case studies (21) and their brief presentations suggest that this is a design change in the early stages. Clearly there is much thinking, investigation and development yet to do. Jos de MuI offers an article from a more critical perspective, briefly discussing four problems inherent in the development of open design. …","",""
36,"S. Rahman, Martin Burtscher, Ziliang Zong, Apan Qasem","Maximizing Hardware Prefetch Effectiveness with Machine Learning",2015,"","","","",484,"2024-08-22 15:04:59","","10.1109/HPCC-CSS-ICESS.2015.175","","",,,,,36,4.00,9,4,9,"Modern processors are equipped with multiple hardware prefetchers, each of which targets a distinct level in the memory hierarchy and employs a separate prefetching algorithm. However, different programs require different subsets of these prefetchers to maximize their performance. Turning on all available prefetchers rarely yields the best performance and, in some cases, prefetching even hurts performance. This paper studies the effect of hardware prefetching on multithreaded code and presents a machine-learning technique to predict the optimal combination of prefetchers for a given application. This technique is based on program characterization and utilizes hardware performance events in conjunction with a pruning algorithm to obtain a concise and expressive feature set. The resulting feature set is used in three different learning models. All necessary steps are implemented in a framework that reaches, on average, 96% of the best possible prefetcher speedup. The framework is built from open-source tools, making it easy to extend and port to other architectures.","",""
22,"S. Sabikan, S. W. Nawawi","Open-source project (OSPS) platform for outdoor quadcopter",2016,"","","","",890,"2024-08-22 15:04:59","","","","",,,,,22,2.75,11,2,8,"In recent years, there has been an increasing interest in quadcopter technology implementation in the real world; for instance in real estate photography, aerial surveying, periodic forest monitoring, and search/rescue missions. Gene rally, each quadcopter implementation required different sensors which are needed to attach and integrate into quadcopter system. However, the most critical part in almost cases is preparing the quad copter flight performance and capability to be suit ed in any outdoor applications. Because of that reason , this paper has proposed an implementation of Open-Source Project (OSPs) platform as autonomous Unmanned Aerial Vehicle (UAV) quadcopter development that can be fitted for any outdoor applications or even in research experimental purposes. We started out with an explanation about the genera l approach that has been used in the development of a quadcopter testbed, and then followed with detail explanations in the OSP platform approach. The OSP platform is the most popular approach. The main reason is because of their flexibility in both hardware and software. The basic quadcopter configuration for autonomous flight also presented and applied. This paper also provided several outdoor experiments results in uncontrolled environment that have been executed using our developed testbed to evaluate their performance, such as attitude and altitude stabilization, interference and vibration effect, and trajectory mapping generation. Finally, throughout this project, we realized that the OPSs quadcopter platform has offered almost complete frameworks in the development of quadcopter for any outdoor applications or even as a research testbed system.","",""
323,"S. Shi, Qiang Wang, Pengfei Xu, Xiaowen Chu","Benchmarking State-of-the-Art Deep Learning Software Tools",2016,"","","","",549,"2024-08-22 15:04:59","","10.1109/CCBD.2016.029","","",,,,,323,40.38,81,4,8,"Deep learning has been shown as a successful machine learning method for a variety of tasks, and its popularity results in numerous open-source deep learning software tools coming to public. Training a deep network is usually a very time-consuming process. To address the huge computational challenge in deep learning, many tools exploit hardware features such as multi-core CPUs and many-core GPUs to shorten the training and inference time. However, different tools exhibit different features and running performance when they train different types of deep networks on different hardware platforms, making it difficult for end users to select an appropriate pair of software and hardware. In this paper, we present our attempt to benchmark several state-of-the-art GPU-accelerated deep learning software tools, including Caffe, CNTK, TensorFlow, and Torch. We focus on evaluating the running time performance (i.e., speed) of these tools with three popular types of neural networks on two representative CPU platforms and three representative GPU platforms. Our contribution is two-fold. First, for end users of deep learning software tools, our benchmarking results can serve as a reference to selecting appropriate hardware platforms and software tools. Second, for developers of deep learning software tools, our in-depth analysis points out possible future directions to further optimize the running performance.","",""
32,"S. Trilles, Alberto González-Pérez, J. Huerta","A Comprehensive IoT Node Proposal Using Open Hardware. A Smart Farming Use Case to Monitor Vineyards",2018,"","","","",339,"2024-08-22 15:04:59","","10.3390/ELECTRONICS7120419","","",,,,,32,5.33,11,3,6,"The last decade has witnessed a significant reduction in prices and an increased performance of electronic components, coupled with the influence of the shift towards the generation of open resources, both in terms of knowledge (open access), programs (open-source software), and components (open hardware). This situation has produced different effects in today’s society, among which is the empowerment of citizens, called makers, who are themselves able to generate citizen science or build assembly developments. Situated in the context described above, the current study follows a Do-It-Yourself (DIY) approach. In this way, it attempts to define a conceptual design of an Internet of Things (IoT) node, which is reproducible at both physical and behavioral levels, to build IoT nodes which can cover any scenario. To test this conceptual design, this study proposes a sensorization node to monitor meteorological phenomena. The node is called SEnviro (node) and features different improvements such as: the possibility of remote updates using Over-the-Air (OTA) updates; autonomy, using 3G connectivity, a solar panel, and applied energy strategies to prolong its life; and replicability, because it is made up of open hardware and other elements such as 3D-printed pieces. The node is validated in the field of smart agriculture, with the aim of monitoring different meteorological phenomena, which will be used as input to disease detection models to detect possible diseases within vineyards.","",""
26,"S. Vishwakarma, Wenda Li, Chong Tang, K. Woodbridge, R. Adve, K. Chetty","SimHumalator: An Open-Source End-to-End Radar Simulator for Human Activity Recognition",2022,"","","","",872,"2024-08-22 15:04:59","","10.1109/maes.2021.3138948","","",,,,,26,13.00,4,6,2,"Radio-frequency-based noncooperative monitoring of humans has numerous applications ranging from law enforcement to ubiquitous sensing applications such as ambient assisted living and biomedical applications for nonintrusively monitoring patients. Large training datasets, almost unlimited memory capacity, and ever-increasing processing speeds of computers could drive forward the data-driven deep-learning-focused research in the abovementioned applications. However, generating and labeling large volumes of high-quality, diverse radar datasets is an onerous task. Furthermore, unlike the fields of vision and image processing, the radar community has limited access to databases that contain large volumes of experimental data. Therefore, in this article, we present an open-source motion capture data-driven simulation tool, SimHumalator, that can generate large volumes of human micro-Doppler radar data in passive WiFi scenarios. The simulator integrates IEEE 802.11 WiFi Standards (IEEE 802.11 g, n, and ad) compliant transmissions with the human animation data to generate the micro-Doppler features that incorporate the diversity of human motion characteristics and the sensor parameters. The simulated signatures have been validated with experimental data gathered using an in-house-built hardware prototype. This article describes simulation methodology in detail and provides case studies on the feasibility of using simulated micro-Doppler spectrograms for data augmentation tasks.","",""
54,"S. Wang, Zhao-Wen Wang","Track-A-Worm, An Open-Source System for Quantitative Assessment of C. elegans Locomotory and Bending Behavior",2013,"","","","",355,"2024-08-22 15:04:59","","10.1371/journal.pone.0069653","","",,,,,54,4.91,27,2,11,"A major challenge of neuroscience is to understand the circuit and gene bases of behavior. C. elegans is commonly used as a model system to investigate how various gene products function at specific tissue, cellular, and synaptic foci to produce complicated locomotory and bending behavior. The investigation generally requires quantitative behavioral analyses using an automated single-worm tracker, which constantly records and analyzes the position and body shape of a freely moving worm at a high magnification. Many single-worm trackers have been developed to meet lab-specific needs, but none has been widely implemented for various reasons, such as hardware difficult to assemble, and software lacking sufficient functionality, having closed source code, or using a programming language that is not broadly accessible. The lack of a versatile system convenient for wide implementation makes data comparisons difficult and compels other labs to develop new worm trackers. Here we describe Track-A-Worm, a system rich in functionality, open in source code, and easy to use. The system includes plug-and-play hardware (a stereomicroscope, a digital camera and a motorized stage), custom software written to run with Matlab in Windows 7, and a detailed user manual. Grayscale images are automatically converted to binary images followed by head identification and placement of 13 markers along a deduced spline. The software can extract and quantify a variety of parameters, including distance traveled, average speed, distance/time/speed of forward and backward locomotion, frequency and amplitude of dominant bends, overall bending activities measured as root mean square, and sum of all bends. It also plots worm travel path, bend trace, and bend frequency spectrum. All functionality is performed through graphical user interfaces and data is exported to clearly-annotated and documented Excel files. These features make Track-A-Worm a good candidate for implementation in other labs.","",""
24,"S. Yu, Rozhin Yasaei, Qingrong Zhou, Tommy Nguyen, M. A. Faruque","HW2VEC: a Graph Learning Tool for Automating Hardware Security",2021,"","","","",362,"2024-08-22 15:04:59","","10.1109/HOST49136.2021.9702281","","",,,,,24,8.00,5,5,3,"The time-to-market pressure and continuous growing complexity of hardware designs have promoted the globalization of the Integrated Circuit (IC) supply chain. However, such globalization also poses various security threats in each phase of the IC supply chain. Although the advancements of Machine Learning (ML) have pushed the frontier of hardware security, most conventional ML-based methods can only achieve the desired performance by manually finding a robust feature representation for circuits that are non-Euclidean data. As a result, modeling these circuits using graph learning to improve design flows has attracted research attention in the Electronic Design Automation (EDA) field. However, due to the lack of supporting tools, only a few existing works apply graph learning to resolve hardware security issues. To attract more attention, we propose HW2VEC, an open-source graph learning tool that lowers the threshold for newcomers to research hardware security applications with graphs. HW2VEC provides an automated pipeline for extracting a graph representation from a hardware design in various abstraction levels (register transfer level or gate-level netlist). Besides, HW2VEC users can automatically transform the non-Euclidean hardware designs into Euclidean graph embeddings for solving their problems. In this paper, we demonstrate that HW2VEC can achieve state-of-the-art performance on two hardware security-related tasks: Hardware Trojan Detection and Intellectual Property Piracy Detection. We provide the time profiling results for the graph extraction and the learning pipelines in HW2VEC.","",""
100,"Sachin Jain, Ramsha Karampuri, V. T. Somasekhar","An Integrated Control Algorithm for a Single-Stage PV Pumping System Using an Open-End Winding Induction Motor",2016,"","","","",917,"2024-08-22 15:04:59","","10.1109/TIE.2015.2480765","","",,,,,100,12.50,33,3,8,"In this paper, a single-stage solution for solar photovoltaic (PV) pumping system using a dual-inverter fed open-end winding induction motor drive is presented. The three-level dual-inverter requires a low PV bus voltage compared with its conventional three-level counterpart. This could avoid large string of PV modules and helps in reducing the voltage rating of the capacitors and semiconductor devices used in the system. This may further help in reduction of cost of the system. The proposed single-stage system is operated using an integrated control algorithm, which includes the maximum power point tracking (MPPT), the V/f control, and the sample-averaged zero-sequence elimination (SAZE) pulsewidth modulation (PWM) technique. While the MPPT algorithm ensures the extraction of maximum power from the PV source, the V/f control improves the motor pump performance. Furthermore, the zero-sequence current is avoided by the SAZE PWM algorithm. Thus, the integrated control algorithm improves the overall performance of the system. Furthermore, this paper also presents the details of system design and analysis of its dynamic behavior during transient environmental conditions. The performance of the system is verified using MATLAB simulation and hardware prototype.","",""
18,"Salam Ismaeel, A. Miri, Dharmendra Chourishi, S. Dibaj","Open Source Cloud Management Platforms: A Review",2015,"","","","",324,"2024-08-22 15:04:59","","10.1109/CSCloud.2015.84","","",,,,,18,2.00,5,4,9,"In the cloud computing paradigm, Infrastructure-as-a-Service (IaaS) providers can provision virtualized hardware and resources to users, removing the need for users to own and operate these resources, which can lead to lower costs and improved performance. This paper gives a general description of most commonly used open source IaaS service platforms. It includes descriptions and comparisons of OpenNebula, Eucalyptus, Nimbus, OpenStack and CloudStack platforms, and it should be accessible to a wide audience.","",""
65,"Salim Ullah, Semeen Rehman, B. Prabakaran, F. Kriebel, M. Hanif, M. Shafique, Akash Kumar","Area-Optimized Low-Latency Approximate Multipliers for FPGA-based Hardware Accelerators",2018,"","","","",417,"2024-08-22 15:04:59","","10.1145/3195970.3195996","","",,,,,65,10.83,9,7,6,"The architectural differences between ASICs and FPGAs limit the effective performance gains achievable by the application of ASIC-based approximation principles for FPGA-based reconfigurable computing systems. This paper presents a novel approximate multiplier architecture customized towards the FPGA-based fabrics, an efficient design methodology, and an open-source library. Our designs provide higher area, latency and energy gains along with better output accuracy than those offered by the state-of-the-art ASIC-based approximate multipliers. Moreover, compared to the multiplier IP offered by the Xilinx Vivado, our proposed design achieves up to 30%, 53%, and 67% gains in terms of area, latency, and energy, respectively, while incurring an insignificant accuracy loss (on average, below 1% average relative error). Our library of approximate multipliers is open-source and available online at https://cfaed.tudresden.de/pd-downloads to fuel further research and development in this area, and thereby enabling a new research direction for the FPGA community.","",""
1191,"Sami Abu-El-Haija, Nisarg Kothari, Joonseok Lee, Apostol Natsev, G. Toderici, Balakrishnan Varadarajan, Sudheendra Vijayanarasimhan","YouTube-8M: A Large-Scale Video Classification Benchmark",2016,"","","","",499,"2024-08-22 15:04:59","","","","",,,,,1191,148.88,170,7,8,"Many recent advancements in Computer Vision are attributed to large datasets. Open-source software packages for Machine Learning and inexpensive commodity hardware have reduced the barrier of entry for exploring novel approaches at scale. It is possible to train models over millions of examples within a few days. Although large-scale datasets exist for image understanding, such as ImageNet, there are no comparable size video classification datasets.  In this paper, we introduce YouTube-8M, the largest multi-label video classification dataset, composed of ~8 million videos (500K hours of video), annotated with a vocabulary of 4800 visual entities. To get the videos and their labels, we used a YouTube video annotation system, which labels videos with their main topics. While the labels are machine-generated, they have high-precision and are derived from a variety of human-based signals including metadata and query click signals. We filtered the video labels (Knowledge Graph entities) using both automated and manual curation strategies, including asking human raters if the labels are visually recognizable. Then, we decoded each video at one-frame-per-second, and used a Deep CNN pre-trained on ImageNet to extract the hidden representation immediately prior to the classification layer. Finally, we compressed the frame features and make both the features and video-level labels available for download.  We trained various (modest) classification models on the dataset, evaluated them using popular evaluation metrics, and report them as baselines. Despite the size of the dataset, some of our models train to convergence in less than a day on a single machine using TensorFlow. We plan to release code for training a TensorFlow model and for computing metrics.","",""
62,"Sandeep Kumar, M. Qadeer, Archana Gupta","Location based services using android (LBSOID)",2009,"","","","",828,"2024-08-22 15:04:59","","10.1109/IMSAA.2009.5439442","","",,,,,62,4.13,21,3,15,"Initially mobile phones were developed only for voice communication but now days the scenario has changed, voice communication is just one aspect of a mobile phone. There are other aspects which are major focus of interest. Two such major factors are web browser and GPS services. Both of these functionalities are already implemented but are only in the hands of manufacturers not in the hands of users because of proprietary issues, the system does not allow the user to access the mobile hardware directly. But now, after the release of android based open source mobile phone a user can access the hardware directly and design customized native applications to develop Web and GPS enabled services and can program the other hardware components like camera etc. In this paper we will discuss the facilities available in android platform for implementing LBS services (geo-services).","",""
46,"Sandeep Kumar, M. Qadeer, Archana Gupta","Location based services using android",2009,"","","","",844,"2024-08-22 15:04:59","","","","",,,,,46,3.07,15,3,15,"Initially mobile phones were developed only for voice communication but now days the scenario has changed, voice communication is just one aspect of a mobile phone. There are other aspects which are major focus of interest. Two such major factors are web browser and GPS services. Both of these functionalities are already implemented but are only in the hands of manufacturers not in the hands of users because of proprietary issues, the system does not allow the user to access the mobile hardware directly. But now, after the release of android based open source mobile phone a user can access the hardware directly and design customized native applications to develop Web and GPS enabled services and can program the other hardware components like camera etc. In this paper we will discuss the facilities available in android platform for implementing LBS services (geoservices).","",""
40,"Santiago Silva, A. Altmann, B. Gutman, Marco Lorenzi","Fed-BioMed: A General Open-Source Frontend Framework for Federated Learning in Healthcare",2020,"","","","",192,"2024-08-22 15:04:59","","10.1007/978-3-030-60548-3_20","","",,,,,40,10.00,10,4,4,"","",""
71,"Sarab S. Sethi, R. Ewers, N. Jones, C. Orme, L. Picinali","Robust, real-time and autonomous monitoring of ecosystems with an open, low-cost, networked device",2017,"","","","",488,"2024-08-22 15:04:59","","10.1101/236075","","",,,,,71,10.14,14,5,7,"Automated methods of monitoring ecosystems provide a cost-effective way to track changes in natural system’s dynamics across temporal and spatial scales. However, methods of recording and storing data captured from the field still require significant manual effort. Here we introduce an open source, inexpensive, fully autonomous ecosystem monitoring unit for capturing and remotely transmitting continuous data streams from field sites over long time-periods. We provide a modular software framework for deploying various sensors, together with implementations to demonstrate proof of concept for continuous audio monitoring and time-lapse photography. We show how our system can outperform comparable technologies for fractions of the cost, provided a local mobile network link is available. The system is robust to unreliable network signals and has been shown to function in extreme environmental conditions, such as in the tropical rainforests of Sabah, Borneo. We provide full details on how to assemble the hardware, and the open-source software. Paired with appropriate automated analysis techniques, this system could provide spatially dense, near real-time, continuous insights into ecosystem and biodiversity dynamics at a low cost.","",""
46,"Sarah Amir, Bicky Shakya, Xiaolin Xu, Yier Jin, S. Bhunia, M. Tehranipoor, Domenic Forte","Development and Evaluation of Hardware Obfuscation Benchmarks",2018,"","","","",424,"2024-08-22 15:04:59","","10.1007/s41635-018-0036-3","","",,,,,46,7.67,7,7,6,"","",""
36,"Saurabh Jha, Timothy Tsai, S. Hari, Michael B. Sullivan, Z. Kalbarczyk, S. Keckler, R. Iyer","Kayotee: A Fault Injection-based System to Assess the Safety and Reliability of Autonomous Vehicles to Faults and Errors",2019,"","","","",683,"2024-08-22 15:04:59","","","","",,,,,36,7.20,5,7,5,"Fully autonomous vehicles (AVs), i.e., AVs with autonomy level 5, are expected to dominate road transportation in the near-future and contribute trillions of dollars to the global economy. The general public, government organizations, and manufacturers all have significant concern regarding resiliency and safety standards of the autonomous driving system (ADS) of AVs . In this work, we proposed and developed (a) `Kayotee' - a fault injection-based tool to systematically inject faults into software and hardware components of the ADS to assess the safety and reliability of AVs to faults and errors, and (b) an ontology model to characterize errors and safety violations impacting reliability and safety of AVs. Kayotee is capable of characterizing fault propagation and resiliency at different levels - (a) hardware, (b) software, (c) vehicle dynamics, and (d) traffic resilience. We used Kayotee to study a proprietary ADS technology built by Nvidia corporation and are currently applying Kayotee to other open-source ADS systems.","",""
21,"Saurav Das","From CORD to SDN Enabled Broadband Access (SEBA) [Invited Tutorial]",2020,"","","","",693,"2024-08-22 15:04:59","","10.1364/JOCN.402153","","",,,,,21,5.25,21,1,4,"SDN Enabled Broadband Access (SEBA) is a large open-source development and integration project hosted by the Open Networking Foundation (ONF). Built using white-box hardware, merchant silicon, and SDN principles, SEBA brings the benefits of virtualization and cloudification to passive optical network (PON)-based broadband access networks for FTTH/FTTB deployments. Already in field trials with several Tier-1 operators, SEBA is rapidly moving toward production readiness with contributions from a rich open-source community of operators, vendors, and system integrators.","",""
72,"Sebastian Banescu, F. D. Dinechin, B. Pasca, R. Tudoran","Multipliers for floating-point double precision and beyond on FPGAs",2010,"","","","",790,"2024-08-22 15:04:59","","10.1145/1926367.1926380","","",,,,,72,5.14,18,4,14,"The implementation of high-precision floating-point applications on reconfigurable hardware requires large multipliers. Full multipliers are the core of floating-point multipliers. Truncated multipliers, trading resources for a well-controlled accuracy degradation, are useful building blocks in situations where a full multiplier is not needed.  This work studies the automated generation of such multipliers using the embedded multipliers and adders present in the DSP blocks of current FPGAs. The optimization of such multipliers is expressed as a tiling problem, where a tile represents a hardware multiplier, and super-tiles represent combinations of several hardware multipliers and adders, making efficient use of the DSP internal resources. This tiling technique is shown to adapt to full or truncated multipliers. It addresses arbitrary precisions including single, double but also the quadruple precision introduced by the IEEE-754-2008 standard and currently unsupported by processor hardware. An open-source implementation is provided in the FloPoCo project.","",""
20,"Sebastian Wallat, Nils Albartus, Steffen Becker, Max Hoffmann, Maik Ender, Marc Fyrbiak, Adrian Drees, Sebastian Maaßen, C. Paar","Highway to HAL: open-sourcing the first extendable gate-level netlist reverse engineering framework",2019,"","","","",498,"2024-08-22 15:04:59","","10.1145/3310273.3323419","","",,,,,20,4.00,2,9,5,"Since hardware oftentimes serves as the root of trust in our modern interconnected world, malicious hardware manipulations constitute a ubiquitous threat in the context of the Internet of Things (IoT). Hardware reverse engineering is a prevalent technique to detect such manipulations. Over the last years, an active research community has significantly advanced the field of hardware reverse engineering. Notably, many open research questions regarding the extraction of functionally correct netlists from Field Programmable Gate Arrays (FPGAs) or Application Specific Integrated Circuits (ASICs) have been tackled. In order to facilitate further analysis of recovered netlists, a software framework is required, serving as the foundation for specialized algorithms. Currently, no such framework is publicly available. Therefore, we provide the first open-source gate-library agnostic framework for gate-level netlist analysis. In this positional paper, we demonstrate the workflow of our modular framework HAL on the basis of two case studies and provide profound insights on its technical foundations.","",""
76,"Seongmin Kim, Y. Shin, Jae-Seung Ha, Taesoo Kim, Dongsu Han","A First Step Towards Leveraging Commodity Trusted Execution Environments for Network Applications",2015,"","","","",1000,"2024-08-22 15:04:59","","10.1145/2834050.2834100","","",,,,,76,8.44,15,5,9,"Network applications and protocols are increasingly adopting security and privacy features, as they are becoming one of the primary requirements. The wide-spread use of transport layer security (TLS) and the growing popularity of anonymity networks, such as Tor, exemplify this trend. Motivated by the recent movement towards commoditization of trusted execution environments (TEEs), this paper explores alternative design choices that application and protocol designers should consider. In particular, we explore the possibility of using Intel SGX to provide security and privacy in a wide range of network applications. We show that leveraging hardware protection of TEEs opens up new possibilities, often at the benefit of a much simplified application/protocol design. We demonstrate its practical implications by exploring the design space for SGX-enabled software-defined inter-domain routing, peer-to-peer anonymity networks (Tor), and middleboxes. Finally, we quantify the potential overheads of the SGX-enabled design by implementing it on top of OpenSGX, an open source SGX emulator.","",""
13,"Seunghyun Choi, Sekyoung Youm","A study on a fall detection monitoring system for falling elderly using open source hardware",2017,"","","","",60,"2024-08-22 15:04:59","","10.1007/s11042-017-5452-9","","",,,,,13,1.86,7,2,7,"","",""
54,"Seyong Lee, Jungwon Kim, J. Vetter","OpenACC to FPGA: A Framework for Directive-Based High-Performance Reconfigurable Computing",2016,"","","","",712,"2024-08-22 15:04:59","","10.1109/IPDPS.2016.28","","",,,,,54,6.75,18,3,8,"This paper presents a directive-based, high-level programming framework for high-performance reconfigurable computing. It takes a standard, portable OpenACC C program as input and generates a hardware configuration file for execution on FPGAs. We implemented this prototype system using our open-source OpenARC compiler, it performs source-to-source translation and optimization of the input OpenACC program into an OpenCL code, which is further compiled into a FPGA program by the backend Altera Offline OpenCL compiler. Internally, the design of OpenARC uses a high-level intermediate representation that separates concerns of program representation from underlying architectures, which facilitates portability of OpenARC. In fact, this design allowed us to create the OpenACC-to-FPGA translation framework with minimal extensions to our existing system. In addition, we show that our proposed FPGA-specific compiler optimizations and novel OpenACC pragma extensions assist the compiler in generating more efficient FPGA hardware configuration files. Our empirical evaluation on an Altera Stratix V FPGA with eight OpenACC benchmarks demonstrate the benefits of our strategy. To demonstrate the portability of OpenARC, we show results for the same benchmarks executing on other heterogeneous platforms, including NVIDIA GPUs, AMD GPUs, and Intel Xeon Phis. This initial evidence helps support the goal of using a directive-based, high-level programming strategy for performance portability across heterogeneous HPC architectures.","",""
55,"Shailja Thakur, Baleegh Ahmad, H. Pearce, Benjamin Tan, Brendan Dolan-Gavitt, R. Karri, S. Garg","VeriGen: A Large Language Model for Verilog Code Generation",2023,"","","","",505,"2024-08-22 15:04:59","","10.1145/3643681","","",,,,,55,55.00,8,7,1,"In this study, we explore the capability of Large Language Models (LLMs) to automate hardware design by automatically completing partial Verilog code, a common language for designing and modeling digital systems. We fine-tune pre-existing LLMs on Verilog datasets compiled from GitHub and Verilog textbooks. We evaluate the functional correctness of the generated Verilog code using a specially designed test suite, featuring a custom problem set and testing benches. Here, our fine-tuned open-source CodeGen-16B model outperforms the commercial state-of-the-art GPT-3.5-turbo model with a 1.1% overall increase. Upon testing with a more diverse and complex problem set, we find that the fine-tuned model shows competitive performance against state-of-the-art gpt-3.5-turbo, excelling in certain scenarios. Notably, it demonstrates a 41% improvement in generating syntactically correct Verilog code across various problem categories compared to its pre-trained counterpart, highlighting the potential of smaller, in-house LLMs in hardware design automation. We release our training/evaluation scripts and LLM checkpoints as open-source contributions.","",""
69,"Shailja Thakur, Baleegh Ahmad, Zhenxing Fan, H. Pearce, Benjamin Tan, R. Karri, Brendan Dolan-Gavitt, S. Garg","Benchmarking Large Language Models for Automated Verilog RTL Code Generation",2022,"","","","",521,"2024-08-22 15:04:59","","10.23919/DATE56975.2023.10137086","","",,,,,69,34.50,9,8,2,"Automating hardware design could obviate a signif-icant amount of human error from the engineering process and lead to fewer errors. Verilog is a popular hardware description language to model and design digital systems, thus generating Verilog code is a critical first step. Emerging large language models (LLMs) are able to write high-quality code in other programming languages. In this paper, we characterize the ability of LLMs to generate useful Verilog. For this, we fine-tune pre-trained LLMs on Verilog datasets collected from GitHub and Verilog textbooks. We construct an evaluation framework comprising test-benches for functional analysis and a flow to test the syntax of Verilog code generated in response to problems of varying difficulty. Our findings show that across our problem scenarios, the fine-tuning results in LLMs more capable of producing syntactically correct code (25.9% overall). Further, when analyzing functional correctness, a fine-tuned open-source CodeGen LLM can outperform the state-of-the-art commercial Codex LLM (6.5% overall). We release our training/evaluation scripts and LLM checkpoints as open source contributions.","",""
962,"Shan Lu, Soyeon Park, Eunsoo Seo, Yuanyuan Zhou","Learning from mistakes: a comprehensive study on real world concurrency bug characteristics",2008,"","","","",516,"2024-08-22 15:04:59","","10.1145/1346281.1346323","","",,,,,962,60.13,241,4,16,"The reality of multi-core hardware has made concurrent programs pervasive. Unfortunately, writing correct concurrent programs is difficult. Addressing this challenge requires advances in multiple directions, including concurrency bug detection, concurrent program testing, concurrent programming model design, etc. Designing effective techniques in all these directions will significantly benefit from a deep understanding of real world concurrency bug characteristics.  This paper provides the first (to the best of our knowledge) comprehensive real world concurrency bug characteristic study. Specifically, we have carefully examined concurrency bug patterns, manifestation, and fix strategies of 105 randomly selected real world concurrency bugs from 4 representative server and client open-source applications (MySQL, Apache, Mozilla and OpenOffice). Our study reveals several interesting findings and provides useful guidance for concurrency bug detection, testing, and concurrent programming language design.  Some of our findings are as follows: (1) Around one third of the examined non-deadlock concurrency bugs are caused by violation to programmers' order intentions, which may not be easily expressed via synchronization primitives like locks and transactional memories; (2) Around 34% of the examined non-deadlock concurrency bugs involve multiple variables, which are not well addressed by existing bug detection tools; (3) About 92% of the examined concurrency bugs canbe reliably triggered by enforcing certain orders among no more than 4 memory accesses. This indicates that testing concurrent programs can target at exploring possible orders among every small groups of memory accesses, instead of among all memory accesses; (4) About 73% of the examinednon-deadlock concurrency bugs were not fixed by simply adding or changing locks, and many of the fixes were not correct at the first try, indicating the difficulty of reasoning concurrent execution by programmers.","",""
11,"Shariq Hussain, Zhaoshun Wang, Chang-ai Sun","A comparative study of open-source learning management systems",2011,"","","","",400,"2024-08-22 15:04:59","","10.1109/OSSC.2011.6184700","","",,,,,11,0.85,4,3,13,"The popularity of open-source software is increasing around the world, especially in the field of higher education. Various commercial as well as open-source learning management systems are available today which are being used in educational institutions. These tools have introduced a new concept of teaching methodology which has huge benefits over traditional methods. In this paper, we describe six popular open-source tools and compare them in terms of learning model, functional features, modules, hardware and software requirements. Results of the comparison will help administrators and educators in adoption of learning management system that is most suitable for their needs, and also promote development and usage of open-source learning management systems.","",""
27,"Shawn Hershey, J. Bernstein, Bill Bradley, Andrew Schweitzer, Noah D. Stein, T. Weber, B. Vigoda","Accelerating Inference: towards a full Language, Compiler and Hardware stack",2012,"","","","",581,"2024-08-22 15:04:59","","","","",,,,,27,2.25,4,7,12,"We introduce Dimple, a fully open-source API for probabilistic modeling. Dimple allows the user to specify probabilistic models in the form of graphical models, Bayesian networks, or factor graphs, and performs inference (by automatically deriving an inference engine from a variety of algorithms) on the model. Dimple also serves as a compiler for GP5, a hardware accelerator for inference.","",""
6,"Shengyi Wang, R. T. Possignolo, QiangChao Chen, Rohan Ganpati, Jose Renau","LGraph: A Unified Data Model and API for Productive Open-Source Hardware Design",2019,"","","","",33,"2024-08-22 15:04:59","","","","",,,,,6,1.20,1,5,5,"We present LGraph, a unified data model and API for productive open-source hardware design. It is inspired by live incremental synthesis and aims to provide a fast infrastructure for a productive hardware development flow. In this paper, LGraph is described both from the perspective of a hardware designer as well as an EDA software developer. Key features of LGraph include a unified data model and API, a fast memory mapped library design, integration with third-party tools and hierarchical design traversal for third-party tools such as OpenTimer, Mockturtle and ABC.","",""
59,"Shi-Xin Zhang, J. Allcock, Z. Wan, Shuo Liu, Jiace Sun, Hao Yu, Xingwu Yang, J. Qiu, Zhaofeng Ye, Yu-Qin Chen, Chee-Kong Lee, Yicong Zheng, Shao-Kai Jian, Hong Yao, Chang-Yu Hsieh, Shengyu Zhang","TensorCircuit: a Quantum Software Framework for the NISQ Era",2022,"","","","",526,"2024-08-22 15:04:59","","10.22331/q-2023-02-02-912","","",,,,,59,29.50,6,16,2,"TensorCircuit is an open source quantum circuit simulator based on tensor network contraction, designed for speed, flexibility and code efficiency. Written purely in Python, and built on top of industry-standard machine learning frameworks, TensorCircuit supports automatic differentiation, just-in-time compilation, vectorized parallelism and hardware acceleration. These features allow TensorCircuit to simulate larger and more complex quantum circuits than existing simulators, and are especially suited to variational algorithms based on parameterized quantum circuits. TensorCircuit enables orders of magnitude speedup for various quantum simulation tasks compared to other common quantum software, and can simulate up to 600 qubits with moderate circuit depth and low-dimensional connectivity. With its time and space efficiency, flexible and extensible architecture and compact, user-friendly API, TensorCircuit has been built to facilitate the design, simulation and analysis of quantum algorithms in the Noisy Intermediate-Scale Quantum (NISQ) era.","",""
133,"Shinya Takamaeda-Yamazaki","Pyverilog: A Python-Based Hardware Design Processing Toolkit for Verilog HDL",2015,"","","","",428,"2024-08-22 15:04:59","","10.1007/978-3-319-16214-0_42","","",,,,,133,14.78,133,1,9,"","",""
37,"Shunning Jiang, Peitian Pan, Yanghui Ou, C. Batten","PyMTL3: A Python Framework for Open-Source Hardware Modeling, Generation, Simulation, and Verification",2020,"","","","",13,"2024-08-22 15:04:59","","10.1109/MM.2020.2997638","","",,,,,37,9.25,9,4,4,"In this article, we present PyMTL3, a Python framework for open-source hardware modeling, generation, simulation, and verification. In addition to compelling benefits from using the Python language, PyMTL3 is designed to provide flexible, modular, and extensible workflows for both hardware designers and computer architects. PyMTL3 supports a seamless multilevel modeling environment and carefully designed modular software architecture using a sophisticated in-memory intermediate representation and a collection of passes that analyze, instrument, and transform PyMTL3 hardware models. We believe PyMTL3 can play an important role in jump-starting the open-source hardware ecosystem.","",""
23,"Shvetank Prakash, Tim Callahan, Joseph R. Bushagour, Colby R. Banbury, Alan V. Green, Pete Warden, Tim Ansell, V. Reddi","CFU Playground: Full-Stack Open-Source Framework for Tiny Machine Learning (TinyML) Acceleration on FPGAs",2022,"","","","",126,"2024-08-22 15:04:59","","10.1109/ISPASS57527.2023.00024","","",,,,,23,11.50,3,8,2,"Need for the efficient processing of neural networks has given rise to the development of hardware accelerators. The increased adoption of specialized hardware has highlighted the need for more agile design flows for hardware-software co-design and domain-specific optimizations. In this paper, we present CFU Playground— a full-stack open-source framework that enables rapid and iterative design and evaluation of machine learning (ML) accelerators for embedded ML systems. Our tool provides a completely open-source end-to-end flow for hardwaresoftware co-design on FPGAs and future systems research. This full-stack framework gives the users access to explore experimental and bespoke architectures that are customized and co-optimized for embedded ML. Our rapid, deploy-profileoptimization feedback loop lets ML hardware and software developers achieve significant returns out of a relatively small investment in customization. Using CFU Playground’s design and evaluation loop, we show substantial speedups between $55 \times$ and $75 \times$. The soft CPU coupled with the accelerator opens up a new, rich design space between the two components that we explore in an automated fashion using Vizier, an open-source black-box optimization service.","",""
164,"Simone Livieri, Yoshiki Higo, M. Matsushita, Katsuro Inoue","Very-Large Scale Code Clone Analysis and Visualization of Open Source Programs Using Distributed CCFinder: D-CCFinder",2007,"","","","",444,"2024-08-22 15:04:59","","10.1109/ICSE.2007.97","","",,,,,164,9.65,41,4,17,"The increasing performance-price ratio of computer hardware makes possible to explore a distributed approach at code clone analysis. This paper presents D-CCFinder, a distributed approach at large-scale code clone analysis. D-CCFinder has been implemented with 80 PC workstations in our student laboratory, and a vast collection of open source software with about 400 million lines in total has been analyzed with it in about 2 days. The result has been visualized as a scatter plot, which showed the presence of frequently used code as easy recognizable patterns. Also, D-CCFinder has been used to analyze a single software system against the whole collection in order to explore the presence of code imported from open source software.","",""
25,"Sivasothy Shanmugalingam, A. Ksentini, P. Bertin","DPDK Open vSwitch performance validation with mirroring feature",2016,"","","","",523,"2024-08-22 15:04:59","","10.1109/ICT.2016.7500387","","",,,,,25,3.13,8,3,8,"Network Function Visualization (NFV) and Software Defined Network (SDN) currently play a key role to transform the network architecture from hardware-based to software-based. Along with cloud computing, NFV and SDN are moving network functions from dedicated hardware to software implementation (Virtual Network Functions - VNF), on Virtual Machine (VM) or other virtualization technology such as containers, on top of a virtualized platform in the Cloud. To connect the VNFs, hosted in the same Data Center (DC) or across multiple DCs, virtual switches are required. Besides forwarding functions, virtual switches can be configured to mirror traffics for network management needs. Among the existing virtual switch solutions, Open vSwitch (OVS) is the most known and used. OVS is open source, and included in most of the existing Linux distributions. However, OVS performance in terms of throughput for smaller packets is very smaller than of line rate of the interface. To overcome this limitation, OVS was ported to Data Plane Development Kit (DPDK), namely OVDK. The latter achieves an impressive line rate throughput across physical interfaces. In this paper, we present the result of OVDK performance test when flow and port mirroring are activated, which was not tested so far. The performance test focuses on two parameters, throughput and latency in OVDK; allowing to validate the use of OVDK for flow forwarding and network management in the envisioned virtualized network architecture.","",""
143,"Songting Chen","Cheetah",2010,"","","","",994,"2024-08-22 15:04:59","","10.14778/1920841.1921020","","",,,,,143,10.21,143,1,14,"Large-scale data analysis has become increasingly important for many enterprises. Recently, a new distributed computing paradigm, called MapReduce, and its open source implementation Hadoop, has been widely adopted due to its impressive scalability and flexibility to handle structured as well as unstructured data. In this paper, we describe our data warehouse system, called Cheetah, built on top of MapReduce. Cheetah is designed specifically for our online advertising application to allow various simplifications and custom optimizations. First, we take a fresh look at the data warehouse schema design. In particular, we define a virtual view on top of the common star or snowflake data warehouse schema. This virtual view abstraction not only allows us to design a SQL-like but much more succinct query language, but also makes it easier to support many advanced query processing features. Next, we describe a stack of optimization techniques ranging from data compression and access method to multi-query optimization and exploiting materialized views. In fact, each node with commodity hardware in our cluster is able to process raw data at 1GBytes/s. Lastly, we show how to seamlessly integrate Cheetah into any ad-hoc MapReduce jobs. This allows MapReduce developers to fully leverage the power of both MapReduce and data warehouse technologies.","",""
64,"Stavros Efthymiou, J. Hidary, Stefan Leichenauer","TensorNetwork for Machine Learning",2019,"","","","",642,"2024-08-22 15:04:59","","","","",,,,,64,12.80,21,3,5,"We demonstrate the use of tensor networks for image classification with the TensorNetwork open source library. We explain in detail the encoding of image data into a matrix product state form, and describe how to contract the network in a way that is parallelizable and well-suited to automatic gradients for optimization. Applying the technique to the MNIST and Fashion-MNIST datasets we find out-of-the-box performance of 98% and 88% accuracy, respectively, using the same tensor network architecture. The TensorNetwork library allows us to seamlessly move from CPU to GPU hardware, and we see a factor of more than 10 improvement in computational speed using a GPU.","",""
87,"Stavros Efthymiou, Sergi Ramos-Calderer, Carlos Bravo-Prieto, Adrián Pérez-Salinas, Diego García-Martín, A. García-Sáez, J. Latorre, S. Carrazza","Qibo: a framework for quantum simulation with hardware acceleration",2020,"","","","",373,"2024-08-22 15:04:59","","10.1088/2058-9565/ac39f5","","",,,,,87,21.75,11,8,4,"We present Qibo, a new open-source software for fast evaluation of quantum circuits and adiabatic evolution which takes full advantage of hardware accelerators. The growing interest in quantum computing and the recent developments of quantum hardware devices motivates the development of new advanced computational tools focused on performance and usage simplicity. In this work we introduce a new quantum simulation framework that enables developers to delegate all complicated aspects of hardware or platform implementation to the library so they can focus on the problem and quantum algorithms at hand. This software is designed from scratch with simulation performance, code simplicity and user friendly interface as target goals. It takes advantage of hardware acceleration such as multi-threading Central Processing Unit (CPU), single Graphics Processing Unit (GPU) and multi-GPU devices.","",""
16,"Stavros Kalapothas, Manolis Galetakis, Georgios Flamis, F. Plessas, P. Kitsos","A Survey on RISC-V-Based Machine Learning Ecosystem",2023,"","","","",524,"2024-08-22 15:04:59","","10.3390/info14020064","","",,,,,16,16.00,3,5,1,"In recent years, the advancements in specialized hardware architectures have supported the industry and the research community to address the computation power needed for more enhanced and compute intensive artificial intelligence (AI) algorithms and applications that have already reached a substantial growth, such as in natural language processing (NLP) and computer vision (CV). The developments of open-source hardware (OSH) and the contribution towards the creation of hardware-based accelerators with implication mainly in machine learning (ML), has also been significant. In particular, the reduced instruction-set computer-five (RISC-V) open standard architecture has been widely adopted by a community of researchers and commercial users, worldwide, in numerous openly available implementations. The selection through a plethora of RISC-V processor cores and the mix of architectures and configurations combined with the proliferation of ML software frameworks for ML workloads, is not trivial. In order to facilitate this process, this paper presents a survey focused on the assessment of the ecosystem that entails RISC-V based hardware for creating a classification of system-on-chip (SoC) and CPU cores, along with an inclusive arrangement of the latest released frameworks that have supported open hardware integration for ML applications. Moreover, part of this work is devoted to the challenges that are concerned, such as power efficiency and reliability, when designing and building application with OSH in the AI/ML domain. This study presents a quantitative taxonomy of RISC-V SoC and reveals the opportunities in future research in machine learning with RISC-V open-source hardware architectures.","",""
20,"Stefan Herbrechtsmeier, Timo Korthals, Thomas Schopping, U. Ruckert","AMiRo: A modular & customizable open-source mini robot platform",2016,"","","","",309,"2024-08-22 15:04:59","","10.1109/ICSTCC.2016.7790746","","",,,,,20,2.50,5,4,8,"AMiRo is a novel modular robot platform that can be easily extended and customized in hardware and software. Built up of electronic modules that fully exploit recent technology and open-source software for sensor processing, actuator control, and cognitive processing, the robot facilitates rich autonomous behaviors. Further contribution lies in the completely open-source software habitat: from low-level microcontroller implementations, over high-level applications running on an embedded processor, up to hardware accelerated algorithms using programmable logic. This paper describes in detail the motivation, system architecture, and software design of the AMiRo, which surpasses state-of-the-art competitors.","",""
1819,"Stephan R. Richter, Vibhav Vineet, S. Roth, V. Koltun","Playing for Data: Ground Truth from Computer Games",2016,"","","","",507,"2024-08-22 15:04:59","","10.1007/978-3-319-46475-6_7","","",,,,,1819,227.38,455,4,8,"","",""
56,"Stephanos Androutsellis-Theotokis, D. Spinellis, M. Kechagia, Georgios Gousios","Open Source Software: A Survey from 10, 000 Feet",2011,"","","","",899,"2024-08-22 15:04:59","","","","",,,,,56,4.31,14,4,13,"Open source software (oss), the origins of which can be traced back to the 1950s, is software distributed with a license that allows access to its source code, free redistribution, the creation of derived works, and unrestricted use. oss applications cover most areas of consumer and business software and their study touches many disciplines, including computer science, information systems, economics, psychology, and law. Behind a successful oss project lies a community of actors, ranging from core developers to passive users, held together by a flexible governance structure and membership, leadership and contribution policies that align their interests. The motivation behind individuals participating in oss projects can be, among others, social, ideological, hedonistic, or signaling, while companies gain from their access to high-quality, innovative projects and an increase in their reputation and visibility. Nowadays many business models rely on oss as a product through the provision of associated services, or in coexistence with proprietary software, hardware, services, or licensing. The numerous oss licenses mainly differ on how they treat derived software: some contain provisions that maintain its availability in open source form while others allow more flexibility. Through its widespread adoption, oss is affecting the software industry, science, engineering, research, teaching, the developing countries, and the society at large through its ability to democratize technology and innovation.","",""
55,"Stephen Ibanez, Alex Mallery, S. Arslan, Theo Jepsen, M. Shahbaz, Changhoon Kim, N. McKeown","The nanoPU: A Nanosecond Network Stack for Datacenters",2021,"","","","",574,"2024-08-22 15:04:59","","","","",,,,,55,18.33,8,7,3,"We present the nanoPU, a new NIC-CPU co-design to accelerate an increasingly pervasive class of datacenter applications: those that utilize many small Remote Procedure Calls (RPCs) with very short ( µ s-scale) processing times. The novel aspect of the nanoPU is the design of a fast path between the network and applications—bypassing the cache and memory hierarchy, and placing arriving messages directly into the CPU register ﬁle. This fast path contains programmable hardware support for low latency transport and congestion control as well as hardware support for efﬁcient load balancing of RPCs to cores. A hardware-accelerated thread scheduler makes sub-nanosecond decisions, leading to high CPU utilization and low tail response time for RPCs. We built an FPGA prototype of the nanoPU fast path by modifying an open-source RISC-V CPU, and evaluated its performance using cycle-accurate simulations on AWS FPGAs. The wire-to-wire RPC response time through the nanoPU is just 69ns, an order of magnitude quicker than the best-of-breed, low latency, commercial NICs. We demonstrate that the hardware thread scheduler is able to lower RPC tail response time by about 5 × while enabling the system to sustain 20% higher load, relative to traditional thread scheduling techniques. We implement and evaluate a suite of applications, including MICA, Raft and Set Algebra for document retrieval; and we demonstrate that the nanoPU can be used as a high performance, programmable alternative for one-sided RDMA operations.","",""
111,"Stephen Ibanez, G. Brebner, N. McKeown, Noa Zilberman","The P4->NetFPGA Workflow for Line-Rate Packet Processing",2019,"","","","",593,"2024-08-22 15:04:59","","10.1145/3289602.3293924","","",,,,,111,22.20,28,4,5,"P4 has emerged as the de facto standard language for describing how network packets should be processed, and is becoming widely used by network owners, systems developers, researchers and in the classroom. The goal of the work presented here is to make it easier for engineers, researchers and students to learn how to program using P4, and to build prototypes running on real hardware. Our target is the NetFPGA SUME platform, a 4x10 Gb/s PCIe card designed for use in universities for teaching and research. Until now, NetFPGA users have needed to learn an HDL such as Verilog or VHDL, making it off limits to many software developers and students. Therefore, we developed the P4->NetFPGA workflow, allowing developers to describe how packets are to be processed in the high-level P4 language, then compile their P4 programs to run at line rate on the NetFPGA SUME board. The P4->NetFPGA workflow is built upon the Xilinx P4-SDNet compiler and the NetFPGA SUME open source code base. In this paper, we provide an overview of the P4 programming language and describe the P4->NetFPGA workflow. We also describe how the workflow is being used by the P4 community to build research prototypes, and to teach how network systems are built by providing students with hands-on experience working with real hardware.","",""
10,"Steven Ding, C. Gallacher","The Haply Development Platform: A Modular and Open-Sourced Entry Level Haptic Toolset",2018,"","","","",926,"2024-08-22 15:04:59","","10.1145/3170427.3186512","","",,,,,10,1.67,5,2,6,"This demonstration showcases an open-sourced hardware and software platform that was developed to lower the barrier of entry for those wishing to explore more sophisticated haptic interaction techniques. The Haply Development Toolkit allows developers to use the same hardware and software architecture to design force-feedback and vibratory haptic interaction methods from one to four degrees of freedom.","",""
29,"Sundaresan S, Anjana C, T. Zacharia, Gandhiraj R","Real time implementation of FMCW radar for target detection using GNU radio and USRP",2015,"","","","",770,"2024-08-22 15:04:59","","10.1109/ICCSP.2015.7322772","","",,,,,29,3.22,7,4,9,"Nowadays, FMCW (Frequency Modulated Continuous Wave) radar is widely adapted due to the use of solid state microwave amplifier to generate signal source. The FMCW radar can be implemented and analyzed at low cost and less complexity by using Software Defined Radio (SDR). In this paper, SDR based FMCW radar for target detection and air traffic control radar application is implemented in real time. The FMCW radar model is implemented using open source software and hardware. GNU Radio is utilized for software part of the radar and USRP (Universal Software Radio Peripheral) N210 for hardware part. Log-periodic antenna operating at 1GHZ frequency is used for transmission and reception of radar signals. From the beat signal obtained at receiver end and range resolution of signal, target is detected. Further low pass filtering followed by Fast Fourier Transform (FFT) is performed to reduce computational complexity.","",""
34,"Sung-Min Kim, Yosoon Choi, J. Suh","Applications of the Open-Source Hardware Arduino Platform in the Mining Industry: A Review",2020,"","","","",14,"2024-08-22 15:04:59","","10.3390/app10145018","","",,,,,34,8.50,11,3,4,"In this study, applications of the Arduino platform in the mining industry were reviewed. Arduino, a representative and popular open-source hardware, can acquire information from various sensors, transmit data using communication technology, and control devices through actuators. The review was conducted by classifying previous studies into three types of Arduino applications: field monitoring systems, wearable systems, and autonomous systems. With regard to field monitoring systems, most studies in mines were classified as atmospheric or geotechnical monitoring. In wearable systems, the health status of the miner was an important consideration, in addition to the environmental conditions of the mine. Arduino can be a useful tool as an initial prototype for autonomous mine systems. Arduino has advantages in that it can be combined with various electronic products and is cost-effective. Therefore, although many studies have been conducted in the laboratory (as opposed to field tests), Arduino applications can be further expanded in the mining field in the future.","",""
10,"Sung‐min Kim","Review of Internet of Things and Open-source Hardware Technologies Use in the Mining Industry",2019,"","","","",31,"2024-08-22 15:04:59","","10.32390/ksmer.2019.56.5.447","","",,,,,10,2.00,10,1,5,"With the fourth industrial revolution, a new era has emerged in which information and communication technology is being applied in the mining industry. This study investigated the applications of Internet of Things (IoT) technology and open source hardware in the mining industry. The concepts and specific examples of radio frequency identification, Bluetooth, and wireless sensor networks are presented. In addition, open source hardware such as Arduino and Raspberry Pi, which are IoT platforms that can connect wireless sensors and various functions, are described. The application cases are classified according to their purpose of use in the mining industry.","",""
44,"Susana Nascimento, Alexandre Pólvora","Maker Cultures and the Prospects for Technological Action",2016,"","","","",729,"2024-08-22 15:04:59","","10.1007/s11948-016-9796-8","","",,,,,44,5.50,22,2,8,"","",""
85,"Susmit Jha, Rhishikesh Limaye, S. Seshia","Beaver: Engineering an Efficient SMT Solver for Bit-Vector Arithmetic",2009,"","","","",803,"2024-08-22 15:04:59","","10.1007/978-3-642-02658-4_53","","",,,,,85,5.67,28,3,15,"","",""
24,"Swapnil Sayan Saha, S. Rahman, Miftahul Jannat Rasna, A. M. Mahfuzul Islam, Md. Atiqur Rahman Ahad","DU-MD: An Open-Source Human Action Dataset for Ubiquitous Wearable Sensors",2018,"","","","",275,"2024-08-22 15:04:59","","10.1109/ICIEV.2018.8641051","","",,,,,24,4.00,5,5,6,"Human Action Recognition (HAR) in healthcare amongst senior citizens focuses on remote surveillance, healthcare monitoring and fall detection. The wearable approach, in particular, wrist-mounted sensors for HAR is most favorable when qualitative characteristics, parameter complexities and market projections are considered. Machine learning models for Activities of Daily Living (ADL) / fall detection require large, hardware-independent and comprehensive ADL datasets exhibiting statistical variance and closeness to real life cases. However, there is a lack of public motion traces filling in all necessary obligations. In this context, the University of Dhaka (DU) Mobility Dataset (MD) was built using 25 subjects (out of 50) with 10 ADL (7 basic ADL and 3 falls), amounting to 2500 (out of a final 5000) training sets using a single wrist-mounted wearable sensor. Some existing public databases have been compared extensively and assembly of the wearable sensor using the recently developed UTokyo Trillion Node Engine Project is illustrated. Statistical tests have been carried out to ensure diversity whilst accuracy of the dataset using existing statistical mechanisms have been acknowledged. Promising diversity and accuracy make this dataset suitable for use in wrist-mounted healthcare monitoring systems.","",""
42,"Swaroop Ghosh","Spintronics and Security: Prospects, Vulnerabilities, Attack Models, and Preventions",2016,"","","","",983,"2024-08-22 15:04:59","","10.1109/JPROC.2016.2583419","","",,,,,42,5.25,42,1,8,"The experimental demonstration of current-driven spin-transfer torque (STT) for switching magnets and push domain walls (DWs) in magnetic nanowires have opened up new avenues for spintronic computations. These devices have shown great promise for logic and memory applications due to superior energy efficiency and nonvolatility. It has been noted that the nonlinear dynamics of DWs in the physical magnetic system is an untapped source of entropy that can be leveraged for hardware security. The inherent noise, spatial, and temporal randomness in the magnetic system can be employed in conjunction with microscopic and macroscopic properties to realize novel hardware security primitives. Due to simplicity of integration, the spintronic circuits can be an add-on to the silicon substrate to complement the existing CMOS-based security and trust infrastructures. This paper investigates the prospects of spintronics in hardware security by exploring the security-specific properties and novel security primitives realized using spintronic building blocks. As spintronic elements enter the mainstream computing platforms, they are exposed to emerging attacks that were infeasible before. This paper covers the security vulnerabilities, security and privacy attack models, and possible countermeasures to enable safe computing environment using spintronics.","",""
68,"T. Ajayi, D. Blaauw, T. Chan, C. Cheng, V. A. Chhabria, D. K. Choo, M. Coltella, R. Dreslinski, Mateus Fogac¸a, S. Hashemi, A. Ibrahim, A. Kahng, M. Kim, J. Li, Z. Liang, U. Mallappa, P. Pénzes, G. Pradipta, S. Reda, A. Rovinski, K. Samadi, S. Sapatnekar, L. Saul, C. Sechen, V. Srinivas, W. Swartz, D. Sylvester, D. Urquhart, L. Wang, M. Woo, B. Xu","OpenROAD: Toward a Self-Driving, Open-Source Digital Layout Implementation Tool Chain",2019,"","","","",216,"2024-08-22 15:04:59","","","","",,,,,68,13.60,7,31,5,"—We describe the scope and initial efforts of Open-ROAD, a project in the DARPA IDEA program that pursues open-source tools for 24-hour, “no human in the loop” digital layout generation across integrated circuit, package and board domains. If successful, OpenROAD will help realize the IDEA goal of “democratization of hardware design”, by reducing cost, expertise, schedule and risk barriers that confront system designers today. Several novel technical directions follow directly from the IDEA program’s 24-hour, no-humans goals. These include (i) enablement of pervasive machine learning in and around design tools and ﬂows, (ii) parallel search and optimization to exploit available cloud resources, (iii) partitioning and problem decomposition to reduce solution latency, and (iv) layout generation methodologies that provide “freedoms from choice” without undue loss of design quality. Further, the development of open-source, self-driving design tools is in and of itself a “moon shot” with numerous technical and cultural challenges.","",""
115,"T. Ajayi, V. A. Chhabria, Mateus Fogaça, S. Hashemi, Abdelrahman Hosny, A. Kahng, Minsoo Kim, Jeongsup Lee, U. Mallappa, Marina Neseem, G. Pradipta, S. Reda, Mehdi Saligane, S. Sapatnekar, C. Sechen, M. Shalan, W. Swartz, Lutong Wang, Zhehong Wang, M. Woo, Bangqi Xu","INVITED: Toward an Open-Source Digital Flow: First Learnings from the OpenROAD Project",2019,"","","","",201,"2024-08-22 15:04:59","","10.1145/3316781.3326334","","",,,,,115,23.00,12,21,5,"We describe the planned Alpha release of OpenROAD, an open-source end-to-end silicon compiler. OpenROAD will help realize the goal of “democratization of hardware design”, by reducing cost, expertise, schedule and risk barriers that confront system designers today. The development of open-source, self-driving design tools is in and of itself a “moon shot” with numerous technical and cultural challenges. The open-source flow incorporates a compatible open-source set of tools that span logic synthesis, floorplanning, placement, clock tree synthesis, global routing and detailed routing. The flow also incorporates analysis and support tools for static timing analysis, parasitic extraction, power integrity analysis, and cloud deployment. We also note several observed challenges, or “lessons learned”, with respect to development of open-source EDA tools and flows.","",""
27,"T. Akam, Andy Lustig, J. Rowland, Sampath K. T. Kapanaiah, Joan Esteve-Agraz, M. Panniello, Cristina Márquez, M. Kohl, D. Kätzel, Rui M. Costa, M. Walton","Open-source, Python-based, hardware and software for controlling behavioural neuroscience experiments",2022,"","","","",65,"2024-08-22 15:04:59","","10.7554/eLife.67846","","",,,,,27,13.50,3,11,2,"Laboratory behavioural tasks are an essential research tool. As questions asked of behaviour and brain activity become more sophisticated, the ability to specify and run richly structured tasks becomes more important. An increasing focus on reproducibility also necessitates accurate communication of task logic to other researchers. To these ends, we developed pyControl, a system of open-source hardware and software for controlling behavioural experiments comprising a simple yet flexible Python-based syntax for specifying tasks as extended state machines, hardware modules for building behavioural setups, and a graphical user interface designed for efficiently running high-throughput experiments on many setups in parallel, all with extensive online documentation. These tools make it quicker, easier, and cheaper to implement rich behavioural tasks at scale. As important, pyControl facilitates communication and reproducibility of behavioural experiments through a highly readable task definition syntax and self-documenting features. Here, we outline the system’s design and rationale, present validation experiments characterising system performance, and demonstrate example applications in freely moving and head-fixed mouse behaviour.","",""
30,"T. Akam, M. Walton","pyPhotometry: Open source Python based hardware and software for fiber photometry data acquisition",2018,"","","","",127,"2024-08-22 15:04:59","","10.1038/s41598-019-39724-y","","",,,,,30,5.00,15,2,6,"","",""
1276,"T. Baltrušaitis, P. Robinson, Louis-Philippe Morency","OpenFace: An open source facial behavior analysis toolkit",2016,"","","","",196,"2024-08-22 15:04:59","","10.1109/WACV.2016.7477553","","",,,,,1276,159.50,425,3,8,"Over the past few years, there has been an increased interest in automatic facial behavior analysis and understanding. We present OpenFace - an open source tool intended for computer vision and machine learning researchers, affective computing community and people interested in building interactive applications based on facial behavior analysis. OpenFace is the first open source tool capable of facial landmark detection, head pose estimation, facial action unit recognition, and eye-gaze estimation. The computer vision algorithms which represent the core of OpenFace demonstrate state-of-the-art results in all of the above mentioned tasks. Furthermore, our tool is capable of real-time performance and is able to run from a simple webcam without any specialist hardware. Finally, OpenFace allows for easy integration with other applications and devices through a lightweight messaging system.","",""
26,"T. Bojan, Umamaheswaran Raman Kumar, Viswanathan Manihatty Bojan","Designing vehicle tracking system - an open source approach",2014,"","","","",337,"2024-08-22 15:04:59","","10.1109/ICVES.2014.7063737","","",,,,,26,2.60,9,3,10,"Vehicle tracking system has been extensively used for fleet management, asset tracking, surveillance, stolen vehicle recovery and many more. Advances in modern technologies like ubiquitous computing, Internet of Things (IoT) coupled with the availability of the economical hardware building blocks is creating a new wave of vehicular tracking systems. In this work we present VERTIGUO (VEhiculaR TrackInG Using Opensource approach), a GPS,GSM and GPRS technology based vehicular tracking system, that is accurate, robust, flexible, economical and feature rich. Unlike the traditional COTS (Commercial Of The Shelf) vehicular tracking system, that are closed and confined to smartphone and PC's, our vehicular tracking system infrastructure is open sourced and is available for the research fraternity to test, experiment and add more features. The hardware (HW) is developed by leveraging our expertize on open source HW platform. The software (SW) infrastructure can track the vehicles through a web interface on smartphones and PC or through an SMS on normal GSM based feature phones. This application will work for all mobile phones provided they are on a GSM network. In this paper we describe our system architecture, prototype and results obtained in our field trials.","",""
32,"T. D. Matteis, J. D. F. Licht, T. Hoefler","FBLAS: Streaming Linear Algebra on FPGA",2019,"","","","",687,"2024-08-22 15:04:59","","10.1109/SC41405.2020.00063","","",,,,,32,6.40,11,3,5,"Spatial computing architectures pose an attractive alternative to mitigate control and data movement overheads typical of load-store architectures. In practice, these devices are rarely considered in the HPC community due to the steep learning curve, low productivity, and the lack of available libraries for fundamental operations. High-level synthesis (HLS) tools are facilitating hardware programming, but optimizing for these architectures requires factoring in new transformations and resources/performance trade-offs. We present FBLAS, an open-source HLS implementation of BLAS for FPGAs, that enables reusability, portability and easy integration with existing software and hardware codes. FBLAS’ implementation allows scaling hardware modules to exploit on-chip resources, and module interfaces are designed to natively support streaming on-chip communications, allowing them to be composed to reduce off-chip communication. With FBLAS, we set a precedent for FPGA library design, and contribute to the toolbox of customizable hardware components necessary for HPC codes to start productively targeting reconfigurable platforms.","",""
37,"T. Damase, Daniel Stephens, Adam Spencer, P. Allen","Open source and DIY hardware for DNA nanotechnology labs.",2015,"","","","",148,"2024-08-22 15:04:59","","10.14440/JBM.2015.72","","",,,,,37,4.11,9,4,9,"A set of instruments and specialized equipment is necessary to equip a laboratory to work with DNA. Reducing the barrier to entry for DNA manipulation should enable and encourage new labs to enter the field. We present three examples of open source/DIY technology with significantly reduced costs relative to commercial equipment. This includes a gel scanner, a horizontal PAGE gel mold, and a homogenizer for generating DNA-coated particles. The overall cost savings obtained by using open source/DIY equipment was between 50 and 90%.","",""
38,"T. Howard, S. Achiche, A. Özkil, T. McAloone","Open Design and Crowdsourcing: Maturity, Methodology and Business Models",2012,"","","","",604,"2024-08-22 15:04:59","","","","",,,,,38,3.17,10,4,12,"This paper describes how Crowd sourcing is now a mature field and how it can and should be used to support innovation and product development. The paper then explores the new paradigm of Open Design (open source hardware) which is a product-business desi","",""
38,"T. Inkinen, Reima Helminen, Janne Saarikoski","Port Digitalization with Open Data: Challenges, Opportunities, and Integrations",2019,"","","","",913,"2024-08-22 15:04:59","","10.3390/JOITMC5020030","","",,,,,38,7.60,13,3,5,"Digitalization is frequently addressed in recent economic and social scientific literature. This paper applies a distinction to digital data (raw data) and digital technologies (including both software platforms and hardware solutions). The open data is defined as follows: it is publicly available and non-chargeable data (information content) that is machine readable. Open data enables software and application development for external partners and users. A common feature in open-data applications is location-based identification (e.g., real-time traffic monitoring). These include spatial map visualizations, and monitoring of traffic and modes of transport. This visualized information provides additional support for data-based decision-making and management as these study results indicate. This information is valuable particularly in the decisions concerning unconventional and sudden events. This research indicates that the most suitable data resources for opening include information related to port transport infrastructure. In terms of temporal monitoring, static road and rail data is currently the most potential alternative for open data in ports. The main reasons are that these data sources are already at least partly published. However, they are not always in open-data formats. Static data is also a grounded starting point because the technical requirements are much less demanding in comparison to real-time data-processing and management","",""
56,"T. Javaheri, Morteza Homayounfar, Zohreh Amoozgar, R. Reiazi, F. Homayounieh, Engy Abbas, A. Laali, A. Radmard, M. Gharib, Seyed Ali Javad Mousavi, Omid Ghaemi, Rosa Babaei, Hadi Karimi Mobin, M. Hosseinzadeh, Rana Jahanban-Esfahlan, K. Seidi, M. Kalra, Guanglan Zhang, L. Chitkushev, B. Haibe-Kains, R. Malekzadeh, Reza Rawassizadeh","CovidCTNet: an open-source deep learning approach to diagnose covid-19 using small cohort of CT images",2021,"","","","",156,"2024-08-22 15:04:59","","10.1038/s41746-021-00399-3","","",,,,,56,18.67,6,22,3,"","",""
50,"T. Javaheri, Morteza Homayounfar, Zohreh Amoozgar, R. Reiazi, F. Homayounieh, Engy Abbas, A. Laali, A. Radmard, M. Gharib, Seyed Ali Javad Mousavi, Omid Ghaemi, Rosa Babaei, Hadi Karimi Mobin, M. Hosseinzadeh, Rana Jahanban-Esfahlan, K. Seidi, M. Kalra, Guanglan Zhang, L. Chitkushev, B. Haibe-Kains, R. Malekzadeh, Reza Rawassizadeh","CovidCTNet: An Open-Source Deep Learning Approach to Identify Covid-19 Using CT Image",2020,"","","","",186,"2024-08-22 15:04:59","","","","",,,,,50,12.50,5,22,4,"Coronavirus disease 2019 (Covid-19) is highly contagious with limited treatment options. Early and accurate diagnosis of Covid-19 is crucial in reducing the spread of the disease and its accompanied mortality. Currently, detection by reverse transcriptase polymerase chain reaction (RT-PCR) is the gold standard of outpatient and inpatient detection of Covid-19. RT-PCR is a rapid method, however, its accuracy in detection is only ~70-75%. Another approved strategy is computed tomography (CT) imaging. CT imaging has a much higher sensitivity of ~80-98%, but similar accuracy of 70%. To enhance the accuracy of CT imaging detection, we developed an open-source set of algorithms called CovidCTNet that successfully differentiates Covid-19 from community-acquired pneumonia (CAP) and other lung diseases. CovidCTNet increases the accuracy of CT imaging detection to 90% compared to radiologists (70%). The model is designed to work with heterogeneous and small sample sizes independent of the CT imaging hardware. In order to facilitate the detection of Covid-19 globally and assist radiologists and physicians in the screening process, we are releasing all algorithms and parametric details in an open-source format. Open-source sharing of our CovidCTNet enables developers to rapidly improve and optimize services, while preserving user privacy and data ownership.","",""
54,"T. Kranenburg, R. V. Leuken","MB-LITE: A robust, light-weight soft-core implementation of the MicroBlaze architecture",2010,"","","","",826,"2024-08-22 15:04:59","","10.1109/DATE.2010.5456903","","",,,,,54,3.86,27,2,14,"Due to the ever increasing number of microprocessors which can be integrated in very large systems on chip the need for robust, easily modifiable microprocessors has emerged. Within this paper a light-weight cycle compatible implementation of the MicroBlaze architecture called MB-LITE is presented in an attempt to fill the gap in quality between commercial and open source processors. Experimental results showed that MB-LITE obtains very high performance compared with other open source processors while using very few hardware resources. The microprocessor can be easily extended with existing IP thanks to an easily configurable data memory bus and a wishbone bus adapter. All components are modular to optimize design reuse and are developed using a two-process design methodology for improved performance, simulation and synthesis speeds. All components have been thoroughly tested and verified on a FPGA. Currently an architecture with four MB-LITE cores in a NoC architecture is in development which will be implemented in 90nm process technology.","",""
64,"T. Moreau, Tianqi Chen, Ziheng Jiang, L. Ceze, Carlos Guestrin, A. Krishnamurthy","VTA: An Open Hardware-Software Stack for Deep Learning",2018,"","","","",891,"2024-08-22 15:04:59","","","","",,,,,64,10.67,11,6,6,"Specialized Deep Learning (DL) acceleration stacks, designed for a specific set of frameworks, model architectures, operators, and data types, offer the allure of high performance while sacrificing flexibility. Changes in algorithms, models, operators, or numerical systems threaten the viability of specialized hardware accelerators. We propose VTA, a programmable deep learning architecture template designed to be extensible in the face of evolving workloads. VTA achieves this flexibility via a parametrizable architecture, two-level ISA, and a JIT compiler. The two-level ISA is based on (1) a task-ISA that explicitly orchestrates concurrent compute and memory tasks and (2) a microcode-ISA which implements a wide variety of operators with single-cycle tensor-tensor operations. Next, we propose a runtime system equipped with a JIT compiler for flexible code-generation and heterogeneous execution that enables effective use of the VTA architecture. VTA is integrated and open-sourced into Apache TVM, a state-of-the-art deep learning compilation stack that provides flexibility for diverse models and divergent hardware backends. We propose a flow that performs design space exploration to generate a customized hardware architecture and software operator library that can be leveraged by mainstream learning frameworks. We demonstrate our approach by deploying optimized deep learning models used for object classification and style transfer on edge-class FPGAs.","",""
18,"T. Paakki, J. Raasakka, F. D. Rosa, H. Hurskainen, J. Nurmi","TUTGNSS University based hardware/software GNSS receiver for research purposes",2010,"","","","",653,"2024-08-22 15:04:59","","10.1109/UPINLBS.2010.5654337","","",,,,,18,1.29,4,5,14,"Recently a lot of research has been going on in the field of Global Navigation Satellite System receivers. Only few projects have been providing open source hardware receivers. In this paper we present a university based GNSS receiver intended for open source release. The highly modular design of the receiver is described in detail. We also provide description of the software parts and advanced user interface of the receiver. In the end of the paper a test scenario is provided proving the functionality of the receiver design. The presented GNSS receiver architecture is expected to be valuable prototype for research purposes.","",""
1192,"T. Pologruto, B. Sabatini, K. Svoboda","ScanImage: Flexible software for operating laser scanning microscopes",2003,"","","","",512,"2024-08-22 15:04:59","","10.1186/1475-925X-2-13","","",,,,,1192,56.76,397,3,21,"","",""
40,"T. Straumann","Open Source Real Time Operating Systems Overview",2001,"","","","",461,"2024-08-22 15:04:59","","10.2172/798939","","",,,,,40,1.74,40,1,23,"Modern control systems applications are often built on top of a real time operating system (RTOS) which provides the necessary hardware abstraction as well as scheduling, networking and other services. Several open source RTOS solutions are publicly available, which is very attractive, both from an economic (no licensing fees) as well as from a technical (control over the source code) point of view. This contribution gives an overview of the RTLinux and RTEMS systems (architecture, development environment, API etc.). Both systems feature most popular CPUs, several APIs (including Posix), networking, portability and optional commercial support. Some performance figures are presented, focusing on interrupt latency and context switching delay.","",""
127,"T. Stöcker, K. Vahedipour, D. Pflugfelder, N. Shah","High‐performance computing MRI simulations",2010,"","","","",748,"2024-08-22 15:04:59","","10.1002/mrm.22406","","",,,,,127,9.07,32,4,14,"A new open‐source software project is presented, JEMRIS, the Jülich Extensible MRI Simulator, which provides an MRI sequence development and simulation environment for the MRI community. The development was driven by the desire to achieve generality of simulated three‐dimensional MRI experiments reflecting modern MRI systems hardware. The accompanying computational burden is overcome by means of parallel computing. Many aspects are covered that have not hitherto been simultaneously investigated in general MRI simulations such as parallel transmit and receive, important off‐resonance effects, nonlinear gradients, and arbitrary spatiotemporal parameter variations at different levels. The latter can be used to simulate various types of motion, for instance. The JEMRIS user interface is very simple to use, but nevertheless it presents few limitations. MRI sequences with arbitrary waveforms and complex interdependent modules are modeled in a graphical user interface–based environment requiring no further programming. This manuscript describes the concepts, methods, and performance of the software. Examples of novel simulation results in active fields of MRI research are given. Magn Reson Med 64:186–193, 2010. © 2010 Wiley‐Liss, Inc.","",""
115,"T. Sørensen, T. Schaeffter, Karsten O. Noe, M. Hansen","Accelerating the Nonequispaced Fast Fourier Transform on Commodity Graphics Hardware",2008,"","","","",617,"2024-08-22 15:04:59","","10.1109/TMI.2007.909834","","",,,,,115,7.19,29,4,16,"We present a fast parallel algorithm to compute the nonequispaced fast Fourier transform on commodity graphics hardware (the GPU). We focus particularly on a novel implementation of the convolution step in the transform as it was previously its most time consuming part. We describe the performance for two common sample distributions in medical imaging (radial and spiral trajectories), and for different convolution kernels as these parameters all influence the speed of the algorithm. The GPU-accelerated convolution is up to 85 times faster as our reference, the open source NFFT library on a state-of-the-art 64 bit CPU. The accuracy of the proposed GPU implementation was quantitatively evaluated at the various settings. To illustrate the applicability of the transform in medical imaging, in which it is also known as gridding, we look specifically at non-Cartesian magnetic resonance imaging and reconstruct both a numerical phantom and an in vivo cardiac image.","",""
61,"T. Ungi, Derek Sargent, Eric M. Moult, A. Lasso, C. Pinter, R. McGraw, G. Fichtinger","Perk Tutor: An Open-Source Training Platform for Ultrasound-Guided Needle Insertions",2012,"","","","",377,"2024-08-22 15:04:59","","10.1109/TBME.2012.2219307","","",,,,,61,5.08,9,7,12,"Image-guided needle placement, including ultrasound (US)-guided techniques, have become commonplace in modern medical diagnosis and therapy. To ensure that the next generations of physicians are competent using this technology, efficient and effective educational programs need to be developed. This paper presents the Perk Tutor: a configurable, open-source training platform for US-guided needle insertions. The Perk Tutor was successfully tested in three different configurations to demonstrate its adaptability to different procedures and learning objectives. 1) The Targeting Tutor, designed to develop US-guided needle targeting skills, 2) the Lumbar Tutor, designed for practicing US-guided lumbar spinal procedures, and (3) the Prostate Biopsy Tutor, configured for US-guided prostate biopsies. The Perk Tutor provides the trainee with quantitative feedback on progress toward the specific learning objectives of each configuration. Configurations were implemented through simple rearrangement of hardware and software components, attesting to the modularity and ease of configuration. The Perk Tutor is provided as a free resource to enable research and development of educational programs for US-guided intervention.","",""
17,"Taeyang Kim, Donghee Don Shin","Social platform innovation of open source hardware in South Korea",2016,"","","","",88,"2024-08-22 15:04:59","","10.1016/j.tele.2015.07.004","","",,,,,17,2.13,9,2,8,"","",""
125,"Takanori Ueda, T. Nakaike, Moriyoshi Ohara","Workload characterization for microservices",2016,"","","","",630,"2024-08-22 15:04:59","","10.1109/IISWC.2016.7581269","","",,,,,125,15.63,42,3,8,"The microservice architecture is a new framework to construct a Web service as a collection of small services that communicate with each other. It is becoming increasingly popular because it can accelerate agile software development, deployment, and operation practices. As a result, cloud service providers are expected to host an increasing number of microservices that can generate significant resource pressure on the cloud infrastructure. We want to understand the characteristics of microservice workloads to design an infrastructure optimized for microservices. In this paper, we used Acme Air, an open-source benchmark for Web services, and analyzed the behavior of two versions of the benchmark, microservice and monolithic, for two widely used language runtimes, Node.js and Java. We observed a significant overhead due to the microservice architecture; the performance of the microservice version can be 79.2% lower than the monolithic version on the same hardware configuration. On Node.js, the microservice version consumed 4.22 times more time in the libraries of Node.js than the monolithic version to process one user request. On Java, the microservice version also consumed more time in the application server than the monolithic version. We explain these performance differences from both hardware and software perspectives. We discuss the network virtualization in Docker, an infrastructure for microservices that has nonnegligible impact on performance. These findings give clues to develop optimization techniques in a language runtime and hardware for microservice workloads.","",""
36,"Tanja Aitamurto, Dónal P. Holland, Sofia Hussain","The Open Paradigm in Design Research",2015,"","","","",515,"2024-08-22 15:04:59","","10.1162/DESI_a_00348","","",,,,,36,4.00,12,3,9,"Introduction The shift from closed to open paradigms in new product development is seen as an emergence of new forms of production, innovation, and design.1 Innovation processes are shifting from open source software to open source hardware design. Emulating open source software, design information for open source hardware is shared publicly to enhance the development of physical products, machines, and systems.2 Similarly, the rise of the “maker culture” enhances product tinkering,3 while the do-it-yourself (DIY) movement embraces “the open” in design.4 Users participate in design via crowdsourcing and co-creation on platforms such as OpenIdeo and Quirky and by joining proliferating open innovation challenges.5 At the back end of the design process, customers are invited to participate in mass customization and personalization to personalize products.6 The open paradigm has received scholarly attention through studies of open source software7 and open source hardware.8 Moreover, user engagement in the design process has been studied as user-centric innovation,9 participatory design,10 and codesign,11 as well as customer co-creation and crowdsourcing.12 However, the “open” landscape in design lacks consensus regarding a unified definition for open design practices. This lack of agreement partially results from the gap in approaches to design. Studies of innovation and new product development are focused on user-centric approaches and customer engagement in several stages of the design process, whereas current definitions of open design are focused on openness of technical design information and largely exclude, in particular, the early stages of the design process. The open design definitions also lack the commercial aspects of openness. Thus, the existing definitions are too narrow to holistically represent the shift from a closed paradigm to an open paradigm in design. Moreover, the lack of clarity and consistency in definitions is hindering the development of open design as a design approach. To fully advance the research on methods and practices, a more comprehensive perception of openness in the design process is needed. 1 See, e.g., Henry Chesbrough, “Open Innovation: A New Paradigm for Understanding Industrial Innovation,” in Open Innovation: Researching a New Paradigm, ed. Henry Chesbrough, Wim Vanhaverbeke, Joel West, (Oxford: Oxford University Press, 2006), 1–34; Henry Chesbrough, Open Services Innovation: Rethinking Your Business to Grow and Compete in a New Era (San Francisco: Jossey-Bass, 2011, Kindle edition); Eric von Hippel, Democratizing Innovation (Cambridge, MA: MIT Press, 2005); Yochai Benkler, “Coase’s Penguin, or Linux and the Nature of the Firm,” Yale Law Journal 112 (2002): 371–446. 2 Christina Raasch, Cornelius Herstatt, and Kerstin Balka, “On the Open Design of Tangible Goods,” R&D Management 39, no. 4 (2009): 382–93. 3 Chris Anderson, Makers: The New Industrial Revolution (New York: Crown, 2012). 4 Hilde Bouchez, “Pimp Your Home: Or Why Design Cannot Remain Exclusive—From a Consumer Perspective,” The Design Journal 15, no. 4 (2012): 461–78. 5 Lars Bo Jeppesen and Karim R. Lakhani, “Marginality and Problem-Solving Effectiveness in Broadcast Search,” Organization Science: Articles in Advance 21, no. 5 (2010): 1016–33. 6 Fabrizio Salvador, Pablo Martin de Holan, and Frank Piller, “Cracking the Code for Mass-Customization,” Sloan Management Review 50, no. 3 (2009): 71–78. 7 Eric von Hippel and Georg von Krogh, “Open Source Software and the ‘PrivateCollective’ Innovation Model: Issues for Organization Science,” Organization Science 14, no. 2 (2003): 209–23. 8 Sanne van der Beek, “From Representation to Rhizome: Open Design from a Relational Perspective,” The Design Journal 15, no. 4 (2012): 423–42. 9 von Hippel, Democratizing Innovation, 17.","",""
14,"Tengfei Chang, Pere Tuset, Xavier Vilajosana, T. Watteyne","OpenWSN &amp; OpenMote: Demo'ing a Complete Ecosystem for the Industrial Internet of Things",2016,"","","","",813,"2024-08-22 15:04:59","","10.1109/SAHCN.2016.7733004","","",,,,,14,1.75,4,4,8,"The Industrial Internet of Things (IIoT) vision relies on reliable low-power wireless technologies and a complete standardized protocol stack that brings Internet connectivity to constrained end devices. Currently IEEE802.15.4-2015 TSCH provides reliability over low-power wireless technologies and the IETF has defined a protocol stack that is suitable to constrained devices. Open-source initiatives contributing to the development of network stacks for embedded devices, and the availability of open hardware platforms that facilitate prototyping IIoT applications contributes to the adoption of IIoT technologies. To realize the IIoT vision, this demo presents the Open- WSN and OpenMote projects, which provide both an open-source software implementation of the IEEE low-power wireless technologies and the IETF protocol stack, and an open-source hardware platform that meets the requirements to prototype IIoT applications.","",""
38,"Thiago Santini, Wolfgang Fuhl, David Geisler, Enkelejda Kasneci","EyeRecToo: Open-source Software for Real-time Pervasive Head-mounted Eye Tracking",2017,"","","","",272,"2024-08-22 15:04:59","","10.5220/0006224700960101","","",,,,,38,5.43,10,4,7,": Head-mounted eye tracking offers remarkable opportunities for research and applications regarding pervasive health monitoring, mental state inference, and human computer interaction in dynamic scenarios. Although a plethora of software for the acquisition of eye-tracking data exists, they often exhibit critical issues when pervasive eye tracking is considered, e.g., closed source, costly eye tracker hardware dependencies, and requiring a human supervisor for calibration. In this paper, we introduce EyeRecToo , an open-source software for real-time pervasive head-mounted eye-tracking. Out of the box, EyeRecToo offers multiple real-time state-of-the-art pupil detection and gaze estimation methods, which can be easily replaced by user implemented algorithms if desired. A novel calibration method that allows users to calibrate the system without the assistance of a human supervisor is also integrated. Moreover, this software supports multiple head-mounted eye-tracking hardware, records eye and scene videos, and stores pupil and gaze information, which are also available as a real-time stream. Thus, EyeRecToo serves as a framework to quickly enable pervasive eye-tracking research and applications. Available at: available-after-proceedings-publication-february-2017","",""
1264,"Thomas Hinton, Q. Jallerat, Rachelle N. Palchesko, J. Park, Martin S. Grodzicki, Hao-Jan Shue, M. Ramadan, Andrew R Hudson, A. Feinberg","Three-dimensional printing of complex biological structures by freeform reversible embedding of suspended hydrogels",2015,"","","","",504,"2024-08-22 15:04:59","","10.1126/sciadv.1500758","","",,,,,1264,140.44,140,9,9,"Freeform reversible embedding of suspended hydrogels enables three-dimensional printing of soft extracellular matrix biopolymers in biomimetic structures. We demonstrate the additive manufacturing of complex three-dimensional (3D) biological structures using soft protein and polysaccharide hydrogels that are challenging or impossible to create using traditional fabrication approaches. These structures are built by embedding the printed hydrogel within a secondary hydrogel that serves as a temporary, thermoreversible, and biocompatible support. This process, termed freeform reversible embedding of suspended hydrogels, enables 3D printing of hydrated materials with an elastic modulus <500 kPa including alginate, collagen, and fibrin. Computer-aided design models of 3D optical, computed tomography, and magnetic resonance imaging data were 3D printed at a resolution of ~200 μm and at low cost by leveraging open-source hardware and software tools. Proof-of-concept structures based on femurs, branched coronary arteries, trabeculated embryonic hearts, and human brains were mechanically robust and recreated complex 3D internal and external anatomical architectures.","",""
74,"Thomas Schmid Nesl","GNU Radio 802 . 15 . 4 En-and Decoding",2006,"","","","",827,"2024-08-22 15:04:59","","","","",,,,,74,4.11,74,1,18,"The IEEE wireless standard 802.15.4 gets widespread attention because of its adoption in sensor networks, home automation, and other networked systems. The goal of the project is to implement an enand decoding block for the IEEE 802.15.4 protocol in GNU Radio, an open source solution for software defined radios. This report will give an insight into the working of GNU Radio and some of its hardware components. Additionally, it gives details about the implementation of the enand decoding blocks. At the end, we will verify the implementation by sending and receiving messages to and from an actual IEEE 802.15.4 radio chip, the CC2420 from ChipCon, and give a small bandwidth comparison of the two solutions.","",""
14,"Thomas Watson, Natalie Andrews, Samuel P. X. Davis, L. Bugeon, Margaret D Dallman, J. McGinty","OPTiM: Optical projection tomography integrated microscope using open-source hardware and software",2017,"","","","",61,"2024-08-22 15:04:59","","10.1371/journal.pone.0180309","","",,,,,14,2.00,2,6,7,"We describe the implementation of an OPT plate to perform optical projection tomography (OPT) on a commercial wide-field inverted microscope, using our open-source hardware and software. The OPT plate includes a tilt adjustment for alignment and a stepper motor for sample rotation as required by standard projection tomography. Depending on magnification requirements, three methods of performing OPT are detailed using this adaptor plate: a conventional direct OPT method requiring only the addition of a limiting aperture behind the objective lens; an external optical-relay method allowing conventional OPT to be performed at magnifications >4x; a remote focal scanning and region-of-interest method for improved spatial resolution OPT (up to ~1.6 μm). All three methods use the microscope’s existing incoherent light source (i.e. arc-lamp) and all of its inherent functionality is maintained for day-to-day use. OPT acquisitions are performed on in vivo zebrafish embryos to demonstrate the implementations’ viability.","",""
288,"Thurein S. Paing, Jason R. Shin, R. Zane, Z. Popovic","Resistor Emulation Approach to Low-Power RF Energy Harvesting",2008,"","","","",684,"2024-08-22 15:04:59","","10.1109/TPEL.2008.921167","","",,,,,288,18.00,72,4,16,"This paper presents an approach and associated circuitry for harvesting near maximum output power from electromagnetic waves in the RF/microwave region of the spectrum with variable incident power densities in the range of tens of muW/cm2. It is shown that open loop resistor emulation at the input port of a power converter is a suitable solution for tracking the peak power point of a low-power rectifying antenna source over a wide range of incident RF power densities. A boost converter with a simple low-power control approach for resistor emulation is presented. A hardware design example with detailed efficiency analysis is given using commercially available discrete circuitry. Experimental results are presented for a system harvesting 420 muW to 8 muW from a 6 cm times 6 cm rectifying antenna with incident RF power ranging from 70 muW/cm2 to 30 muW/cm2, respectively. The results demonstrate that resistor emulation is a simple and practical approach to energy harvesting with variable low-power radiative RF sources.","",""
105,"Tiago Rosado, Jorge Bernardino","An overview of openstack architecture",2014,"","","","",664,"2024-08-22 15:04:59","","10.1145/2628194.2628195","","",,,,,105,10.50,53,2,10,"Cloud Computing concept refers to both the applications delivered as services over the Internet and the servers and system software in the datacenters that provide those services. These solutions offer pools of virtualized computing resources, paid on a pay-per-use basis, and drastically reduce the initial investment and maintenance costs. Efficient and flexible resource management is the main focus for the cloud solutions on the market as well as scalability and adaptability to new environments. Openstack exceeded the market as a scalable, performant and highly adaptive open source architecture for both public and private cloud solutions as well as leveraging from hardware resources either they be professional or entry level. This paper gives an overview of Openstack software components functionalities in order to design and implement unique cloud computing solutions to fit enterprises purposes.","",""
1126,"Tianqi Chen, T. Moreau, Ziheng Jiang, Haichen Shen, Eddie Q. Yan, Leyuan Wang, Yuwei Hu, L. Ceze, Carlos Guestrin, A. Krishnamurthy","TVM: An Automated End-to-End Optimizing Compiler for Deep Learning",2018,"","","","",948,"2024-08-22 15:04:59","","","","",,,,,1126,187.67,113,10,6,"There is an increasing need to bring machine learning to a wide diversity of hardware devices. Current frameworks rely on vendor-speciﬁc operator libraries and optimize for a narrow range of server-class GPUs. Deploying workloads to new platforms such as mobile phones, embedded devices, and accelerators (e.g., FPGAs, ASICs) requires signiﬁcant manual effort. We propose TVM, a compiler that exposes graph-level and operator-level optimizations to provide performance portability to deep learning workloads across diverse hardware back-ends. TVM solves optimization challenges speciﬁc to deep learning such as high-level operator fusion, mapping to arbitrary hardware primitives, and memory latency hiding. TVM also offers automated optimization of low-level programs to hardware characteristics by employing a novel learning-based cost modeling method for rapid exploration of code optimizations. Experimental results demonstrate that TVM delivers performance across hardware back-ends that are competitive with state-of-the-art hand tuned libraries for low-power CPU, mobile GPU, and server-class GPUs. We also demonstrate TVM’s ability to target new accelerator back-ends by targeting an FPGA-based generic deep learning accelerator. The system is open sourced and in production use inside several major companies.","",""
139,"Tianqi Chen, T. Moreau, Ziheng Jiang, Haichen Shen, Eddie Q. Yan, Leyuan Wang, Yuwei Hu, Luis Ceze, Carlos Guestrin, Arvind Krishnamurthy","TVM: End-to-End Optimization Stack for Deep Learning",2018,"","","","",980,"2024-08-22 15:04:59","","","","",,,,,139,23.17,14,10,6,"Scalable frameworks, such as TensorFlow, MXNet, Caffe, and PyTorch drive the current popularity and utility of deep learning. However, these frameworks are optimized for a narrow range of server-class GPUs and deploying workloads to other platforms such as mobile phones, embedded devices, and specialized accelerators (e.g., FPGAs, ASICs) requires laborious manual effort. We propose TVM, an end-to-end optimization stack that exposes graph-level and operator-level optimizations to provide performance portability to deep learning workloads across diverse hardware back-ends. We discuss the optimization challenges specific to deep learning that TVM solves: high-level operator fusion, low-level memory reuse across threads, mapping to arbitrary hardware primitives, and memory latency hiding. Experimental results demonstrate that TVM delivers performance across hardware back-ends that are competitive with state-of-the-art libraries for low-power CPU and server-class GPUs. We also demonstrate TVM's ability to target new hardware accelerator back-ends by targeting an FPGA-based generic deep learning accelerator. The compiler infrastructure is open sourced.","",""
392,"Tianqi Chen, T. Moreau, Ziheng Jiang, Lianmin Zheng, Eddie Q. Yan, Haichen Shen, M. Cowan, Leyuan Wang, Yuwei Hu, L. Ceze, Carlos Guestrin, A. Krishnamurthy","TVM: An Automated End-to-End Optimizing Compiler for Deep Learning",2018,"","","","",958,"2024-08-22 15:04:59","","","","",,,,,392,65.33,39,12,6,"There is an increasing need to bring machine learning to a wide diversity of hardware devices. Current frameworks rely on vendor-specific operator libraries and optimize for a narrow range of server-class GPUs. Deploying workloads to new platforms -- such as mobile phones, embedded devices, and accelerators (e.g., FPGAs, ASICs) -- requires significant manual effort. We propose TVM, a compiler that exposes graph-level and operator-level optimizations to provide performance portability to deep learning workloads across diverse hardware back-ends. TVM solves optimization challenges specific to deep learning, such as high-level operator fusion, mapping to arbitrary hardware primitives, and memory latency hiding. It also automates optimization of low-level programs to hardware characteristics by employing a novel, learning-based cost modeling method for rapid exploration of code optimizations. Experimental results show that TVM delivers performance across hardware back-ends that are competitive with state-of-the-art, hand-tuned libraries for low-power CPU, mobile GPU, and server-class GPUs. We also demonstrate TVM's ability to target new accelerator back-ends, such as the FPGA-based generic deep learning accelerator. The system is open sourced and in production use inside several major companies.","",""
8,"Tiina Malinen, Teemu Mikkonen, Vesa Tienvieri, Tere Vadén","Community created open source hardware: A case study of ""eCars - Now!""",2011,"","","","",147,"2024-08-22 15:04:59","","10.5210/fm.v16i5.3357","","",,,,,8,0.62,2,4,13,"Based on a survey, we describe the demographic and motivational structure of one open source hardware (OSH) community and compare it to open source software (OSS) communities. Taken separately, both the demographics and the motivational structure of the OSH community fall clearly within the typology of OSS communities, but when the two are taken together the OSH community forms a type of its own. We also discuss bottlenecks in OSH development revealed by the survey and subsequent interviews.","",""
7,"Tiina Malinen, Teemu Mikkonen, Vesa Tienvieri, Tere Vadén","Open source hardware through volunteer community: a case study of eCars -- now!",2010,"","","","",159,"2024-08-22 15:04:59","","10.1145/1930488.1930502","","",,,,,7,0.50,2,4,14,"The development model of Open Source Software (OSS) has been widely recognized as resilient and productive. Consequently, high hopes have been placed on projects that try to adapt the OSS model into material production, in projects that can be called Open Source Hardware (OSH). While OSS development has received increasing scholarly attention, the research on OSH is still in its early stages. Here, based on a survey done in 2010, we describe the demographic and motivational structure of one OSH community and compare it to OSS communities. The community analysis will be accompanied with a short discussion of what we see as bottlenecks in OSH development, i.e., features that may disable some of the beneficial dynamics of OSS development, and consequently merit further study.","",""
24,"Tim Ansell, Mehdi Saligane","The Missing Pieces of Open Design Enablement: A Recent History of Google Efforts : lnvited Paper",2020,"","","","",473,"2024-08-22 15:04:59","","10.1145/3400302.3415736","","",,,,,24,6.00,12,2,4,"In an initiative to advance the open-source electronic design automation (EDA) and hardware design community, Google has been spearheading a global collaborative effort involving investigators from academia, start-ups as well as foundries. Open-source silicon being the end goal, multiple blossoming projects are supported to drive the renewed open-source wave to break down the barriers of EDA tooling and ultimately hardware design. This push toward the democratization of hardware also aims to develop and release an open-source platform of silicon-proven analog and digital IP blocks to serve as a foundation for rapid design of complex, secure systems-on-chip (SoCs) at bleeding edge technology nodes. This paper details the different efforts that constitute the missing pieces standing in the way of open design enablement such as: OpenROAD for EDA tooling, digital libraries such as OpenRAM and standard cells, and finally analog and mixed-signal (AMS) building blocks for SoCs such as: BAG and FASoC.","",""
40,"Tim Landgraf, Hai Nguyen, Joseph Schröer, A. Szengel, R. J. Clément, D. Bierbach, J. Krause","Blending in with the Shoal: Robotic Fish Swarms for Investigating Strategies of Group Formation in Guppies",2014,"","","","",763,"2024-08-22 15:04:59","","10.1007/978-3-319-09435-9_16","","",,,,,40,4.00,6,7,10,"","",""
18,"Tobias Kessler, Julian Bernhard, M. Buechel, Klemens Esterle, Patrick Hart, Daniel Malovetz, Michael Truong-Le, Frederik Diehl, T. Brunner, A. Knoll","Bridging the Gap between Open Source Software and Vehicle Hardware for Autonomous Driving",2019,"","","","",123,"2024-08-22 15:04:59","","10.1109/IVS.2019.8813784","","",,,,,18,3.60,2,10,5,"Although many research vehicle platforms for autonomous driving have been built in the past, hardware design, source code and lessons learned have not been made available for the next generation of demonstrators. This raises the efforts for the research community to contribute results based on real-world evaluations as engineering knowledge of building and maintaining a research vehicle is lost. In this paper, we deliver an analysis of our approach to transferring an open source driving stack to a research vehicle. We put the hardware and software setup in context to other demonstrators and explain the criteria that led to our chosen hardware and software design. Specifically, we discuss the mapping of the Apollo driving stack to the system layout of our research vehicle, fortuna, including communication with the actuators by a controller running on a real-time hardware platform and the integration of the sensor setup. With our collection of the lessons learned, we encourage a faster setup of such systems by other research groups in the future.","",""
20,"Tobias Wenzel","Open hardware: From DIY trend to global transformation in access to laboratory equipment",2022,"","","","",218,"2024-08-22 15:04:59","","10.1371/journal.pbio.3001931","","",,,,,20,10.00,20,1,2,"Open hardware solutions are increasingly being chosen by researchers as a strategy to improve access to technology for cutting-edge biology research. The use of DIY technology is already widespread, particularly in countries with limited access to science funding, and is catalyzing the development of open-source technologies. Beyond financial accessibility, open hardware can be transformational for the access of laboratories to equipment by reducing dependence on import logistics and enabling direct knowledge transfer. Central drivers to the adoption of appropriate open-source technologies in biology laboratories around the world are open sharing, digital fabrication, local production, the use of standard parts, and detailed documentation. This Essay examines the global spread of open hardware and discusses which kinds of open-source technologies are the most beneficial in scientific environments with economic and infrastructural constraints.","",""
70,"Todd Evans, W. Barth, J. Browne, R. L. Deleon, T. Furlani, S. Gallo, Matthew D. Jones, A. Patra","Comprehensive Resource Use Monitoring for HPC Systems with TACC Stats",2014,"","","","",706,"2024-08-22 15:04:59","","10.1109/HUST.2014.7","","",,,,,70,7.00,9,8,10,"This paper reports on a comprehensive, fully automated resource use monitoring package, TACC Stats, which enables both consultants, users and other stakeholders in an HPC system to systematically and actively identify jobs/applications that could benefit from expert support and to aid in the diagnosis of software and hardware issues. TACC Stats continuously collects and analyzes resource usage data for every job run on a system and differs significantly from conventional profilers because it requires no action on the part of the user or consultants -- it is always collecting data on every node for every job. TACC Stats is open source and downloadable, configurable and compatible with general Linux-based computing platforms, and extensible to new CPU architectures and hardware devices. It is meant to provide a comprehensive resource usage monitoring solution. In addition to describing TACC Stats, the paper illustrates its application to identifying production jobs which have inefficient resource use characteristics.","",""
123,"Tom Lubinski, S. Johri, P. Varosy, J. Coleman, Luning Zhao, Jason Necaise, C. Baldwin, K. Mayer, T. Proctor","Application-Oriented Performance Benchmarks for Quantum Computing",2021,"","","","",537,"2024-08-22 15:04:59","","10.1109/TQE.2023.3253761","","",,,,,123,41.00,14,9,3,"In this work, we introduce an open-source suite of quantum application-oriented performance benchmarks that is designed to measure the effectiveness of quantum computing hardware at executing quantum applications. These benchmarks probe a quantum computer's performance on various algorithms and small applications as the problem size is varied, by mapping out the fidelity of the results as a function of circuit width and depth using the framework of volumetric benchmarking. In addition to estimating the fidelity of results generated by quantum execution, the suite is designed to benchmark certain aspects of the execution pipeline in order to provide end users with a practical measure of both the quality of and the time to solution. Our methodology is constructed to anticipate advances in quantum computing hardware that are likely to emerge in the next five years. This benchmarking suite is designed to be readily accessible to a broad audience of users and provides benchmarks that correspond to many well-known quantum computing algorithms.","",""
81,"Tomas Aidukas, Regina Eckert, A. Harvey, L. Waller, P. C. Konda","Low-cost, sub-micron resolution, wide-field computational microscopy using opensource hardware",2018,"","","","",921,"2024-08-22 15:04:59","","10.1038/s41598-019-43845-9","","",,,,,81,13.50,16,5,6,"","",""
61,"Tomas Diez","Personal Fabrication: Fab Labs as Platforms for Citizen-Based Innovation, from Microcontrollers to Cities",2012,"","","","",780,"2024-08-22 15:04:59","","10.1007/s00004-012-0131-7","","",,,,,61,5.08,61,1,12,"","",""
31,"Tuukka M. Takala, Meeri Mäkäräinen, Perttu Hämäläinen","Immersive 3D modeling with Blender and off-the-shelf hardware",2013,"","","","",552,"2024-08-22 15:04:59","","10.1109/3DUI.2013.6550243","","",,,,,31,2.82,10,3,11,"We present an immersive 3D modeling application with stereoscopic graphics, head tracking, and 3D input devices. The application was built in three weeks on top of Blender, an open source 3D modeling software, and relies solely on affordable, off-the-shelf hardware like PlayStation Move controllers. Our goal was to create an easy to use 3D modeling environment that employs both 2D and 3D interaction techniques and contains several modeling tools. We conducted a basic user study where novice and professional 3D artists created 3D models with our application. The study participants thought that the application was fun and intuitive to use, but accurate posing of objects was difficult. We also examined the participants' beliefs about future use of immersive technology in 3D modeling. The short implementation time of the application, its many features, and the 3D models created by the study participants set an example of what can be achieved with open source software and off-the-shelf hardware.","",""
17,"Tyler Sondag, James Feher","Open Source Wifi Hotspot Implementation",2007,"","","","",451,"2024-08-22 15:04:59","","10.6017/ITAL.V26I2.3280","","",,,,,17,1.00,9,2,17,"The goal of this paper is to describe a design—including the hardware, software, and configuration––for an open source wireless network. The network designed will require authentication. While care will be taken to keep the authentication exchange secure, the network will otherwise transmit data without encryption.","",""
37,"Tyson Jones, S. Benjamin","QuESTlink—Mathematica embiggened by a hardware-optimised quantum emulator",2019,"","","","",418,"2024-08-22 15:04:59","","10.1088/2058-9565/ab8506","","",,,,,37,7.40,19,2,5,"We introduce QuESTlink,pronounced ‘quest link’, an open-source Mathematicapackage which efficiently emulates quantum computers. By integratingwith the Quantum Exact Simulation Toolkit (QuEST), QuESTlink offers ahigh-level, expressive and usable interface to a high-performance, hardware-accelerated emulator. Requiring no installation, QuESTlink streamlines the powerful analysis capabilities of Mathematica into the study of quantum systems, even utilising remote multi-core and GPU hardware. We demonstrate the use of QuESTlink to concisely and efficiently simulate several quantum algorithms, and present some comparative benchmarking against core QuEST.","",""
56,"U. Laufs, Christopher Ruff, Jan Zibuschka","MT4j - A Cross-platform Multi-touch Development Framework",2010,"","","","",823,"2024-08-22 15:04:59","","","","",,,,,56,4.00,19,3,14,"This article describes requirements and challenges of crossplatform multi-touch software engineering, and presents the open source framework Multi-Touch for Java (MT4j) as a solution. MT4j is designed for rapid development of graphically rich applications on a variety of contemporary hardware, from common PCs and notebooks to large-scale ambient displays, as well as different operating systems. The framework has a special focus on making multi-touch software development easier and more efficient. Architecture and abstractions used by MT4j are described, and implementations of several common use cases are presented.","",""
111,"U. Michel","History of acoustic beamforming",2006,"","","","",820,"2024-08-22 15:04:59","","","","",,,,,111,6.17,111,1,18,"The development of the beamforming method (also called microphone antenna, phased array of microphones, acoustic telescope, or acoustic camera) is reviewed in this paper. The microphone antenna was invented by Billingsley (1974) and has since seen dramatic improvements due to the availability of better data acquisition and computing hardware. Recent mathematical and software developments invert the beamforming process and allow a quantitative determination of the sources. Beamforming is indispensable for the localization of sound sources on moving objects, on flying aircraft, on high-speed trains, on motor cars in motion, on open rotors like helicopter and wind turbine rotors. In these applications, the ability to follow the motion of the sources is important. The second important applications are source localization tests in the test sections of open and closed wind tunnels. The background noise suppression capability of the beamforming method is required here. The various applications are discussed with a long list of references. 1 Berlin Beamforming Conference","",""
31,"Usama Iqbal, A. Samad, Z. Nissa, J. Iqbal","EMBEDDED CONTROL SYSTEM FOR AUTAREP-A NOVEL AUTONOMOUS ARTICULATED ROBOTIC EDUCATIONAL PLATFORM",2014,"","","","",792,"2024-08-22 15:04:59","","","","",,,,,31,3.10,8,4,10,"Original scientific paper This research introduces an open-source framework, AUTonomous Articulated Robotic Educational Platform (AUTAREP). The platform is centred on a 6 Degree Of Freedom (DOF) arm with multiple feedbacks to ensure precision and autonomy. The sensory system consists of vision, position and force feedbacks while the actuation system comprises six precise DC servo motors. In particular, this paper presents the design of an embedded controller for AUTAREP. The proposed design of the control hardware and software interface has been tailored as per academic requirements of relevant undergraduate and postgraduate courses. Low level commands have been provided to permit readily development of applications for trainees. Advanced users can further exploit the open-source architecture of the platform. The performance of the proposed control system has been demonstrated by various experiments on the fabricated hardware. The control has been subjected to various test inputs to analyse its transient and steady state behaviour. The robot has been tested to achieve a set-point position successfully and the encoder data corresponding to all the joints has been recorded. Finally, a common application of ""pick and place"" has been implemented. The proposed platform is potentially beneficial in teaching engineering courses, training in industrial sector and research of advanced algorithms.","",""
24,"V. Eymet, C. Coustet, B. Piaud","kspectrum: an open-source code for high-resolution molecular absorption spectra production",2016,"","","","",315,"2024-08-22 15:04:59","","10.1088/1742-6596/676/1/012005","","",,,,,24,3.00,8,3,8,"We present the kspectrum, scientific code that produces high-resolution synthetic absorption spectra from public molecular transition parameters databases. This code was originally required by the atmospheric and astrophysics communities, and its evolution is now driven by new scientific projects among the user community. Since it was designed without any optimization that would be specific to any particular application field, its use could also be extended to other domains. kspectrum produces spectral data that can subsequently be used either for high-resolution radiative transfer simulations, or for producing statistic spectral model parameters using additional tools. This is a open project that aims at providing an up-to-date tool that takes advantage of modern computational hardware and recent parallelization libraries. It is currently provided by Méso-Star (http://www.meso-star.com) under the CeCILL license, and benefits from regular updates and improvements.","",""
322,"V. Handziski, A. Köpke, A. Willig, A. Wolisz","TWIST: a scalable and reconfigurable testbed for wireless indoor experiments with sensor networks",2006,"","","","",992,"2024-08-22 15:04:59","","10.1145/1132983.1132995","","",,,,,322,17.89,81,4,18,"We present TWIST, a scalable and exible testbed architecture for indoor deployment of wireless sensor networks. The design of TWIST is based on an analysis of typical and desirable use-cases. It provides basic services like node configuration, network-wide programming, out-of-band extraction of debug data and gathering of application data, and also introduces several novel features.Firstly, TWIST supports experiments with heterogeneous node platforms. Secondly, it supports active power supply control of the nodes. This enables easy transition between USB-powered and battery-powered experiments, dynamic selection of topologies as well as controlled injection of node failures into the system. Thirdly, TWIST supports creation of both at and hierarchical sensor networks. For this we introduce a layer of ""super nodes"" that on one hand form a part of the testbed infrastructure but can also play a role as elements of the sensor network.The self-configuration capability, the use of hardware with standardized interfaces and open-source software makes the TWIST architecture scalable, affordable, and easily repli-cable. To demonstrate its usefulness, we present our experiences with building and using a specific realization of TWIST that spans three floors of our office building and supports over one hundred sensor nodes.","",""
15,"V. Marx","Microscopy: OpenSPIM 2.0",2016,"","","","",814,"2024-08-22 15:04:59","","10.1038/nmeth.4070","","",,,,,15,1.88,15,1,8,"","",""
8,"V. R. Cota, C. L. Aguiar, Bezamat de Souza Neto, M. Benegas","Open-source hardware as a model of technological innovation and academic entrepreneurship",2020,"","","","",20,"2024-08-22 15:04:59","","10.1108/inmr-06-2018-0036","","",,,,,8,2.00,2,4,4,"The purpose of this paper is to argue in favor of the open hardware philosophy (open-source hardware – OSH) as a technological innovation and academic entrepreneurshipmodel in Brazil.,This argument is based on three pillars. The first one refers to a bibliographic review of theoretical frameworks related to academic entrepreneurship and technological innovation to emphasize the disruptive innovation capacity of academia. Second, a few elements related to the Brazilian political, economic and structural scenario, which entail a (more) favorable environment to technological innovation and academic entrepreneurship, is presented. Finally, concepts related to OSH and its business model are approached to demonstrate the facilitating effect toward the whole process.,As a result of the argument made herein, it is possible to perceive the viability of the OSH model in terms of entrepreneurship and technological innovation in the academic sphere, and to perceive its benefits before social and economic needs in areas such as health and education.,There are no empirical or quantifiable data in the literature that enable comparison between OSH and traditional technological innovation models.,The considerations on the philosophical value of OSH and its business models are scarcely explored in international literature. As far as we know, relating OSH to technological innovation entrepreneurship in the academic sphere, as well as its singularities in Brazil regarding the innovation national system and social and economic demands, is a unique approach in literature.","",""
3,"V. Tovarniţchi","OPEN SOURCE HARDWARE AS A FRAMEWORK",2012,"","","","",146,"2024-08-22 15:04:59","","10.5593/sgem2012/s10.v3026","","",,,,,3,0.25,3,1,12,"","",""
3,"V. Yanamandram, Jitesh H. Panchal","Evaluating the Level of Openness in Open Source Hardware",2014,"","","","",100,"2024-08-22 15:04:59","","10.1007/978-3-319-07404-7_4","","",,,,,3,0.30,2,2,10,"","",""
58,"V. Zykov, P. Williams, N. Lassabe, Hod Lipson","Molecubes Extended : Diversifying Capabilities of Open-Source Modular Robotics",2008,"","","","",446,"2024-08-22 15:04:59","","","","",,,,,58,3.63,15,4,16,"This paper presents an open hardware and software platform for modular robotics (Molecubes). The goal of this project is to share the practice of design and construction of modular robotic systems with an emphasis on an expandable, open-architecture system made of standard components at reasonable costs. We present several different types of active modules including a controller, actuated joint, gripper, wheel, camera, and a number of passive modules.We then demonstrate the use of evolutionary search to rapidly-design different types of robots. The designs of Molecubes and the interface software are freely distributed through a dedicated user-group website at http://www.molecubes.org.","",""
14,"Valérie Fernandez, Gilles Puel, Clement Renaud","The Open Innovation Paradigm: from Outsourcing to Open-sourcing in Shenzhen, China",2016,"","","","",542,"2024-08-22 15:04:59","","10.14246/IRSPSD.4.4_27","","",,,,,14,1.75,5,3,8,"Having once been the headquarters of ‘Made in China,’ Shenzhen’s industry is currently undergoing profound change. The appearance of new urban places for technological innovation is reviving the ageing industrial processes of this manufacturing city. It is supposed to transform Shenzhen into the Silicon Valley of hardware. Two groups, one local, the shanzhai community made up of entrepreneurs and companies historically based on a strategy of imitating high-end products, and the other, a more international maker community, are thought to be the main drivers of this change using values of ‘open innovation’. The building of this ecosystem relies largely on practices associated with being open-source. Like in California, open innovation contributed to the creation of resources for the development of a vast high-tech industry. This ethnographic field study shows how, while both communities, the international makers and the shanzhai, draw on open innovation, they do not have the same values. For the shanzhai, open innovation means total deregulation and a kind of coopetition that poorly masks fierce competition. For the makers, open innovation does not entirely eliminate the classic tension between ‘open’ and ‘closed’ commons in the world of makers. These two communities still rarely collaborate.","",""
98,"Victor C. X. Wang","Handbook of Research on Education and Technology in a Changing Society",2014,"","","","",675,"2024-08-22 15:04:59","","10.4018/978-1-4666-6046-5","","",,,,,98,9.80,98,1,10,"This chapter examines the use of Open Source Software (OSS) technologies that can be used to improve the learning of Science, Technology, Engineering, and Mathematics (STEM). Explored are the various methods that can be utilized to improve the percentage of STEM majors in the American educational system with resources such as: Open Source as Alternative (OSALT), virtualization, cloud computing, Linux distributions, open source programming, and open source hardware platforms. Increasing the amount of students that pursue STEM majors is important because the projected job growth in the STEM field compared to non-STEM jobs is 33%. OSALT provides cost-effective alternatives to commercial products such as Microsoft Office Suite and Adobe Photoshop. Second, creating Virtual Machines (VMs) is another avenue to teach complex concepts in computer science, engineering, and Information Technology (IT). Third, cloud computing is an inexpensive way for clients to access information from multiple locations and devices. Fourth, universities can use the Operating System (OS) Linux and its various distributions as replacements for commercial operating systems like Windows in order to reduce IT costs. Lastly, open source programming languages like Python and their associated Integrated Development Environments (IDEs) provide comprehensive facilities for software engineers for application development or testing.","",""
56,"Vilim Štih, L. Petrucco, A. Kist, R. Portugues","Stytra: An open-source, integrated system for stimulation, tracking and closed-loop behavioral experiments",2018,"","","","",246,"2024-08-22 15:04:59","","10.1371/journal.pcbi.1006699","","",,,,,56,9.33,14,4,6,"We present Stytra, a flexible, open-source software package, written in Python, that we designed to cover all the general requirements involved in larval zebrafish behavioral experiments. It allows timed stimulus presentation, interfacing with external devices and simultaneous real-time tracking of position, tail and eye motion in both freely-swimming and head-restrained preparations. It logs in standardized formats all recorded quantities, metadata, and code version to allow full provenance tracking, from data acquisition through analysis to publication. The package is modular and expandable for different experimental protocols and setups. Current releases can be found at https://github.com/portugueslab/stytra. We also provide complete documentation with examples for extending the package to new stimuli and hardware, as well as a schema and parts list for behavioral setups. We showcase Stytra by reproducing two previously behavioral protocols, one with head-restrained and the other with freely-swimming larvae, as well as an experiment in which the software is used in the context of a calcium imaging experiment, where it can trigger and communicate with other acquisition devices. Our aims are to help laboratories with little or no experience in the field to start implementing behavioral experiments and to provide a platform for sharing stimulus protocols to enable easy reproduction of experiments and straightforward validation. In addition, Stytra can easily serve as a base platform to design behavioral experiments in other model organisms.","",""
104,"Violeta Damjanovic-Behrendt, W. Behrendt","An open source approach to the design and implementation of Digital Twins for Smart Manufacturing",2019,"","","","",200,"2024-08-22 15:04:59","","10.1080/0951192X.2019.1599436","","",,,,,104,20.80,52,2,5,"ABSTRACT This paper discusses the design of a Digital Twin (DT) demonstrator for Smart Manufacturing, following an open source approach for implementation. Open source technology can comprise of software, hardware and hybrid solutions that nowadays drive Smart Manufacturing. The major potential of open source technology in Smart Manufacturing lies in enabling interoperability and in reducing the capital costs of designing and implementing new manufacturing solutions. After presenting our motivation to adopt an open source approach for the design of a DT demonstrator, we identify the major implementation requirements of Smart Cyber Physical Systems (CPSs) and DTs. A conceptualisation of the core components of a DT demonstrator is provided and three technology building blocks for the realisation of a DT have been identified. These technology building blocks include components for the management of data, models and services. From the conceptual model of the DT demonstrator, we derived a high-level micro-services architecture and provided a case study infrastructure for the implementation of the DT demonstrator based on available open source technologies. The paper closes with research questions to be addressed in the future.","",""
68,"Vladimir Rybalkin, Alessandro Pappalardo, M. M. Ghaffar, Giulio Gambardella, N. Wehn, Michaela Blott","FINN-L: Library Extensions and Design Trade-Off Analysis for Variable Precision LSTM Networks on FPGAs",2018,"","","","",998,"2024-08-22 15:04:59","","10.1109/FPL.2018.00024","","",,,,,68,11.33,11,6,6,"It is well known that many types of artificial neural networks, including recurrent networks, can achieve a high classification accuracy even with low-precision weights and activations. The reduction in precision generally yields much more efficient hardware implementations in regards to hardware cost, memory requirements, energy, and achievable throughput. In this paper, we present the first systematic exploration of this design space as a function of precision for Bidirectional Long Short-Term Memory (BiLSTM) neural network. Specifically, we include an in-depth investigation of precision vs. accuracy using a fully hardware-aware training flow, where during training quantization of all aspects of the network including weights, input, output and in-memory cell activations are taken into consideration. In addition, hardware resource cost, power consumption and throughput scalability are explored as a function of precision for FPGA-based implementations of BiLSTM, and multiple approaches of parallelizing the hardware. We provide the first open source HLS library extension of FINN for parameterizable hardware architectures of LSTM layers on FPGAs which offers full precision flexibility and allows for parameterizable performance scaling offering different levels of parallelism within the architecture. Based on this library, we present an FPGA-based accelerator for BiLSTM neural network designed for optical character recognition, along with numerous other experimental proof points for a Zynq UltraScale+ XCZU7EV MPSoC within the given design space.","",""
74,"Volker Grabe, M. Riedel, H. Bülthoff, P. Giordano, A. Franchi","The TeleKyb framework for a modular and extendible ROS-based quadrotor control",2013,"","","","",743,"2024-08-22 15:04:59","","10.1109/ECMR.2013.6698814","","",,,,,74,6.73,15,5,11,"The free and open source Tele-Operation Platform of the MPI for Biological Cybernetics (TeleKyb) is an end-to-end software framework for the development of bilateral teleoperation systems between human interfaces (e.g., haptic force feedback devices or gamepads) and groups of quadrotor Unmanned Aerial Vehicles (UAVs). Among drivers for devices and robots from various hardware manufactures, TeleKyb provides a high-level closed-loop robotic controller for mobile robots that can be extended dynamically with modules for state estimation, trajectory planning, processing, and tracking. Since all internal communication is based on the Robot Operating System (ROS), TeleKyb can be easily extended to meet future needs. The capabilities of the overall framework are demonstrated in both an experimental validation of the controller for an individual quadrotor and a complex experimental setup involving bilateral human-robot interaction and shared formation control of multiple UAVs.","",""
54,"W. Elmenreich","A Review on System Architectures for Sensor Fusion Applications",2007,"","","","",843,"2024-08-22 15:04:59","","10.1007/978-3-540-75664-4_57","","",,,,,54,3.18,54,1,17,"","",""
49,"W. Feng, Ashvin Goel, A. Bezzaz, Wu-chi Feng, J. Walpole","TCPivo: a high-performance packet replay engine",2003,"","","","",862,"2024-08-22 15:04:59","","10.1145/944773.944783","","",,,,,49,2.33,10,5,21,"This paper describes the design and implementation of a high performance packet replay tool called TCPivo. TCPivo is implemented on commodity hardware using widely available open-source software and can be used as a cost-effective means for evaluating the performance of networking devices. To achieve high throughput and accuracy, TCPivo employs novel mechanisms for managing trace files and accurate lowoverhead timers. In addition, through the use of low-latency kernel patches and priority scheduling, TCPivo can be made highly resilient to background system load. Using these mechanisms, the tool is able to support packet replay at rates well above OC-3 on an x86-based server.","",""
24,"W. Graniszewski, A. Arciszewski","Performance analysis of selected hypervisors (Virtual Machine Monitors - VMMs)",2016,"","","","",782,"2024-08-22 15:04:59","","10.1515/ELETEL-2016-0031","","",,,,,24,3.00,12,2,8,"Virtualization of operating systems and network infrastructure plays an important role in current IT projects. With the number of services running on different hardware resources it is easy to provide availability, security and efficiency using virtualizers. All virtualization vendors claim that their hypervisor (virtual machine monitor - VMM) is better than their competitors. In this paper we evaluate performance of different solutions: proprietary software products (Hyper-V, ESXi, OVM, VirtualBox), and open source (Xen). We are using standard benchmark tools to compare efficiency of main hardware components, i.e. CPU (nbench), NIC (netperf), storage (Filebench), memory (ramspeed). Results of each tests are presented.","",""
16,"W. Hupp, Adarsh Hasandka, Ricardo Siqueira de Carvalho, Danish Saleem","Module-OT: A Hardware Security Module for Operational Technology",2020,"","","","",406,"2024-08-22 15:04:59","","10.1109/TPEC48276.2020.9042540","","",,,,,16,4.00,4,4,4,"Increased penetration levels of renewable energy and other types of distributed energy resources (DERs) on the modern electric grid-combined with technological advancements for electric system monitoring and control-introduce new cyberattack vectors and increase the cyberattack surface of energy systems. According to the IEEE Std. 1547–2018, DERs must use Modbus, Distributed Network Protocol 3 (DNP3), or Smart Energy Profile 2.0 (SEP2) as their communication protocol. Previous research identified several vulnerabilities and security breaches in each one of these communication protocols; despite this, existing standards for DERs do not recommend cybersecurity measures. In order to reduce vulnerabilities in power distribution systems, this paper presents a novel open-source hardware security module that improves both information and operational security to better protect data and communications on the distribution grid. The security hardware is called “module for operational technology,” or simply Module-OT, and it has been validated and tested in an emulated distribution system application. Module-OT is integrated within a communication system in the transport layer of the Open Systems Interconnection (OSI) model. It improves system security through encryption, authentication, authorization, certificate management, and user access control. The main advancement of Module-OT is the addition of hardware cryptographic acceleration that improves the overall communication performance in terms of end-to-end latency.","",""
71,"W. J. Palenstijn, K. Batenburg, Jan Sijbers","The ASTRA Tomography Toolbox",2013,"","","","",744,"2024-08-22 15:04:59","","","","",,,,,71,6.45,24,3,11,"We present the ASTRA (All Scale Tomographic Reconstruction Antwerp) toolbox: an open source, GPU-accelerated library for 3D image reconstruction in tomography. While most of the current software tools available for tomography oer only limited exibility in the geometry of the experimental setup and the set of available reconstruction algorithms, the ASTRA toolbox provides a set of highly exible building blocks that can be used to construct advanced reconstruction algorithms, eectively removing these limitations. We describe how the design of the ASTRA toolbox allows for full exibility in specifying the geometry while still maintaining an ecient mapping onto the underlying hardware. The ASTRA toolbox comes with a MATLAB interface for easy user interaction and is available for both Windows and Linux.","",""
34,"W. Langdon","Genetically Improved Software",2015,"","","","",767,"2024-08-22 15:04:59","","10.1007/978-3-319-20883-1_8","","",,,,,34,3.78,34,1,9,"","",""
41,"W. Müller, Markus Becker, Ahmed Elfeky, Anthony DiPasquale","Virtual prototyping of Cyber-Physical Systems",2012,"","","","",819,"2024-08-22 15:04:59","","10.1109/ASPDAC.2012.6164948","","",,,,,41,3.42,10,4,12,"The modeling and analysis of Cyber-Physical Systems (CPS) is one of the key challenges in complex system design as heterogeneous components are combined and their close interaction with the physical environment has to be considered. This article presents a methodology and an open toolset for the virtual prototyping of CPS. The focus of the methodology is the virtual prototyping of the embedded software combined with the prototyping of the physical environment in order to capture the complete closed control loop of the software over the hardware via sensors/actors with the physical objects. The methodology is based on the application of integrated open source tools and standard languages, i.e., C/C++, SystemC, and the Open Dynamics Engine, which are combined to a powerful simulation framework. Key activities of the methodology are outlined by the example of an electric two-wheel vehicle.","",""
25,"W. Quan, Wenwen Fu, Jinli Yan, Zhigang Sun","OpenTSN: an open-source project for time-sensitive networking system development",2020,"","","","",878,"2024-08-22 15:04:59","","10.1007/s42045-020-00029-8","","",,,,,25,6.25,6,4,4,"","",""
1018,"W. Sherman, Alan B. Craig","Understanding Virtual RealityInterface, Application, and Design",2002,"","","","",984,"2024-08-22 15:04:59","","10.1162/105474603322391668","","",,,,,1018,46.27,509,2,22,"Understanding Virtual Reality arrives at a time when the technologies behind virtual reality have advanced to the point that it is possible to develop and deploy meaningful, productive virtual reality applications. The aim of this thorough, accessible exploration is to help you take advantage of this moment, equipping you with the understanding needed to identify and prepare for ways VR can be used in your field, whatever your field may be.      By approaching VR as a communications medium, the authors have created a resource that will remain relevant even as the underlying technologies evolve. You get a history of VR, along with a good look at systems currently in use. However, the focus remains squarely on the application of VR and the many issues that arise in the application design and implementation, including hardware requirements, system integration, interaction techniques, and usability. This book also counters both exaggerated claims for VR and the view that would reduce it to entertainment, citing dozens of real-world examples from many different fields and presenting (in a series of appendices) four in-depth application case studies.    * Substantive, illuminating coverage designed for technical and business readers and well-suited to the classroom.  * Examines VR's constituent technologies, drawn from visualization, representation, graphics, human-computer interaction, and other fields, and explains how they are being united in cohesive VR systems.  * Via a companion Web site, provides additional case studies, tutorials, instructional materials, and a link to an open-source VR programming system.    Table of Contents    Foreword  Preface    Part I - What is Virtual Reality?  Chapter 1: Introduction to Virtual Reality - What it is and Where it Comes From  Chapter 2: VR the Medium    Part II - Virtual Reality Systems  Chapter 3: Interface to the Virtual World -- Input  Chapter 4: Interface to the Virtual World -- Output  Chapter 5: Rendering a Virtual World  Chapter 6: Interacting with a Virtual World  Chapter 7: Virtual Reality Experience  Chapter 8: Experience Design: Applying VR to a Problem  Chapter 9: What Dreams May Come: The Future of VR    Appendices  A: NICE educational application (EVL)  B: Crumbs visualization application (NCSA)  C: Aircraft wiring application (Boeing, Inc.)  D: Placeholder artistic application (Interval Research)","",""
24,"W. Sleszynski, J. Nieznański","Open-transistor fault diagnostics in voltage-source inverters by analyzing the load current",2007,"","","","",540,"2024-08-22 15:04:59","","10.1109/DEMPED.2007.4393073","","",,,,,24,1.41,12,2,17,"A novel method is presented for the detection and isolation of open-transistor faults in voltage-source inverters feeding low-power AC motors. The method is based on monitoring two diagnostic signals, one indicating sustained near-zero values of output current and thus permitting fault detection, the other permitting the isolation of the particular transistor which went faulty. The latter signal is the ratio of the average phase current and the average magnitude thereof. The method proves to work reliably, enabling detection and isolation of all possible cases of single and multiple faults. It enjoys high immunity to transients and noise and requires no extra hardware on top of that normally used for basic control purposes.","",""
2186,"W. Wen, Chunpeng Wu, Yandan Wang, Yiran Chen, Hai Helen Li","Learning Structured Sparsity in Deep Neural Networks",2016,"","","","",947,"2024-08-22 15:04:59","","","","",,,,,2186,273.25,437,5,8,"High demand for computation resources severely hinders deployment of large-scale Deep Neural Networks (DNN) in resource constrained devices. In this work, we propose a Structured Sparsity Learning (SSL) method to regularize the structures (i.e., filters, channels, filter shapes, and layer depth) of DNNs. SSL can: (1) learn a compact structure from a bigger DNN to reduce computation cost; (2) obtain a hardware-friendly structured sparsity of DNN to efficiently accelerate the DNNs evaluation. Experimental results show that SSL achieves on average 5.1x and 3.1x speedups of convolutional layer computation of AlexNet against CPU and GPU, respectively, with off-the-shelf libraries. These speedups are about twice speedups of non-structured sparsity; (3) regularize the DNN structure to improve classification accuracy. The results show that for CIFAR-10, regularization on layer depth can reduce 20 layers of a Deep Residual Network (ResNet) to 18 layers while improve the accuracy from 91.25% to 92.60%, which is still slightly higher than that of original ResNet with 32 layers. For AlexNet, structure regularization by SSL also reduces the error by around ~1%. Open source code is in this https URL","",""
199,"Wei Zhang, Guyue Liu, Wenhui Zhang, Neel Shah, Phil Lopreiato, Grégoire Todeschi, K. Ramakrishnan, Timothy Wood","OpenNetVM: A Platform for High Performance Network Service Chains",2016,"","","","",587,"2024-08-22 15:04:59","","10.1145/2940147.2940155","","",,,,,199,24.88,25,8,8,"Network middleboxes are growing in number and diversity. Middleboxes have been deployed widely to complement the basic end-to-end functionality provided by the Internet Protocol suite that depends only on the minimal functionality of a best-effort network layer. The move from purpose-built hardware middleboxes to software appliances running in virtual machines provides much needed deployment flexibility, but significant challenges remain. Just as Software Defined Networking (SDN) research and product development was greatly accelerated with the release of several open source SDN platforms, we believe that Network Function Virtualization (NFV) research can see similar growth with the development of a flexible platform that enables high performance NFV prototypes. Towards this end we have been building OpenNetVM, an efficient packet processing framework that greatly simplifies the development of network functions, as well as research into their management and optimization. OpenNetVM runs network functions in lightweight Docker containers, enabling fast startup and reducing memory overheads. The OpenNetVM platform manager provides load balancing, flexible flow management, and service name abstractions. OpenNetVM efficiently routes packets through dynamically created service chains, achieving throughputs of 10 Gbps even when traversing a chain of 6 NFs. In this paper we describe our architecture and evaluate its performance compared to existing NFV platforms.","",""
34,"Wei Zuo, L. Pouchet, A. Ayupov, Taemin Kim, Chung-Wei Lin, Shin'ichi Shiraishi, Deming Chen","Accurate high-level modeling and automated hardware/software co-design for effective SoC design space exploration",2017,"","","","",925,"2024-08-22 15:04:59","","10.1145/3061639.3062195","","",,,,,34,4.86,5,7,7,"A desirable feature of a development tool for SoC design is that, given the important applications in the domain to be targeted by the SoC, a powerful hardware-software partitioning engine is available to determine which function(s) shall be mapped to hardware. However, to provide high-quality partitioning, this engine must be able to consider a rich design space of possible alternate hardware and software implementations for each program region candidate for hardware acceleration, in turn making the task of finding the optimal mapping very difficult given the number of design points to consider and the need for accurate modeling of latency, power and area. In this work we propose a novel framework to enable hardware acceleration of performance-critical parts of an application, by addressing the problem of hardware/software partitioning under power and area constraints to minimize the overall program latency. Our flow is based on the LLVM compiler, and focuses on building a scalable compile-time partitioning algorithm while considering large sets of alternative hardware and software implementations for a particular region. To this end we develop a hybrid approach based on mixing semi-random selection of hardware design points and an Integer Linear Programming formulation of the mapping decision, along with iterative refinements of the solution. Experimental results demonstrate the capability of our approach to consider complex designs and yet output near-optimal partitioning decision. Our package is named RIP (Randomized ILP-based Partitioning), and is open source to benefit the research community.","",""
33,"Wei-Fen Lin, Der-Yu Tsai, Luba Tang, C. Hsieh, Cheng-Yi Chou, P. Chang, Luis Hsu","ONNC: A Compilation Framework Connecting ONNX to Proprietary Deep Learning Accelerators",2019,"","","","",970,"2024-08-22 15:04:59","","10.1109/AICAS.2019.8771510","","",,,,,33,6.60,5,7,5,"This paper presents ONNC (Open Neural Network Compiler), a retargetable compilation framework designed to connect ONNX (Open Neural Network Exchange) models to proprietary deep learning accelerators (DLAs). The intermediate representations (IRs) of ONNC have one-to-one mapping to ONNX IRs, thus making porting ONNC to proprietary DLAs much simpler than other compilation frameworks such as TVM and Glow especially for hardware with coarse-grained operators that are not part of the generic IRs in the LLVM backend. ONNC also has a flexible pass manager designed to support compiler optimizations at all levels. A docker image of ONNC bundled with a Vanilla backend is released with this paper to enable fast porting to new hardware targets. To illustrate how an ONNC-based toolkit guides our research and development in DLA design, we present a case study on compiler optimizations for activation memory consumption. The study shows that the Best-Fit algorithm with a proposed heuristic and a reordering scheme may act as a near-optimal strategy, getting the memory consumption close to the ideal lower bound in 11 of 12 models from the ONNX model zoo. To our best knowledge, ONNC is the first open source compilation framework that is specially designed to support the ONNX-based models for both commercial and research projects for deep learning applications.","",""
15,"Weimin Fu, Kaichen Yang, R. Dutta, Xiaolong Guo, Gang Qu","LLM4SecHW: Leveraging Domain-Specific Large Language Model for Hardware Debugging",2023,"","","","",284,"2024-08-22 15:04:59","","10.1109/AsianHOST59942.2023.10409307","","",,,,,15,15.00,3,5,1,"This paper presents LLM4SECHW, a novel framework for hardware debugging that leverages domain-specific Large Language Model (LLM). Despite the success of LLMs in automating various software development tasks, their application in the hardware security domain has been limited due to the constraints of commercial LLMs and the scarcity of domain-specific data. To address these challenges, we propose a unique approach to compile a dataset of open-source hardware design defects and their remediation steps, utilizing version control data. This dataset provides a substantial foundation for training machine learning models for hardware. LLM4SECHW employs fine-tuning of medium-sized LLMs based on this dataset, enabling the identification and rectification of bugs in hardware designs. This pioneering approach offers a reference workflow for the application of fine-tuning domain-specific LLMs in other research areas. We evaluate the performance of our proposed system on various open-source hardware designs, demonstrating its efficacy in accurately identifying and correcting defects. Our work brings a new perspective on automating the quality control process in hardware design.","",""
92,"Wenchao Li, Adrià Gascón, P. Subramanyan, W. Y. Tan, A. Tiwari, S. Malik, N. Shankar, S. Seshia","WordRev: Finding word-level structures in a sea of bit-level gates",2013,"","","","",717,"2024-08-22 15:04:59","","10.1109/HST.2013.6581568","","",,,,,92,8.36,12,8,11,"Systems are increasingly being constructed from off-the-shelf components acquired through a globally distributed and untrusted supply chain. Often only post-synthesis gate-level netlists or actual silicons are available for security inspection. This makes reasoning about hardware trojans particularly challenging given the enormous scale of the problem. Currently, there is no mature methodology that can provide visibility into a bit-level design in terms of high-level components to allow more comprehensive analysis. In this paper, we present a systemic way of automatically deriving word-level structures from the gate-level netlist of a digital circuit. Our framework also provides the possibility for a user to specify sequences of word-level operations and it can extract the collection of gates corresponding to those operations. We demonstrate the effectiveness of our approach on a system-on-a-chip (SoC) design consisting of approximately 400,000 IBM 12SOI cells and several open-source designs.","",""
152,"Wojciech Giernacki, Mateusz Skwierczynski, Wojciech Witwicki, P. Wroński, Piotr Kozierski","Crazyflie 2.0 quadrotor as a platform for research and education in robotics and control engineering",2017,"","","","",594,"2024-08-22 15:04:59","","10.1109/MMAR.2017.8046794","","",,,,,152,21.71,30,5,7,"In this paper a Crazyflie 2.0 nano quadrotor helicopter (quadcopter) as an open source experimental platform for research and education in robotics and control engineering has been presented. This low cost, easily expandable and upgradeable flying robot is here characterized in terms of hardware and software. Three aspects, which demonstrate the potential of broad use of this unmanned aerial vehicle (UAV) by researchers and students, are discussed in the paper. The first one is an acquisition of measurement data from test flights by the proposed, freely available “black-box” software. The second is the use of a new, advanced 4FLY Simulator in order to utilize the MATLAB®/Simulink environment to easily implement a mathematical model of Crazyflie 2.0 dynamics, as well as for a synthesis of various types of controllers with support of OpenGL cross-language in the visualization of simulations results. The 4FLYSimulator allows to test autonomous flights (and landings) with obstacles avoidance and to conduct learning and teaching the basics of Crazyflie 2.0 piloting. In the third aspect the authors outlined promising, preliminary results obtained in control of flying robot by pointing device (positioner) and with the support of a vision system, which basis only on a single Kinect sensor.","",""
111,"Xavier Vilajosana, Pere Tuset, T. Watteyne, K. Pister","OpenMote: Open-Source Prototyping Platform for the Industrial IoT",2015,"","","","",299,"2024-08-22 15:04:59","","10.1007/978-3-319-25067-0_17","","",,,,,111,12.33,28,4,9,"","",""
193,"Xiaochen Peng, Shanshi Huang, Yandong Luo, Xiaoyu Sun, Shimeng Yu","DNN+NeuroSim: An End-to-End Benchmarking Framework for Compute-in-Memory Accelerators with Versatile Device Technologies",2019,"","","","",554,"2024-08-22 15:04:59","","10.1109/IEDM19573.2019.8993491","","",,,,,193,38.60,39,5,5,"DNN+NeuroSim is an integrated framework to benchmark compute-in-memory (CIM) accelerators for deep neural networks, with hierarchical design options from device-level, to circuit-level and up to algorithm-level. A python wrapper is developed to interface NeuroSim with popular machine learning platforms such as Pytorch and Tensorflow. The framework supports automatic algorithm to hardware mapping, and evaluates both chip-level performance and inference accuracy with hardware constraints. In this work, we analyze the impact of reliability in ""analog"" synaptic devices, and analog-to-digital converter (ADC) quantization effects on the inference accuracy. Then we benchmark CIM accelerators based on SRAM and versatile emerging devices including RRAM, PCM, FeFET and ECRAM, from VGG to ResNet, and from CIFAR to ImageNet dataset, revealing the benefits of high on-state resistance, e.g. by using three-terminal synapses. The open-source code of DNN+NeuroSim is available at https://github.com/neurosim/DNN_NeuroSim_V1.0.","",""
56,"Xiaoliang Wu, Alexander Kolar, Joaquín Chung, Dong Jin, Tian Zhong, R. Kettimuthu, Martin Suchara","SeQUeNCe: a customizable discrete-event simulator of quantum networks",2020,"","","","",978,"2024-08-22 15:04:59","","10.1088/2058-9565/ac22f6","","",,,,,56,14.00,8,7,4,"Recent advances in quantum information science enabled the development of quantum communication network prototypes and created an opportunity to study full-stack quantum network architectures. This work develops SeQUeNCe, a comprehensive, customizable quantum network simulator. Our simulator consists of five modules: hardware models, entanglement management protocols, resource management, network management, and application. This framework is suitable for simulation of quantum network prototypes that capture the breadth of current and future hardware technologies and protocols. We implement a comprehensive suite of network protocols and demonstrate the use of SeQUeNCe by simulating a photonic quantum network with nine routers equipped with quantum memories. The simulation capabilities are illustrated in three use cases. We show the dependence of quantum network throughput on several key hardware parameters and study the impact of classical control message latency. We also investigate quantum memory usage efficiency in routers and demonstrate that redistributing memory according to anticipated load increases network capacity by 69.1% and throughput by 6.8%. We design SeQUeNCe to enable comparisons of alternative quantum network technologies, experiment planning, and validation and to aid with new protocol design. We are releasing SeQUeNCe as an open source tool and aim to generate community interest in extending it.","",""
1356,"Xiaoyu Chen, Ole Schulz-Trieglaff, Richard Shaw, B. Barnes, F. Schlesinger, Morten Källberg, A. Cox, S. Kruglyak, C. T. Saunders","Manta: rapid detection of structural variants and indels for germline and cancer sequencing applications",2016,"","","","",949,"2024-08-22 15:04:59","","10.1093/bioinformatics/btv710","","",,,,,1356,169.50,151,9,8,"UNLABELLED : We describe Manta, a method to discover structural variants and indels from next generation sequencing data. Manta is optimized for rapid germline and somatic analysis, calling structural variants, medium-sized indels and large insertions on standard compute hardware in less than a tenth of the time that comparable methods require to identify only subsets of these variant types: for example NA12878 at 50× genomic coverage is analyzed in less than 20 min. Manta can discover and score variants based on supporting paired and split-read evidence, with scoring models optimized for germline analysis of diploid individuals and somatic analysis of tumor-normal sample pairs. Call quality is similar to or better than comparable methods, as determined by pedigree consistency of germline calls and comparison of somatic calls to COSMIC database variants. Manta consistently assembles a higher fraction of its calls to base-pair resolution, allowing for improved downstream annotation and analysis of clinical significance. We provide Manta as a community resource to facilitate practical and routine structural variant analysis in clinical and research sequencing scenarios.   AVAILABILITY AND IMPLEMENTATION Manta is released under the open-source GPLv3 license. Source code, documentation and Linux binaries are available from https://github.com/Illumina/manta.   CONTACT csaunders@illumina.com   SUPPLEMENTARY INFORMATION Supplementary data are available at Bioinformatics online.","",""
109,"Xiaying Wang, Michele Magno, Lukas Cavigelli, L. Benini","FANN-on-MCU: An Open-Source Toolkit for Energy-Efficient Neural Network Inference at the Edge of the Internet of Things",2019,"","","","",206,"2024-08-22 15:04:59","","10.1109/JIOT.2020.2976702","","",,,,,109,21.80,27,4,5,"The growing number of low-power smart devices in the Internet of Things is coupled with the concept of “edge computing” that is moving some of the intelligence, especially machine learning, toward the edge of the network. Enabling machine learning algorithms to run on resource-constrained hardware, typically on low-power smart devices, is challenging in terms of hardware (optimized and energy-efficient integrated circuits), algorithmic, and firmware implementations. This article presents a FANN-on-MCU, an open-source toolkit built upon the fast artificial neural network (FANN) library to run lightweight and energy-efficient neural networks on microcontrollers based on both the ARM Cortex-M series and the novel RISC-V-based parallel ultralow-power (PULP) platform. The toolkit takes multilayer perceptrons trained with FANN and generates code targeted to low-power microcontrollers. This article also presents detailed analyses of energy efficiency across the different cores, and the optimizations to handle different network sizes. Moreover, it provides a detailed analysis of parallel speedups and degradations due to parallelization overhead and memory transfers. Further evaluations include experimental results for three different applications using a self-sustainable wearable multisensor bracelet. The experimental results show a measured latency in the order of only a few microseconds and power consumption of a few milliwatts while keeping the memory requirements below the limitations of the targeted microcontrollers. In particular, the parallel implementation on the octa-core RISC-V platform reaches a speedup of $22\times $ and a 69% reduction in energy consumption with respect to a single-core implementation on Cortex-M4 for continuous real-time classification.","",""
66,"Xinyu Chen, Hongshi Tan, Yao Chen, Bingsheng He, W. Wong, Deming Chen","ThunderGP: HLS-based Graph Processing Framework on FPGAs",2021,"","","","",571,"2024-08-22 15:04:59","","10.1145/3431920.3439290","","",,,,,66,22.00,11,6,3,"FPGA has been an emerging computing infrastructure in datacenters benefiting from features of fine-grained parallelism, energy efficiency, and reconfigurability. Meanwhile, graph processing has attracted tremendous interest in data analytics, and its performance is in increasing demand with the rapid growth of data. Many works have been proposed to tackle the challenges of designing efficient FPGA-based accelerators for graph processing. However, the largely overlooked programmability still requires hardware design expertise and sizable development efforts from developers. In order to close the gap, we propose ThunderGP, an open-source HLS-based graph processing framework on FPGAs, with which developers could enjoy the performance of FPGA-accelerated graph processing by writing only a few high-level functions with no knowledge of the hardware. ThunderGP adopts the Gather-Apply-Scatter (GAS) model as the abstraction of various graph algorithms and realizes the model by a build-in highly-paralleled and memory-efficient accelerator template. With high-level functions as inputs, ThunderGP automatically explores the massive resources and memory bandwidth of multiple Super Logic Regions (SLRs) on FPGAs to generate accelerator and then deploys the accelerator and schedules tasks for the accelerator. We evaluate ThunderGP with seven common graph applications. The results show that accelerators on real hardware platforms deliver 2.9 times speedup over the state-of-the-art approach, running at 250MHz and achieving throughput up to 6,400 MTEPS (Million Traversed Edges Per Second). We also conduct a case study with ThunderGP, which delivers up to 419 times speedup over the CPU-based design and requires significantly reduced development efforts. This work is open-sourced on Github at https://github.com/Xtra-Computing/ThunderGP.","",""
38,"Y. Verma, Sumit Hooda","A Review Paper on Big Data and Hadoop",2015,"","","","",751,"2024-08-22 15:04:59","","","","",,,,,38,4.22,19,2,9,"Today, organizations in every industry are being showered with imposing quantity of new information. As there are many more data channels and categories available along with traditional sources. Therefore the rate of data growth is increasing more and more which results in a very large volume of data. These vastly larger volumes and new assets are known as Big Data. Technologies such as MapReduce & Hadoop are used to extract value from Big Data. Hadoop is well adopted, standard-based, open source software framework build on the foundation of Google’s MapReduce. There are also new data storage techniques that have arisen to bolster these new architectures, including very large file system running on commodity hardware. This new data storage technology is HDFS. This file system is meant to support enormous amount of structured as well as unstructured data.","",""
51,"Yannick Allusse, P. Horain, Ankit Agarwal, Cindula Saipriyadarshan","GpuCV: an opensource GPU-accelerated framework forimage processing and computer vision",2008,"","","","",834,"2024-08-22 15:04:59","","10.1145/1459359.1459578","","",,,,,51,3.19,13,4,16,"This paper presents GpuCV, an open source multi-platform library for easily developing GPU-accelerated image processing and Computer Vision operators and applications. It is meant for computer vision scientist not familiar with GPU technologies. It is designed to be compatible with Intel's OpenCV library by offering GPU-accelerated operators that can be integrated into native OpenCV applications. The GpuCV framework transparently manages hardware capabilities, data synchronization, activation of low level GLSL and CUDA programs, on-the-fly benchmarking and switching to the most efficient implementation and finally offers a set of image processing operators with GPU acceleration available.","",""
35,"Yannick Allusse, P. Horain, Ankit Agarwal, Cindula Saipriyadarshan","GpuCV: A GPU-Accelerated Framework for Image Processing and Computer Vision",2008,"","","","",858,"2024-08-22 15:04:59","","10.1007/978-3-540-89646-3_42","","",,,,,35,2.19,9,4,16,"","",""
29,"Yao Chen, Kaili Zhang, Cheng Gong, Cong Hao, Xiaofan Zhang, Tao Li, Deming Chen","T-DLA: An Open-source Deep Learning Accelerator for Ternarized DNN Models on Embedded FPGA",2019,"","","","",238,"2024-08-22 15:04:59","","10.1109/ISVLSI.2019.00012","","",,,,,29,5.80,4,7,5,"Deep Neural Networks (DNNs) have become promising solutions for data analysis especially for raw data processing from sensors. However, using DNN-based approaches can easily introduce huge demands of computation and memory consumption, which may not be feasible for direct deployment onto the Internet of Thing (IoT) devices, since they have strict constraints on hardware resources, power budgets, response latency, and manufacturing cost. To bring DNNs into IoT devices, embedded FPGA can be one of the most suitable candidates by providing better energy efficiency than GPU and CPU based solutions, and higher flexibility than ASICs. In this paper, we propose a systematic solution to deploy DNNs on embedded FPGAs, which includes a ternarized hardware Deep Learning Accelerator (T-DLA), and a framework for ternary neural network (TNN) training. T-DLA is a highly optimized hardware unit in FPGA specializing in accelerating the TNNs, while the proposed framework can significantly compress the DNN parameters down to two bits with little accuracy drop. Results show that our training framework can compress the DNN up to 14.14x while maintaining nearly the same accuracy compared to the floating point version. By illustrating our proposed design techniques, the T-DLA can deliver up to 0.4TOPS with 2.576W power consumption, showing 873.6x and 5.1x higher energy efficiency (fps/W) on ImageNet with Resnet-18 model comparing to Xeon E5-2630 CPU and Nvidia 1080 Ti GPU. To the best of our knowledge, this is the first instruction-based highly efficient ternary DLA design reported from the literature.","",""
36,"Yao Lu, Shang Liu, Qijun Zhang, Zhiyao Xie","RTLLM: An Open-Source Benchmark for Design RTL Generation with Large Language Model",2023,"","","","",89,"2024-08-22 15:04:59","","10.1109/ASP-DAC58780.2024.10473904","","",,,,,36,36.00,9,4,1,"Inspired by the recent success of large language models (LLMs) like ChatGPT, researchers start to explore the adoption of LLMs for agile hardware design, such as generating design RTL based on natural-language instructions. However, in existing works, their target designs are all relatively simple and in a small scale, and proposed by the authors themselves, making a fair comparison among different LLM solutions challenging. In addition, many prior works only focus on the design correctness, without evaluating the design qualities of generated design RTL. In this work, we propose an open-source benchmark named RTLLM, for generating design RTL with natural language instructions. To systematically evaluate the auto-generated design RTL, we summarized three progressive goals, named syntax goal, functionality goal, and design quality goal. This benchmark can automatically provide a quantitative evaluation of any given LLM-based solution. Furthermore, we propose an easy-to-use yet surprisingly effective prompt engineering technique named self-planning, which proves to significantly boost the performance of GPT-3.5 in our proposed benchmark.","",""
225,"Yeonhee Lee, Youngseok Lee","Toward scalable internet traffic measurement and analysis with Hadoop",2013,"","","","",631,"2024-08-22 15:04:59","","10.1145/2427036.2427038","","",,,,,225,20.45,113,2,11,"Internet traffic measurement and analysis has long been used to characterize network usage and user behaviors, but faces the problem of scalability under the explosive growth of Internet traffic and high-speed access. Scalable Internet traffic measurement and analysis is difficult because a large data set requires matching computing and storage resources. Hadoop, an open-source computing platform of MapReduce and a distributed file system, has become a popular infrastructure for massive data analytics because it facilitates scalable data processing and storage services on a distributed computing system consisting of commodity hardware. In this paper, we present a Hadoop-based traffic monitoring system that performs IP, TCP, HTTP, and NetFlow analysis of multi-terabytes of Internet traffic in a scalable manner. From experiments with a 200-node testbed, we achieved 14 Gbps throughput for 5 TB files with IP and HTTP-layer analysis MapReduce jobs. We also explain the performance issues related with traffic analysis MapReduce jobs.","",""
23,"Yi Yang, Ping Xiang, Mike Mantor, Huiyang Zhou","Fixing Performance Bugs: An Empirical Study of Open-Source GPGPU Programs",2012,"","","","",383,"2024-08-22 15:04:59","","10.1109/ICPP.2012.30","","",,,,,23,1.92,6,4,12,"Given the extraordinary computational power of modern graphics processing units (GPUs), general purpose computation on GPUs (GPGPU) has become an increasingly important platform for high performance computing. To better understand how well the GPU resource has been utilized by application developers and then to facilitate them to develop high performance GPGPU code, we conduct an empirical study on GPGPU programs from ten open-source projects. These projects span a wide range of disciplines and many are designed as high performance libraries. Among these projects, we found various performance 'bugs', i.e., code segments leading to inefficient use of GPU hardware. We characterize these performance bugs, and propose the bug fixes. Our experiments confirm both significant performance gains and energy savings from our fixes and reveal interesting insights on different GPUs.","",""
36,"Yilun Xu, Gang-Ming Huang, J. Balewski, R. Naik, A. Morvan, B. Mitchell, Kasra Nowrouzi, D. Santiago, I. Siddiqi","QubiC: An Open-Source FPGA-Based Control and Measurement System for Superconducting Quantum Information Processors",2020,"","","","",199,"2024-08-22 15:04:59","","10.1109/TQE.2021.3116540","","",,,,,36,9.00,4,9,4,"As quantum information processors grow in quantum bit (qubit) count and functionality, the control and measurement system becomes a limiting factor to large-scale extensibility. To tackle this challenge and keep pace with rapidly evolving classical control requirements, full control stack access is essential to system-level optimization. We design a modular field-programmable gate array (FPGA)-based system called QubiC to control and measure a superconducting quantum processing unit. The system includes room temperature electronics hardware, FPGA gateware, and engineering software. A prototype hardware module is assembled from several commercial off-the-shelf evaluation boards and in-house-developed circuit boards. Gateware and software are designed to implement basic qubit control and measurement protocols. System functionality and performance are demonstrated by performing qubit chip characterization, gate optimization, and randomized benchmarking sequences on a superconducting quantum processor operating at the Advanced Quantum Testbed at the Lawrence Berkeley National Laboratory. The single-qubit and two-qubit process fidelities are measured to be 0.9980 $\pm$ 0.0001 and 0.948 $\pm$ 0.004, respectively, by randomized benchmarking. With fast circuit sequence loading capability, the QubiC performs randomized compiling experiments efficiently and improves the feasibility of executing more complex algorithms.","",""
89,"Yoav Goldberg, Michael Elhadad","splitSVM: Fast, Space-Efficient, non-Heuristic, Polynomial Kernel Computation for NLP Applications",2008,"","","","",796,"2024-08-22 15:04:59","","10.3115/1557690.1557758","","",,,,,89,5.56,45,2,16,"We present a fast, space efficient and non-heuristic method for calculating the decision function of polynomial kernel classifiers for NLP applications. We apply the method to the MaltParser system, resulting in a Java parser that parses over 50 sentences per second on modest hardware without loss of accuracy (a 30 time speedup over existing methods). The method implementation is available as the open-source splitSVM Java library.","",""
52,"Yogi A. Patel, A. George, Alan D. Dorval, J. White, D. Christini, R. Butera","Hard real-time closed-loop electrophysiology with the Real-Time eXperiment Interface (RTXI)",2017,"","","","",969,"2024-08-22 15:04:59","","10.1371/journal.pcbi.1005430","","",,,,,52,7.43,9,6,7,"The ability to experimentally perturb biological systems has traditionally been limited to static pre-programmed or operator-controlled protocols. In contrast, real-time control allows dynamic probing of biological systems with perturbations that are computed on-the-fly during experimentation. Real-time control applications for biological research are available; however, these systems are costly and often restrict the flexibility and customization of experimental protocols. The Real-Time eXperiment Interface (RTXI) is an open source software platform for achieving hard real-time data acquisition and closed-loop control in biological experiments while retaining the flexibility needed for experimental settings. RTXI has enabled users to implement complex custom closed-loop protocols in single cell, cell network, animal, and human electrophysiology studies. RTXI is also used as a free and open source, customizable electrophysiology platform in open-loop studies requiring online data acquisition, processing, and visualization. RTXI is easy to install, can be used with an extensive range of external experimentation and data acquisition hardware, and includes standard modules for implementing common electrophysiology protocols.","",""
46,"Yohann Uguen, Luc Forget, F. D. Dinechin","Evaluating the Hardware Cost of the Posit Number System",2019,"","","","",401,"2024-08-22 15:04:59","","10.1109/FPL.2019.00026","","",,,,,46,9.20,15,3,5,"The posit number system is proposed as a replacement of IEEE floating-point numbers. It is a floating-point system that trades exponent bits for significand bits, depending on the magnitude of the numbers. Thus, it provides more precision for numbers around 1, at the expense of lower precision for very large or very small numbers. Several works have demonstrated that this trade-off can improve the accuracy of applications. However, the variable-length exponent and significand encoding impacts the hardware cost of posit arithmetic. The objective of the present work is to enable application-level evaluations of the posit system that include performance and resource consumption. To this purpose, this article introduces an open-source hardware implementation of the posit number system, in the form of a C++ templatized library compatible with Vivado HLS. This library currently implements addition, subtraction and multiplication for custom-size posits. In addition, the posit standard also mandates the presence of the ""quire"", a large accumulator able to perform exact sums of products. The proposed library includes the first open-source parameterized hardware quire. This library is shown to improve the state-of-the-art of posit implementations in terms of latency and resource consumption. Still, standard 32 bits posit adders and multipliers are found to be much larger and slower than the corresponding floating-point operators. The cost of the posit 32 quire is shown to be comparable to that of a Kulisch accumulator for 32 bits floating-point.","",""
13,"Yong Wu, Li Li, Minzan Li, Man Zhang, Hong Sun, N. Sygrimis, Wangfeng Lai","Remote-Control System for Greenhouse Based on Open Source Hardware",2019,"","","","",39,"2024-08-22 15:04:59","","10.1016/j.ifacol.2019.12.518","","",,,,,13,2.60,2,7,5,"","",""
10,"Young Sam Lee, Bongeon Jo, Soohee Han","A Light-Weight Rapid Control Prototyping System Based on Open Source Hardware",2017,"","","","",67,"2024-08-22 15:04:59","","10.1109/ACCESS.2017.2715184","","",,,,,10,1.43,3,3,7,"In this paper, we propose a light-weight rapid control prototyping (RCP) system based on off-the-shelf open source hardware to achieve high performance computing, cost effectiveness, portability, and easy accessiblity. The proposed RCP system consists of a PC-based computer-aided control system design (CACSD) tool for computing control action and tiny palm-sized open source hardware for input and output (I/O) operation and data transfer through a built-in high-speed USB interface. The popular-priced and portable open source hardware is used as a bridge between CACSD tools and real plants to deliver the control and sensor data at the sampling time points. Ten I/O function blocks written in C code are developed based on the CACSD tool employed for the proposed light-weight RCP system in order to handle I/O operation in a simple way. In addition, we suggest two practical strategies, a batch transfer strategy and a variable sampling period method, to increase the sampling rate of the control system. It is shown through experiment that the proposed light-weight RCP system works well up to a sampling rate of 2 kHz without adopting expensive hardware and C code generators. It is expected that the proposed RCP system will be considered as affordable and readily available to schools for mass education.","",""
3,"Young-Joon Kim, Se-Jun Park, Yongho Seo","Script-based Simple Programming Toolkit for Open Source Hardware",2016,"","","","",87,"2024-08-22 15:04:59","","10.14257/IJSEIA.2016.10.2.01","","",,,,,3,0.38,1,3,8,"Arduino is a popular open source hardware toolkit for science and engineering education due to its easy use and various good examples. But, students or beginners who have no experience and knowledge of electronic engineering or programming languages still feel a considerable barrier to use Arduino. This study analyzes the barrier of beginners in using the open source hardware. In order to resolve the difficulty in firmware programming, we adopt a functional concise script composed of simplified service commands and minimum options to use the open hardware and proposes a new script-based open source hardware programming environment. From the comparison result with previous development toolkit, we confirm that the programming by the proposed script-based simple programming toolkit is substantially simple by adopting simple script and automatic generations of irrelevant instructions, type declarations and semicolons in programming the open source hardware of Arduino.","",""
103,"Yu Gan, Christina Delimitrou","The Architectural Implications of Cloud Microservices",2018,"","","","",623,"2024-08-22 15:04:59","","10.1109/LCA.2018.2839189","","",,,,,103,17.17,52,2,6,"Cloud services have recently undergone a shift from monolithic applications to microservices, with hundreds or thousands of loosely-coupled microservices comprising the end-to-end application. Microservices present both opportunities and challenges when optimizing for quality of service (QoS) and cloud utilization. In this paper we explore the implications cloud microservices have on system bottlenecks, and datacenter server design. We first present and characterize an end-to-end application built using tens of popular open-source microservices that implements a movie renting and streaming service, and is modular and extensible. We then use the end-to-end service to study the scalability and performance bottlenecks of microservices, and highlight implications they have on the design of datacenter hardware. Specifically, we revisit the long-standing debate of brawny versus wimpy cores in the context of microservices, we quantify the I-cache pressure they introduce, and measure the time spent in computation versus communication between microservices over RPCs. As more cloud applications switch to this new programming model, it is increasingly important to revisit the assumptions we have previously used to build and manage cloud systems.","",""
495,"Yu Gan, Yanqi Zhang, Dailun Cheng, A. Shetty, Priyal Rathi, Nayan Katarki, Ariana Bruno, Justin Hu, Brian Ritchken, Brendon Jackson, Kelvin Hu, Meghna Pancholi, Yuan He, B. Clancy, C. Colen, Fukang Wen, Catherine Leung, Siyuan Wang, Leon Zaruvinsky, Mateo Espinosa Zarlenga, Rick Lin, Zhongling Liu, Jake Padilla, Christina Delimitrou","An Open-Source Benchmark Suite for Microservices and Their Hardware-Software Implications for Cloud & Edge Systems",2019,"","","","",78,"2024-08-22 15:04:59","","10.1145/3297858.3304013","","",,,,,495,99.00,50,24,5,"Cloud services have recently started undergoing a major shift from monolithic applications, to graphs of hundreds or thousands of loosely-coupled microservices. Microservices fundamentally change a lot of assumptions current cloud systems are designed with, and present both opportunities and challenges when optimizing for quality of service (QoS) and cloud utilization. In this paper we explore the implications microservices have across the cloud system stack. We first present DeathStarBench, a novel, open-source benchmark suite built with microservices that is representative of large end-to-end services, modular and extensible. DeathStarBench includes a social network, a media service, an e-commerce site, a banking system, and IoT applications for coordination control of UAV swarms. We then use DeathStarBench to study the architectural characteristics of microservices, their implications in networking and operating systems, their challenges with respect to cluster management, and their trade-offs in terms of application design and programming frameworks. Finally, we explore the tail at scale effects of microservices in real deployments with hundreds of users, and highlight the increased pressure they put on performance predictability.","",""
42,"Yue Chen, D. Mukherjee, Jingning Han, Adrian Grange, Yaowu Xu, Sarah Parker, Cheng Chen, Hui Su, Urvang Joshi, Ching-Han Chiang, Yunqing Wang, Paul Wilkins, Jim Bankoski, Luc N. Trudeau, N. Egge, J. Valin, T. Davies, Steinar Midtskogen, A. Norkin, Peter De Rivaz, Zoe Liu","An Overview of Coding Tools in AV1: the First Video Codec from the Alliance for Open Media",2020,"","","","",439,"2024-08-22 15:04:59","","10.1017/ATSIP.2020.2","","",,,,,42,10.50,4,21,4,"Abstract In 2018, the Alliance for Open Media (AOMedia) finalized its first video compression format AV1, which is jointly developed by the industry consortium of leading video technology companies. The main goal of AV1 is to provide an open source and royalty-free video coding format that substantially outperforms state-of-the-art codecs available on the market in compression efficiency while remaining practical decoding complexity as well as being optimized for hardware feasibility and scalability on modern devices. To give detailed insights into how the targeted performance and feasibility is realized, this paper provides a technical overview of key coding techniques in AV1. Besides, the coding performance gains are validated by video compression tests performed with the libaom AV1 encoder against the libvpx VP9 encoder. Preliminary comparison with two leading HEVC encoders, x265 and HM, and the reference software of VVC is also conducted on AOM's common test set and an open 4k set.","",""
253,"Yue Chen, D. Mukherjee, Jingning Han, Adrian Grange, Yaowu Xu, Zoe Liu, Sarah Parker, Cheng Chen, Hui Su, Urvang Joshi, Ching-Han Chiang, Yunqing Wang, Paul Wilkins, Jim Bankoski, Luc N. Trudeau, N. Egge, J. Valin, T. Davies, Steinar Midtskogen, A. Norkin, Peter De Rivaz","An Overview of Core Coding Tools in the AV1 Video Codec",2018,"","","","",545,"2024-08-22 15:04:59","","10.1109/PCS.2018.8456249","","",,,,,253,42.17,25,21,6,"AV1 is an emerging open-source and royalty-free video compression format, which is jointly developed and finalized in early 2018 by the Alliance for Open Media (AOMedia) industry consortium. The main goal of AV1 development is to achieve substantial compression gain over state-of-the-art codecs while maintaining practical decoding complexity and hardware feasibility. This paper provides a brief technical overview of key coding techniques in AV1 along with preliminary compression performance comparison against VP9 and HEVC.","",""
62,"Yuewen Zhu, Chunran Zheng, Chongjian Yuan, Xu Huang, Xiaoping Hong","CamVox: A Low-cost and Accurate Lidar-assisted Visual SLAM System",2020,"","","","",950,"2024-08-22 15:04:59","","10.1109/ICRA48506.2021.9561149","","",,,,,62,15.50,12,5,4,"Combining lidar in camera-based simultaneous localization and mapping (SLAM) is an effective method in improving overall accuracy, especially at outdoor large scale scenes. Recent development of low-cost lidars (e.g. Livox lidar) enable us to explore such SLAM systems with lower budget and higher performance. In this paper we propose CamVox by adapting Livox lidars into visual SLAM (ORB-SLAM2) by exploring the lidars’ unique features. Based on the unique scan pattern of Livox lidars, we propose an automatic lidar-camera calibration method that will work in uncontrolled scenes. The long depth detection range also benefit a more accurate mapping. Comparison of CamVox with visual SLAM (VINS-mono) and lidar SLAM (LOAM) are evaluated on the same dataset to demonstrate the performance. We open sourced our hardware, code and dataset on GitHub1.","",""
4,"Yungang Bao, Trevor E. Carlson","Agile and Open-Source Hardware",2020,"","","","",22,"2024-08-22 15:04:59","","10.1109/mm.2020.3002606","","",,,,,4,1.00,2,2,4,"The thirteen articles in this special section focus on agile and open source hardware. These papers cover variety of research topics related to fast, agile, and open hardware design, including methodologies, languages, abstractions, and simulators. As the benefits f traditional technology scaling, like Dennard Scaling and Moore’s Law, slow significantly, computer architecture is poised to enter a golden age of innovation. Domain-specific architectures (DSA) are a promising solution to continue improving computing performance, while maintaining the level of energyand area-efficiency previously found in technology scaling. Unfortunately, traditional methodologies of chip design and hardware development have created significant barriers, requiring extremely high non-recurring engineering costs in tools, labor, IPs, and time, which ultimately hold back broad adoption of DSA.","",""
48,"Yuriy Tselishchev, A. Boulis, Lavy Libman","Experiences and Lessons from Implementing a Wireless Sensor Network MAC Protocol in the Castalia Simulator",2010,"","","","",832,"2024-08-22 15:04:59","","10.1109/WCNC.2010.5506096","","",,,,,48,3.43,16,3,14,"We describe our experience from the implementation of the T-MAC protocol for wireless sensor networks in the open-source Castalia simulator. Notwithstanding the popularity of the protocol in the research literature in recent years, we find several practical issues that are not addressed in the original protocol description, which lead to a degree of freedom in the protocol design and implementation and have an impact on its resulting performance. These issues include the ability of the underlying physical layer and hardware to efficiently detect the activation events in the protocol, and necessary changes to the collision resolution and clock synchronization procedures in the presence of varying sleep patterns. Our results highlight the need for rigorous detail in protocol descriptions in the research literature and provide important insights into some of the common pitfalls.","",""
67,"Yury Gorbachev, M. Fedorov, Iliya Slavutin, Artyom Tugarev, Marat Fatekhov, Yaroslav Tarkan","OpenVINO Deep Learning Workbench: Comprehensive Analysis and Tuning of Neural Networks Inference",2019,"","","","",638,"2024-08-22 15:04:59","","10.1109/ICCVW.2019.00104","","",,,,,67,13.40,11,6,5,"A task of maximizing deep learning neural networks performance is a challenging and actual goal of modern hardware and software development. Regardless the huge variety of optimization techniques and emerging dedicated hardware platforms, the process of tuning the performance of the neural network is hard. It requires configuring dozens of hyper parameters of optimization algorithms, selecting appropriate metrics, benchmarking the intermediate solutions to choose the best method, platform etc. Moreover, it is required to setup the hardware for the specific inference target. This paper introduces a sophisticated software solution (Deep Learning Workbench) that provides interactive user interface, simplified process of 8-bit quantization, speeding up convolutional operations using the Winograds minimal filtering algorithms, measuring accuracy of the resulting model. The proposed software is built over the open source OpenVINO framework and supports huge range of modern deep learning models.","",""
127,"Zachary T. Pennington, Zhe Dong, Yu Feng, Lauren M. Vetere, Lucia Page-Harley, Tristan Shuman, D. Cai","ezTrack: An open-source video analysis pipeline for the investigation of animal behavior",2019,"","","","",211,"2024-08-22 15:04:59","","10.1038/s41598-019-56408-9","","",,,,,127,25.40,18,7,5,"","",""
12,"Zachary WareJoncas, Chris Stewart, John Giannini","An Inexpensive, Open-Source Mini-Centrifuge",2018,"","","","",280,"2024-08-22 15:04:59","","10.1525/abt.2018.80.6.451","","",,,,,12,2.00,4,3,6,"Abstract The centrifuge is an important piece of equipment for any biology lab, necessary for a wide variety of experiments. Cost, however, often prevents the use of centrifuges in many teaching labs, greatly limiting educational experiences for students. As a result, we describe how to construct a “homemade” single-speed mini-centrifuge using inexpensive parts easily acquired online or at hardware or other stores (e.g., a 4.7-quart plastic bowl and lid, standard computer cooling fan, AC/DC adapter, electrical wire, etc.). We further used this design and a commercial mini-centrifuge to pellet 1-mL samples of Tetrahymena thermophila, and we found that the two performed comparably. Finally, because our plans and the materials needed to build this device are all open source, we call our design the OPN Minifuge, and we hope that it will help to expand the scope of experiments that students can run in introductory and upper-level biology teaching labs.","",""
13,"Zhaoyuan Fang, A. Czajka","Open Source Iris Recognition Hardware and Software with Presentation Attack Detection",2020,"","","","",111,"2024-08-22 15:04:59","","10.1109/IJCB48548.2020.9304869","","",,,,,13,3.25,7,2,4,"This paper proposes the first known to us open source hardware and software iris recognition system with presentation attack detection (PAD), which can be easily assembled for about 75 USD using Raspberry Pi board and a few peripherals. The primary goal of this work is to offer a low-cost baseline for spoof-resistant iris recognition, which may (a) stimulate research in iris PAD and allow for easy prototyping of secure iris recognition systems, (b) offer a low-cost secure iris recognition alternative to more sophisticated systems, and (c) serve as an educational platform. We propose a lightweight image complexity-guided convolutional network for fast and accurate iris segmentation, domain-specific human-inspired Binarized Statistical Image Features (BSIF) to build an iris template, and to combine 2D (iris texture) and 3D (photometric stereo-based) features for PAD. The proposed iris recognition runs in about 3.2 seconds and the proposed PAD runs in about 4.5 seconds on Raspberry Pi 3B+. The hardware specifications and all source codes of the entire pipeline are made available along with this paper.","",""
21,"Zhe Dong, W. Mau, Yu Feng, Zachary T. Pennington, Lingxuan Chen, Yosif Zaki, Kanaka Rajan, Tristan Shuman, Daniel Aharoni, D. Cai","Minian, an open-source miniscope analysis pipeline",2021,"","","","",171,"2024-08-22 15:04:59","","10.7554/eLife.70661","","",,,,,21,7.00,2,10,3,"Miniature microscopes have gained considerable traction for in vivo calcium imaging in freely behaving animals. However, extracting calcium signals from raw videos is a computationally complex problem and remains a bottleneck for many researchers utilizing single-photon in vivo calcium imaging. Despite the existence of many powerful analysis packages designed to detect and extract calcium dynamics, most have either key parameters that are hard-coded or insufficient step-by-step guidance and validations to help the users choose the best parameters. This makes it difficult to know whether the output is reliable and meets the assumptions necessary for proper analysis. Moreover, large memory demand is often a constraint for setting up these pipelines since it limits the choice of hardware to specialized computers. Given these difficulties, there is a need for a low memory demand, user-friendly tool offering interactive visualizations of how altering parameters at each step of the analysis affects data output. Our open-source analysis pipeline, Minian (Miniscope Analysis), facilitates the transparency and accessibility of single-photon calcium imaging analysis, permitting users with little computational experience to extract the location of cells and their corresponding calcium traces and deconvolved neural activities. Minian contains interactive visualization tools for every step of the analysis, as well as detailed documentation and tips on parameter exploration. Furthermore, Minian has relatively small memory demands and can be run on a laptop, making it available to labs that do not have access to specialized computational hardware. Minian has been validated to reliably and robustly extract calcium events across different brain regions and from different cell types. In practice, Minian provides an open-source calcium imaging analysis pipeline with user-friendly interactive visualizations to explore parameters and validate results.","",""
118,"Zhenhui Yuan, Jie Jin, Lingling Sun, Kwan-Wu Chin, Gabriel-Miro Muntean","Ultra-Reliable IoT Communications with UAVs: A Swarm Use Case",2018,"","","","",613,"2024-08-22 15:04:59","","10.1109/MCOM.2018.1800161","","",,,,,118,19.67,24,5,6,"UAVs are powerful IoT components, offering sensing, communications and data analysis in the air. Recently, 3GPP TS 22.261, TR 22.862, and TR 36.777 have specified performance requirements for communications between multiple UAVs in the 5G domain. This article discusses communications reliability challenges in a UAV swarm context. Recommendations for designing an ultra-reliable communications system for UAV swarms are introduced with a focus on the software protocol stack and RF hardware. For the purpose of demonstration, we developed Easy- Swarm, an open-source UAV swarming platform that adopts the LoRa radio at the physical layer and a low-latency channel access protocol at the MAC layer. Real-life testbeds are built consisting of 10 UAVs and 20 robotic cars that produce background traffic. LoRa, WiFi and LTE networks are employed to provide broadband and cellular wireless network support. Results show that using LoRa leads to better reliability, in particular allowing for higher swarm density and longer coverage distance, than when WiFi is used. In addition, LTE provides the best reliability and latency for UAV swarms with good network connectivity.","",""
16,"Zhuoxuan Li, W. Seering","Does Open Source Hardware Have a Sustainable Business Model? An Analysis of Value Creation and Capture Mechanisms in Open Source Hardware Companies",2019,"","","","",26,"2024-08-22 15:04:59","","10.1017/DSI.2019.230","","",,,,,16,3.20,8,2,5,"Analyzing value creation and capture mechanisms of open source hardware startup companies, this paper illustrates how an open source strategy can make economical sense for hardware startups. By interviewing 37 open source hardware company leaders, 12 company community members as well as analyzing forum data of 3 open source hardware companies; we realize that by open sourcing the design of hardware, a company can naturally establish its community, which is a key element for a company's success. Establishing a community can increase customer perceived value, decrease product development and sales cost, shorten product go-to-market time, and incubate startups with knowledge, experience and resources. These advantages can compensate for the risks associated with open source strategies and can make open source design a viable product development strategy for hardware startups.","",""
21,"Zhuoxuan Li, W. Seering, J. Ramos, Maria C. Yang, D. Wallace","Why Open Source?: Exploring the Motivations of Using an Open Model for Hardware Development",2017,"","","","",137,"2024-08-22 15:04:59","","10.1115/DETC2017-68195","","",,,,,21,3.00,4,5,7,"Following the successful adoption of the open source model in the software realm, open source is becoming a new design paradigm in hardware development. Open source models for tangible products are still in its infancy, and many studies are required to demonstrate its application to for-profit product development. It is an alluring question why entrepreneurs decide to use an open model to develop their products under risks and unknowns, such as infringement and community management. The goal of this paper is to investigate the motivations of entrepreneurs of open source hardware companies. The leaders and founders of twentythree companies were interviewed to understand their motivation and experiences in creating a company based on open source hardware. Based on these interviews, we generated a hierarchical framework to explain these motivations, where each level of the framework has been defined, explained and illustrated with representative quotes. The motivations of open source action are framed by two categories in the paper: 1) Intrinsic Motivation, which describes the motivations of an entrepreneur as an individual, who needs personal satisfaction, enjoyment as well as altruism and reciprocity; 2) Extrinsic Motivation, which describes motivations of an entrepreneur whose identity is as a for-profit company leader.","",""
42,"Zihan Chen, A. Deguet, R. Taylor, P. Kazanzides","Software Architecture of the Da Vinci Research Kit",2017,"","","","",724,"2024-08-22 15:04:59","","10.1109/IRC.2017.69","","",,,,,42,6.00,11,4,7,"The da Vinci Research Kit (dVRK) has been installed at over 25 research institutions across the world, forming a research community sharing a common open-source research platform. This paper presents the dVRK software architecture, which consists of a distributed hardware interface layer, a real-time component-based software framework, and integration with the Robot Operating System (ROS). The architecture is scalable to support multiple active manipulators, reconfigurable to enable researchers to partition a full system into multiple independent subsystems, and extensible at all levels of control.","",""
37,"Zihan Chen, A. Deguet, Russell Taylor, S. DiMaio, Gregory Fischer, P. Kazanzides","An Open-Source Hardware and Software Platform for Telesurgical Robotics Research",2013,"","","","",99,"2024-08-22 15:04:59","","10.54294/2dcog6","","",,,,,37,3.36,6,6,11,"We present our work to develop a telerobotics research platform that provides complete access to all levels of control via open-source custom electronics and software. The electronics employs an FPGA to enable a centralized computation and distributed I/O architecture in which all control computations are implemented in a familiar development environment (Linux PC) and low-latency I/O is performed over an IEEE-1394a (Firewire) bus at speeds up to 400 Mbits/sec. The mechanical components of the system are provided by the Research Kit for the da Vinci System, which consists of the Master Tool Manipulators (MTMs), Patient Side Manipulators (PSMs), and stereo console of the first-generation da Vinci surgical robot. This system is currently installed, or planned for installation, at 11 research institutions, with additional installations likely in the future, thereby creating a research community around a common open-source hardware and software platform.","",""
35,"Ziyao Li, Xuyang Liu, Weijie Chen, Fan Shen, Hangrui Bi, Guolin Ke, Linfeng Zhang","Uni-Fold: An Open-Source Platform for Developing Protein Folding Models beyond AlphaFold",2022,"","","","",128,"2024-08-22 15:04:59","","10.1101/2022.08.04.502811","","",,,,,35,17.50,5,7,2,"Recent breakthroughs on protein structure prediction, namely AlphaFold, have led to unprecedented new possibilities in related areas. However, the lack of training utilities in its current open-source code hinders the community from further developing or adapting the model. Here we present Uni-Fold as a thoroughly open-source platform for developing protein folding models beyond AlphaFold. We reimplemented AlphaFold and AlphaFold-Multimer in the PyTorch framework, and reproduced their from-scratch training processes with equivalent or better accuracy. Based on various optimizations, Uni-Fold achieves about 2.2 times training acceleration compared with AlphaFold under similar hardware configuration. On a benchmark of recently released multimeric protein structures, Uni-Fold outperforms AlphaFold-Multimer by approximately 2% on the TM-Score. Uni-Fold is currently the only open-source repository that supports both training and inference of multimeric protein models. The source code, model parameters, test data, and web server of Uni-Fold are publicly available3.","",""
21,"Zuo Xiang, Sreekrishna Pandi, Juan A. Cabrera, F. Granelli, P. Seeling, F. Fitzek","An Open Source Testbed for Virtualized Communication Networks",2021,"","","","",164,"2024-08-22 15:04:59","","10.1109/MCOM.001.2000578","","",,,,,21,7.00,4,6,3,"Communication networks and the systems they interconnect are going through a phase of tremendous change. The former agnostic delivery of content between endpoints has given way to networks increasingly adding functionality beyond moving data. Softwarization technologies including network function virtualization (NFV) and soft-ware-defined networking (SDN) are key enablers that introduce computing into the network. This revolution, especially for mobile communication networks, represents a major paradigm shift away from agnostic data delivery. Subsequently, there is a significant need to provide well-defined environments offering replicability to effectively test and evaluate protocols and mechanisms that integrate computing into networks. This article presents the Communication Networks Emulator (ComNetsEmu), which provides an SDN and NFV network emulation environment based on community-embraced open source packages and enables replicable research and development on limited resource commodity hardware. In this article, we describe the underlying ComNetsEmu architecture and provide a hands-on description of its use for researchers, practitioners, and educators alike.","",""
103,"Álvaro Gutiérrez, Alexandre Campo, M. Dorigo, Jesus Donate, F. Monasterio-Huelin, L. Magdalena","Open E-puck Range & Bearing miniaturized board for local communication in swarm robotics",2009,"","","","",647,"2024-08-22 15:04:59","","10.1109/ROBOT.2009.5152456","","",,,,,103,6.87,17,6,15,"We have designed and built a new open hardware/ software board that lets miniaturized robots communicate and at the same time obtain the range and bearing of the source of emission. The open E-puck Range & Bearing board improves an existing infrared relative localization/communication software library (libIrcom) developed for the e-puck robot and based on its on-board infrared sensors. The board allows the robots to have an embodied, decentralized and scalable communication system. Its use and capabilities are demonstrated via an alignment experiment.","",""
71,"Óscar Blanco-Novoa, T. Fernández-Caramés, Paula Fraga-Lamas, L. Castedo","An Electricity Price-Aware Open-Source Smart Socket for the Internet of Energy",2017,"","","","",274,"2024-08-22 15:04:59","","10.3390/s17030643","","",,,,,71,10.14,18,4,7,"The Internet of Energy (IoE) represents a novel paradigm where electrical power systems work cooperatively with smart devices to increase the visibility of energy consumption and create safer, cleaner and sustainable energy systems. The implementation of IoE services involves the use of multiple components, like embedded systems, power electronics or sensors, which are an essential part of the infrastructure dedicated to the generation and distribution energy and the one required by the final consumer. This article focuses on the latter and presents a smart socket system that collects the information about energy price and makes use of sensors and actuators to optimize home energy consumption according to the user preferences. Specifically, this article provides three main novel contributions. First, what to our knowledge is the first hardware prototype that manages in a practical real-world scenario the price values obtained from a public electricity operator is presented. The second contribution is related to the definition of a novel wireless sensor network communications protocol based on Wi-Fi that allows for creating an easy-to-deploy smart plug system that self-organizes and auto-configures to collect the sensed data, minimizing user intervention. Third, it is provided a thorough description of the design of one of the few open-source smart plug systems, including its communications architecture, the protocols implemented, the main sensing and actuation components and the most relevant pieces of the software. Moreover, with the aim of illustrating the capabilities of the smart plug system, the results of different experiments performed are shown. Such experiments evaluate in real-world scenarios the system’s ease of use, its communications range and its performance when using HTTPS. Finally, the economic savings are estimated for different appliances, concluding that, in the practical situation proposed, the smart plug system allows certain energy-demanding appliances to save almost €70 per year.","",""
32,"Ιωάννης Σόφιος","Trusted execution environment",2017,"","","","",995,"2024-08-22 15:04:59","","","","",,,,,32,4.57,32,1,7,"As Mc Gillion, Dettenborn, & Nyman described, hardware-based Trusted Execution Environments (TEEs) are widely deployed in mobile devices. Yet their use has been limited primarily to applications developed by the device vendors. Recent standardization of TEE interfaces by GlobalPlatform (GP) promises to partially address this problem by enabling GP-compliant trusted applications to run on TEEs from different vendors. Nevertheless ordinary developers wishing to develop trusted applications face significant challenges. Access to hardware TEE interfaces are difficult to obtain without support from vendors. Tools and software needed to develop and debug trusted applications may be expensive or non-existent. Open-TEE conforms to GP specifications. It allows developers to develop and debug trusted applications with the same tools they use for developing software in general. Once a trusted application is fully debugged, it can be compiled for any actual hardware TEE. Through performance measurements and a user study we demonstrate that Open-TEE is efficient and easy to use. We have made OpenTEE freely available as open source","",""
